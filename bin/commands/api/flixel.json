{
	"h": {
		"flixel.FlxBasic": {
			"name": "FlxBasic",
			"path": "flixel.FlxBasic",
			"description": "This is a useful \"generic\" Flixel object. Both FlxObject and\nFlxGroup extend this class. Has no size, position or graphical data.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxBasic.html"
		},
		"flixel.FlxCamera": {
			"name": "FlxCamera",
			"path": "flixel.FlxCamera",
			"description": "The camera class is used to display the game's visuals.\nBy default one camera is created automatically, that is the same size as window.\nYou can add more cameras or even replace the main camera using utilities in FlxG.cameras.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxCamera.html"
		},
		"flixel.FlxG": {
			"name": "FlxG",
			"path": "flixel.FlxG",
			"description": "Global helper class for audio, input, the camera system, the debugger and other global properties.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxG.html"
		},
		"flixel.FlxGame": {
			"name": "FlxGame",
			"path": "flixel.FlxGame",
			"description": "FlxGame is the heart of all Flixel games, and contains a bunch of basic game loops and things.\nIt is a long and sloppy file that you shouldn't have to worry about too much!\nIt is basically only used to create your game object in the first place,\nafter that FlxG and FlxState have all the useful stuff you actually need.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxGame.html"
		},
		"flixel.FlxObject": {
			"name": "FlxObject",
			"path": "flixel.FlxObject",
			"description": "This is the base class for most of the display objects (FlxSprite, FlxText, etc).\nIt includes some basic attributes about game objects, basic state information,\nsizes, scrolling, and basic physics and motion.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxObject.html"
		},
		"flixel.FlxSprite": {
			"name": "FlxSprite",
			"path": "flixel.FlxSprite",
			"description": "The main \"game object\" class, the sprite is a FlxObject\nwith a bunch of graphics options and abilities, like animation and stamping.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxSprite.html"
		},
		"flixel.FlxState": {
			"name": "FlxState",
			"path": "flixel.FlxState",
			"description": "This is the basic game \"state\" object - e.g. in a simple game you might have a menu state and a play state.\nIt is for all intents and purpose a fancy FlxGroup. And really, it's not even that fancy.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxState.html"
		},
		"flixel.FlxStrip": {
			"name": "FlxStrip",
			"path": "flixel.FlxStrip",
			"description": "A very basic rendering component which uses drawTriangles().\nYou have access to vertices, indices and uvtData vectors which are used as data storages for rendering.\nThe whole FlxGraphic object is used as a texture for this sprite.\nUse these links for more info about drawTriangles():",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxStrip.html"
		},
		"flixel.FlxSubState": {
			"name": "FlxSubState",
			"path": "flixel.FlxSubState",
			"description": "A FlxSubState can be opened inside of a FlxState.\nBy default, it also stops the parent state from updating,\nmaking it convenient for pause screens or menus.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/FlxSubState.html"
		},
		"flixel.IFlxBasic": {
			"name": "IFlxBasic",
			"path": "flixel.IFlxBasic",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/IFlxBasic.html"
		},
		"flixel.IFlxSprite": {
			"name": "IFlxSprite",
			"path": "flixel.IFlxSprite",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/IFlxSprite.html"
		},
		"flixel.FlxType": {
			"name": "FlxType",
			"path": "flixel.FlxType",
			"description": "Types of flixel objects - mainly for collisions.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/FlxType.html"
		},
		"flixel.FlxCameraFollowStyle": {
			"name": "FlxCameraFollowStyle",
			"path": "flixel.FlxCameraFollowStyle",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/FlxCameraFollowStyle.html"
		},
		"flixel.FlxRenderMethod": {
			"name": "FlxRenderMethod",
			"path": "flixel.FlxRenderMethod",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/FlxRenderMethod.html"
		},
		"hscript.Interp": {
			"name": "Interp",
			"path": "hscript.Interp",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/hscript/Interp.html"
		},
		"hscript.Parser": {
			"name": "Parser",
			"path": "hscript.Parser",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/hscript/Parser.html"
		},
		"hscript.Tools": {
			"name": "Tools",
			"path": "hscript.Tools",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/hscript/Tools.html"
		},
		"hscript.CType": {
			"name": "CType",
			"path": "hscript.CType",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/CType.html"
		},
		"hscript.Const": {
			"name": "Const",
			"path": "hscript.Const",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/Const.html"
		},
		"hscript.Error": {
			"name": "Error",
			"path": "hscript.Error",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/Error.html"
		},
		"hscript.Expr": {
			"name": "Expr",
			"path": "hscript.Expr",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/Expr.html"
		},
		"hscript.FieldAccess": {
			"name": "FieldAccess",
			"path": "hscript.FieldAccess",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/FieldAccess.html"
		},
		"hscript.FieldKind": {
			"name": "FieldKind",
			"path": "hscript.FieldKind",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/FieldKind.html"
		},
		"hscript.ModuleDecl": {
			"name": "ModuleDecl",
			"path": "hscript.ModuleDecl",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/ModuleDecl.html"
		},
		"hscript.Token": {
			"name": "Token",
			"path": "hscript.Token",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/hscript/Token.html"
		},
		"hscript.Argument": {
			"name": "Argument",
			"path": "hscript.Argument",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/Argument.html"
		},
		"hscript.ClassDecl": {
			"name": "ClassDecl",
			"path": "hscript.ClassDecl",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/ClassDecl.html"
		},
		"hscript.ExprDef": {
			"name": "ExprDef",
			"path": "hscript.ExprDef",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/ExprDef.html"
		},
		"hscript.FieldDecl": {
			"name": "FieldDecl",
			"path": "hscript.FieldDecl",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/FieldDecl.html"
		},
		"hscript.FunctionDecl": {
			"name": "FunctionDecl",
			"path": "hscript.FunctionDecl",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/FunctionDecl.html"
		},
		"hscript.Metadata": {
			"name": "Metadata",
			"path": "hscript.Metadata",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/Metadata.html"
		},
		"hscript.ModuleType": {
			"name": "ModuleType",
			"path": "hscript.ModuleType",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/ModuleType.html"
		},
		"hscript.TypeDecl": {
			"name": "TypeDecl",
			"path": "hscript.TypeDecl",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/TypeDecl.html"
		},
		"hscript.VarDecl": {
			"name": "VarDecl",
			"path": "hscript.VarDecl",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/hscript/VarDecl.html"
		},
		"nape.Config": {
			"name": "Config",
			"path": "nape.Config",
			"description": "Configuration parameters for Nape",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/Config.html"
		},
		"openfl.Lib": {
			"name": "Lib",
			"path": "openfl.Lib",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/Lib.html"
		},
		"openfl.Vector": {
			"name": "Vector",
			"path": "openfl.Vector",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/Vector.html"
		},
		"openfl.Assets": {
			"name": "Assets",
			"path": "openfl.Assets",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/Assets.html"
		},
		"spinehaxe.ArrayUtils": {
			"name": "ArrayUtils",
			"path": "spinehaxe.ArrayUtils",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/ArrayUtils.html"
		},
		"spinehaxe.Bone": {
			"name": "Bone",
			"path": "spinehaxe.Bone",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Bone.html"
		},
		"spinehaxe.BoneData": {
			"name": "BoneData",
			"path": "spinehaxe.BoneData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/BoneData.html"
		},
		"spinehaxe.Constraint": {
			"name": "Constraint",
			"path": "spinehaxe.Constraint",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Constraint.html"
		},
		"spinehaxe.Event": {
			"name": "Event",
			"path": "spinehaxe.Event",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Event.html"
		},
		"spinehaxe.EventData": {
			"name": "EventData",
			"path": "spinehaxe.EventData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/EventData.html"
		},
		"spinehaxe.Exception": {
			"name": "Exception",
			"path": "spinehaxe.Exception",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Exception.html"
		},
		"spinehaxe.IkConstraint": {
			"name": "IkConstraint",
			"path": "spinehaxe.IkConstraint",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/IkConstraint.html"
		},
		"spinehaxe.IkConstraintData": {
			"name": "IkConstraintData",
			"path": "spinehaxe.IkConstraintData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/IkConstraintData.html"
		},
		"spinehaxe.LinkedMesh": {
			"name": "LinkedMesh",
			"path": "spinehaxe.LinkedMesh",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/LinkedMesh.html"
		},
		"spinehaxe.MathUtils": {
			"name": "MathUtils",
			"path": "spinehaxe.MathUtils",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/MathUtils.html"
		},
		"spinehaxe.PathConstraint": {
			"name": "PathConstraint",
			"path": "spinehaxe.PathConstraint",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/PathConstraint.html"
		},
		"spinehaxe.PathConstraintData": {
			"name": "PathConstraintData",
			"path": "spinehaxe.PathConstraintData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/PathConstraintData.html"
		},
		"spinehaxe.Pool": {
			"name": "Pool",
			"path": "spinehaxe.Pool",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Pool.html"
		},
		"spinehaxe.Poolable": {
			"name": "Poolable",
			"path": "spinehaxe.Poolable",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Poolable.html"
		},
		"spinehaxe.Skeleton": {
			"name": "Skeleton",
			"path": "spinehaxe.Skeleton",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Skeleton.html"
		},
		"spinehaxe.SkeletonData": {
			"name": "SkeletonData",
			"path": "spinehaxe.SkeletonData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/SkeletonData.html"
		},
		"spinehaxe.SkeletonJson": {
			"name": "SkeletonJson",
			"path": "spinehaxe.SkeletonJson",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/SkeletonJson.html"
		},
		"spinehaxe.Skin": {
			"name": "Skin",
			"path": "spinehaxe.Skin",
			"description": "Stores attachments by slot index and attachment name.",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Skin.html"
		},
		"spinehaxe.Slot": {
			"name": "Slot",
			"path": "spinehaxe.Slot",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Slot.html"
		},
		"spinehaxe.SlotData": {
			"name": "SlotData",
			"path": "spinehaxe.SlotData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/SlotData.html"
		},
		"spinehaxe.TransformConstraint": {
			"name": "TransformConstraint",
			"path": "spinehaxe.TransformConstraint",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/TransformConstraint.html"
		},
		"spinehaxe.TransformConstraintData": {
			"name": "TransformConstraintData",
			"path": "spinehaxe.TransformConstraintData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/TransformConstraintData.html"
		},
		"spinehaxe.Updatable": {
			"name": "Updatable",
			"path": "spinehaxe.Updatable",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/Updatable.html"
		},
		"spinehaxe.BlendMode": {
			"name": "BlendMode",
			"path": "spinehaxe.BlendMode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/BlendMode.html"
		},
		"spinehaxe.JsonNode": {
			"name": "JsonNode",
			"path": "spinehaxe.JsonNode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/JsonNode.html"
		},
		"spinehaxe.PositionMode": {
			"name": "PositionMode",
			"path": "spinehaxe.PositionMode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/PositionMode.html"
		},
		"spinehaxe.RotateMode": {
			"name": "RotateMode",
			"path": "spinehaxe.RotateMode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/RotateMode.html"
		},
		"spinehaxe.SpacingMode": {
			"name": "SpacingMode",
			"path": "spinehaxe.SpacingMode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/SpacingMode.html"
		},
		"spinehaxe.TransformMode": {
			"name": "TransformMode",
			"path": "spinehaxe.TransformMode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/TransformMode.html"
		},
		"spinehaxe.IllegalArgumentException": {
			"name": "IllegalArgumentException",
			"path": "spinehaxe.IllegalArgumentException",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/spinehaxe/IllegalArgumentException.html"
		},
		"spinehaxe.IllegalStateException": {
			"name": "IllegalStateException",
			"path": "spinehaxe.IllegalStateException",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/spinehaxe/IllegalStateException.html"
		},
		"spinehaxe.RuntimeException": {
			"name": "RuntimeException",
			"path": "spinehaxe.RuntimeException",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/spinehaxe/RuntimeException.html"
		},
		"spinehaxe.SerializationException": {
			"name": "SerializationException",
			"path": "spinehaxe.SerializationException",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/spinehaxe/SerializationException.html"
		},
		"flixel.animation.FlxAnimation": {
			"name": "FlxAnimation",
			"path": "flixel.animation.FlxAnimation",
			"description": "Just a helper structure for the FlxSprite animation system.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/animation/FlxAnimation.html"
		},
		"flixel.animation.FlxAnimationController": {
			"name": "FlxAnimationController",
			"path": "flixel.animation.FlxAnimationController",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/animation/FlxAnimationController.html"
		},
		"flixel.animation.FlxBaseAnimation": {
			"name": "FlxBaseAnimation",
			"path": "flixel.animation.FlxBaseAnimation",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/animation/FlxBaseAnimation.html"
		},
		"flixel.animation.FlxPrerotatedAnimation": {
			"name": "FlxPrerotatedAnimation",
			"path": "flixel.animation.FlxPrerotatedAnimation",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/animation/FlxPrerotatedAnimation.html"
		},
		"flixel.effects.FlxFlicker": {
			"name": "FlxFlicker",
			"path": "flixel.effects.FlxFlicker",
			"description": "The retro flickering effect with callbacks.\nYou can use this as a mixin in any FlxObject subclass or by calling the static functions.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/effects/FlxFlicker.html"
		},
		"flixel.graphics.FlxGraphic": {
			"name": "FlxGraphic",
			"path": "flixel.graphics.FlxGraphic",
			"description": "BitmapData wrapper which is used for rendering.\nIt stores info about all frames, generated for specific BitmapData object.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/FlxGraphic.html"
		},
		"flixel.group.FlxTypedGroup": {
			"name": "FlxTypedGroup",
			"path": "flixel.group.FlxTypedGroup",
			"description": "This is an organizational class that can update and render a bunch of FlxBasics.\nNOTE: Although FlxGroup extends FlxBasic, it will not automatically\nadd itself to the global collisions quad tree, it will only add its members.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/group/FlxTypedGroup.html"
		},
		"flixel.group.FlxTypedGroupIterator": {
			"name": "FlxTypedGroupIterator",
			"path": "flixel.group.FlxTypedGroupIterator",
			"description": "Iterator implementation for groups\nSupport a filter method (used for iteratorAlive, iteratorDead and iteratorExists)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/group/FlxTypedGroupIterator.html"
		},
		"flixel.group.FlxTypedSpriteGroup": {
			"name": "FlxTypedSpriteGroup",
			"path": "flixel.group.FlxTypedSpriteGroup",
			"description": "FlxSpriteGroup is a special FlxSprite that can be treated like\na single sprite even if it's made up of several member sprites.\nIt shares the FlxTypedGroup API, but it doesn't inherit from it.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/group/FlxTypedSpriteGroup.html"
		},
		"flixel.group.FlxGroup": {
			"name": "FlxGroup",
			"path": "flixel.group.FlxGroup",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/group/FlxGroup.html"
		},
		"flixel.group.FlxSpriteGroup": {
			"name": "FlxSpriteGroup",
			"path": "flixel.group.FlxSpriteGroup",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/group/FlxSpriteGroup.html"
		},
		"flixel.input.FlxBaseKeyList": {
			"name": "FlxBaseKeyList",
			"path": "flixel.input.FlxBaseKeyList",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/FlxBaseKeyList.html"
		},
		"flixel.input.FlxInput": {
			"name": "FlxInput",
			"path": "flixel.input.FlxInput",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/FlxInput.html"
		},
		"flixel.input.FlxKeyManager": {
			"name": "FlxKeyManager",
			"path": "flixel.input.FlxKeyManager",
			"description": "Keeps track of what keys are pressed and how with handy Bools or strings.\nAutomatically instatiated by flixel as a FlxKeyboard and accessed via FlxG.keys\nor FlxAndroidKeys with FlxG.android.\nExample: FlxG.keys.justPressed.A",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/FlxKeyManager.html"
		},
		"flixel.input.FlxPointer": {
			"name": "FlxPointer",
			"path": "flixel.input.FlxPointer",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/FlxPointer.html"
		},
		"flixel.input.FlxSwipe": {
			"name": "FlxSwipe",
			"path": "flixel.input.FlxSwipe",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/FlxSwipe.html"
		},
		"flixel.input.IFlxInput": {
			"name": "IFlxInput",
			"path": "flixel.input.IFlxInput",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/IFlxInput.html"
		},
		"flixel.input.IFlxInputManager": {
			"name": "IFlxInputManager",
			"path": "flixel.input.IFlxInputManager",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/IFlxInputManager.html"
		},
		"flixel.input.FlxInputState": {
			"name": "FlxInputState",
			"path": "flixel.input.FlxInputState",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/input/FlxInputState.html"
		},
		"flixel.math.FlxAngle": {
			"name": "FlxAngle",
			"path": "flixel.math.FlxAngle",
			"description": "A set of functions related to angle calculations.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxAngle.html"
		},
		"flixel.math.FlxCallbackPoint": {
			"name": "FlxCallbackPoint",
			"path": "flixel.math.FlxCallbackPoint",
			"description": "A FlxPoint that calls a function when set_x(), set_y() or set() is called. Used in FlxSpriteGroup.\nIMPORTANT: Calling set(x, y); is MUCH FASTER than setting x and y separately. Needs to be destroyed unlike simple FlxPoints!",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxCallbackPoint.html"
		},
		"flixel.math.FlxMath": {
			"name": "FlxMath",
			"path": "flixel.math.FlxMath",
			"description": "A class containing a set of math-related functions.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxMath.html"
		},
		"flixel.math.FlxMatrix": {
			"name": "FlxMatrix",
			"path": "flixel.math.FlxMatrix",
			"description": "Helper class for making fast matrix calculations for rendering.\nIt mostly copies Matrix class, but with some additions for\nfaster rotation by 90 degrees.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxMatrix.html"
		},
		"flixel.math.FlxPoint": {
			"name": "FlxPoint",
			"path": "flixel.math.FlxPoint",
			"description": "Stores a 2D floating point coordinate.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxPoint.html"
		},
		"flixel.math.FlxRandom": {
			"name": "FlxRandom",
			"path": "flixel.math.FlxRandom",
			"description": "A class containing a set of functions for random generation.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxRandom.html"
		},
		"flixel.math.FlxRect": {
			"name": "FlxRect",
			"path": "flixel.math.FlxRect",
			"description": "Stores a rectangle.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxRect.html"
		},
		"flixel.math.FlxVelocity": {
			"name": "FlxVelocity",
			"path": "flixel.math.FlxVelocity",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/math/FlxVelocity.html"
		},
		"flixel.math.FlxVector": {
			"name": "FlxVector",
			"path": "flixel.math.FlxVector",
			"description": "2-dimensional vector class",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/math/FlxVector.html"
		},
		"flixel.math.FlxSinCos": {
			"name": "FlxSinCos",
			"path": "flixel.math.FlxSinCos",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/math/FlxSinCos.html"
		},
		"flixel.system.FlxAssets": {
			"name": "FlxAssets",
			"path": "flixel.system.FlxAssets",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxAssets.html"
		},
		"flixel.system.FlxBGSprite": {
			"name": "FlxBGSprite",
			"path": "flixel.system.FlxBGSprite",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxBGSprite.html"
		},
		"flixel.system.FlxBasePreloader": {
			"name": "FlxBasePreloader",
			"path": "flixel.system.FlxBasePreloader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxBasePreloader.html"
		},
		"flixel.system.FlxLinkedList": {
			"name": "FlxLinkedList",
			"path": "flixel.system.FlxLinkedList",
			"description": "A miniature linked list class.\nUseful for optimizing time-critical or highly repetitive tasks!\nSee FlxQuadTree for how to use it, IF YOU DARE.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxLinkedList.html"
		},
		"flixel.system.FlxPreloader": {
			"name": "FlxPreloader",
			"path": "flixel.system.FlxPreloader",
			"description": "This is the Default HaxeFlixel Themed Preloader\nYou can make your own style of Preloader by overriding FlxPreloaderBase and using this class as an example.\nTo use your Preloader, simply change Project.xml to say: &lt;app preloader=\"class.path.MyPreloader\" /&gt;",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxPreloader.html"
		},
		"flixel.system.FlxQuadTree": {
			"name": "FlxQuadTree",
			"path": "flixel.system.FlxQuadTree",
			"description": "A fairly generic quad tree structure for rapid overlap checks.\nFlxQuadTree is also configured for single or dual list operation.\nYou can add items either to its A list or its B list.\nWhen you do an overlap check, you can compare the A list to itself,\nor the A list against the B list.  Handy for different things!",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxQuadTree.html"
		},
		"flixel.system.FlxSound": {
			"name": "FlxSound",
			"path": "flixel.system.FlxSound",
			"description": "This is the universal flixel sound object, used for streaming, music, and sound effects.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxSound.html"
		},
		"flixel.system.FlxSoundGroup": {
			"name": "FlxSoundGroup",
			"path": "flixel.system.FlxSoundGroup",
			"description": "A way of grouping sounds for things such as collective volume control",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxSoundGroup.html"
		},
		"flixel.system.FlxSplash": {
			"name": "FlxSplash",
			"path": "flixel.system.FlxSplash",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxSplash.html"
		},
		"flixel.system.FlxVersion": {
			"name": "FlxVersion",
			"path": "flixel.system.FlxVersion",
			"description": "Helper object for semantic versioning.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/FlxVersion.html"
		},
		"flixel.system.GraphicLogo": {
			"name": "GraphicLogo",
			"path": "flixel.system.GraphicLogo",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/GraphicLogo.html"
		},
		"flixel.system.GraphicVirtualInput": {
			"name": "GraphicVirtualInput",
			"path": "flixel.system.GraphicVirtualInput",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/GraphicVirtualInput.html"
		},
		"flixel.system.VirtualInputData": {
			"name": "VirtualInputData",
			"path": "flixel.system.VirtualInputData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/VirtualInputData.html"
		},
		"flixel.system.FlxAngelCodeSource": {
			"name": "FlxAngelCodeSource",
			"path": "flixel.system.FlxAngelCodeSource",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxAngelCodeSource.html"
		},
		"flixel.system.FlxBitmapFontGraphicAsset": {
			"name": "FlxBitmapFontGraphicAsset",
			"path": "flixel.system.FlxBitmapFontGraphicAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxBitmapFontGraphicAsset.html"
		},
		"flixel.system.FlxGraphicAsset": {
			"name": "FlxGraphicAsset",
			"path": "flixel.system.FlxGraphicAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxGraphicAsset.html"
		},
		"flixel.system.FlxGraphicSource": {
			"name": "FlxGraphicSource",
			"path": "flixel.system.FlxGraphicSource",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxGraphicSource.html"
		},
		"flixel.system.FlxShader": {
			"name": "FlxShader",
			"path": "flixel.system.FlxShader",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxShader.html"
		},
		"flixel.system.FlxSoundAsset": {
			"name": "FlxSoundAsset",
			"path": "flixel.system.FlxSoundAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxSoundAsset.html"
		},
		"flixel.system.FlxTexturePackerSource": {
			"name": "FlxTexturePackerSource",
			"path": "flixel.system.FlxTexturePackerSource",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxTexturePackerSource.html"
		},
		"flixel.system.FlxTilemapGraphicAsset": {
			"name": "FlxTilemapGraphicAsset",
			"path": "flixel.system.FlxTilemapGraphicAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/FlxTilemapGraphicAsset.html"
		},
		"flixel.text.FlxBitmapText": {
			"name": "FlxBitmapText",
			"path": "flixel.text.FlxBitmapText",
			"description": "Extends FlxSprite to support rendering text.\nCan tint, fade, rotate and scale just like a sprite.\nDoesn't really animate though, as far as I know.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/text/FlxBitmapText.html"
		},
		"flixel.text.FlxText": {
			"name": "FlxText",
			"path": "flixel.text.FlxText",
			"description": "Extends FlxSprite to support rendering text. Can tint, fade, rotate and scale just like a sprite. Doesn't really animate\nthough. Also does nice pixel-perfect centering on pixel fonts as long as they are only one-liners.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/text/FlxText.html"
		},
		"flixel.text.FlxTextFormat": {
			"name": "FlxTextFormat",
			"path": "flixel.text.FlxTextFormat",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/text/FlxTextFormat.html"
		},
		"flixel.text.FlxTextFormatMarkerPair": {
			"name": "FlxTextFormatMarkerPair",
			"path": "flixel.text.FlxTextFormatMarkerPair",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/text/FlxTextFormatMarkerPair.html"
		},
		"flixel.text.FlxTextAlign": {
			"name": "FlxTextAlign",
			"path": "flixel.text.FlxTextAlign",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/text/FlxTextAlign.html"
		},
		"flixel.text.FlxTextBorderStyle": {
			"name": "FlxTextBorderStyle",
			"path": "flixel.text.FlxTextBorderStyle",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/text/FlxTextBorderStyle.html"
		},
		"flixel.tile.FlxBaseTilemap": {
			"name": "FlxBaseTilemap",
			"path": "flixel.tile.FlxBaseTilemap",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxBaseTilemap.html"
		},
		"flixel.tile.FlxTile": {
			"name": "FlxTile",
			"path": "flixel.tile.FlxTile",
			"description": "A simple helper object for FlxTilemap that helps expand collision opportunities and control.\nYou can use FlxTilemap.setTileProperties() to alter the collision properties and\ncallback functions and filters for this object to do things like one-way tiles or whatever.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTile.html"
		},
		"flixel.tile.FlxTileblock": {
			"name": "FlxTileblock",
			"path": "flixel.tile.FlxTileblock",
			"description": "This is a basic \"environment object\" class, used to create simple walls and floors.\nIt can be filled with a random selection of tiles to quickly add detail.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTileblock.html"
		},
		"flixel.tile.FlxTilemap": {
			"name": "FlxTilemap",
			"path": "flixel.tile.FlxTilemap",
			"description": "This is a traditional tilemap display and collision class. It takes a string of comma-separated numbers and then associates\nthose values with tiles from the sheet you pass in. It also includes some handy static parsers that can convert\narrays or images into strings that can be loaded.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTilemap.html"
		},
		"flixel.tile.FlxTilemapBuffer": {
			"name": "FlxTilemapBuffer",
			"path": "flixel.tile.FlxTilemapBuffer",
			"description": "A helper object to keep tilemap drawing performance decent across the new multi-camera system.\nPretty much don't even have to think about this class unless you are doing some crazy hacking.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTilemapBuffer.html"
		},
		"flixel.tile.GraphicAuto": {
			"name": "GraphicAuto",
			"path": "flixel.tile.GraphicAuto",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/GraphicAuto.html"
		},
		"flixel.tile.GraphicAutoAlt": {
			"name": "GraphicAutoAlt",
			"path": "flixel.tile.GraphicAutoAlt",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/GraphicAutoAlt.html"
		},
		"flixel.tile.GraphicAutoFull": {
			"name": "GraphicAutoFull",
			"path": "flixel.tile.GraphicAutoFull",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tile/GraphicAutoFull.html"
		},
		"flixel.tile.FlxTilemapDiagonalPolicy": {
			"name": "FlxTilemapDiagonalPolicy",
			"path": "flixel.tile.FlxTilemapDiagonalPolicy",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTilemapDiagonalPolicy.html"
		},
		"flixel.tile.FlxTilemapAutoTiling": {
			"name": "FlxTilemapAutoTiling",
			"path": "flixel.tile.FlxTilemapAutoTiling",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTilemapAutoTiling.html"
		},
		"flixel.tile.FlxTileProperties": {
			"name": "FlxTileProperties",
			"path": "flixel.tile.FlxTileProperties",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/tile/FlxTileProperties.html"
		},
		"flixel.tweens.FlxEase": {
			"name": "FlxEase",
			"path": "flixel.tweens.FlxEase",
			"description": "Static class with useful easer functions that can be used by tweens.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/FlxEase.html"
		},
		"flixel.tweens.FlxTween": {
			"name": "FlxTween",
			"path": "flixel.tweens.FlxTween",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/FlxTween.html"
		},
		"flixel.tweens.FlxTweenManager": {
			"name": "FlxTweenManager",
			"path": "flixel.tweens.FlxTweenManager",
			"description": "A simple manager for tracking and updating game tween objects.\nNormally accessed via the static FlxTween.globalManager rather than being created separately.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/FlxTweenManager.html"
		},
		"flixel.tweens.EaseFunction": {
			"name": "EaseFunction",
			"path": "flixel.tweens.EaseFunction",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/tweens/EaseFunction.html"
		},
		"flixel.tweens.TweenCallback": {
			"name": "TweenCallback",
			"path": "flixel.tweens.TweenCallback",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/tweens/TweenCallback.html"
		},
		"flixel.tweens.TweenOptions": {
			"name": "TweenOptions",
			"path": "flixel.tweens.TweenOptions",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/tweens/TweenOptions.html"
		},
		"flixel.ui.FlxAnalog": {
			"name": "FlxAnalog",
			"path": "flixel.ui.FlxAnalog",
			"description": "A virtual thumbstick - useful for input on mobile devices.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxAnalog.html"
		},
		"flixel.ui.FlxBar": {
			"name": "FlxBar",
			"path": "flixel.ui.FlxBar",
			"description": "FlxBar is a quick and easy way to create a graphical bar which can\nbe used as part of your UI/HUD, or positioned next to a sprite.\nIt could represent a loader, progress or health bar.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxBar.html"
		},
		"flixel.ui.FlxBitmapTextButton": {
			"name": "FlxBitmapTextButton",
			"path": "flixel.ui.FlxBitmapTextButton",
			"description": "A button with FlxBitmapText field as a label.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxBitmapTextButton.html"
		},
		"flixel.ui.FlxButton": {
			"name": "FlxButton",
			"path": "flixel.ui.FlxButton",
			"description": "A simple button class that calls a function when clicked by the mouse.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxButton.html"
		},
		"flixel.ui.FlxSpriteButton": {
			"name": "FlxSpriteButton",
			"path": "flixel.ui.FlxSpriteButton",
			"description": "A simple button class that calls a function when clicked by the mouse.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxSpriteButton.html"
		},
		"flixel.ui.FlxTypedButton": {
			"name": "FlxTypedButton",
			"path": "flixel.ui.FlxTypedButton",
			"description": "A simple button class that calls a function when clicked by the mouse.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxTypedButton.html"
		},
		"flixel.ui.FlxVirtualPad": {
			"name": "FlxVirtualPad",
			"path": "flixel.ui.FlxVirtualPad",
			"description": "A gamepad which contains 4 directional buttons and 4 action buttons.\nIt's easy to set the callbacks and to customize the layout.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxVirtualPad.html"
		},
		"flixel.ui.FlxActionMode": {
			"name": "FlxActionMode",
			"path": "flixel.ui.FlxActionMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxActionMode.html"
		},
		"flixel.ui.FlxBarFillDirection": {
			"name": "FlxBarFillDirection",
			"path": "flixel.ui.FlxBarFillDirection",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxBarFillDirection.html"
		},
		"flixel.ui.FlxDPadMode": {
			"name": "FlxDPadMode",
			"path": "flixel.ui.FlxDPadMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/ui/FlxDPadMode.html"
		},
		"flixel.util.FlxArrayUtil": {
			"name": "FlxArrayUtil",
			"path": "flixel.util.FlxArrayUtil",
			"description": "A set of functions for array manipulation.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxArrayUtil.html"
		},
		"flixel.util.FlxBitmapDataPool": {
			"name": "FlxBitmapDataPool",
			"path": "flixel.util.FlxBitmapDataPool",
			"description": "BitmapData pool class.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxBitmapDataPool.html"
		},
		"flixel.util.FlxBitmapDataUtil": {
			"name": "FlxBitmapDataUtil",
			"path": "flixel.util.FlxBitmapDataUtil",
			"description": "Just a collection of BitmapData utility methods.\nJust for cross-platform stuff, since not all methods are implemented across all targets.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxBitmapDataUtil.html"
		},
		"flixel.util.FlxCollision": {
			"name": "FlxCollision",
			"path": "flixel.util.FlxCollision",
			"description": "FlxCollision",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxCollision.html"
		},
		"flixel.util.FlxColorTransformUtil": {
			"name": "FlxColorTransformUtil",
			"path": "flixel.util.FlxColorTransformUtil",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxColorTransformUtil.html"
		},
		"flixel.util.FlxDestroyUtil": {
			"name": "FlxDestroyUtil",
			"path": "flixel.util.FlxDestroyUtil",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxDestroyUtil.html"
		},
		"flixel.util.FlxGradient": {
			"name": "FlxGradient",
			"path": "flixel.util.FlxGradient",
			"description": "Adds a set of color gradient creation / rendering functions",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxGradient.html"
		},
		"flixel.util.FlxPath": {
			"name": "FlxPath",
			"path": "flixel.util.FlxPath",
			"description": "This is a simple path data container. Basically a list of points that\na FlxObject can follow.  Also has code for drawing debug visuals.\nFlxTilemap.findPath() returns a path usable by FlxPath, but you can\nalso just make your own, using the add() functions below\nor by creating your own array of points.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxPath.html"
		},
		"flixel.util.FlxPool": {
			"name": "FlxPool",
			"path": "flixel.util.FlxPool",
			"description": "A generic container that facilitates pooling and recycling of objects.\nWARNING: Pooled objects must have parameter-less constructors: function new()",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxPool.html"
		},
		"flixel.util.FlxSave": {
			"name": "FlxSave",
			"path": "flixel.util.FlxSave",
			"description": "A class to help automate and simplify save game functionality.\nBasically a wrapper for the Flash SharedObject thing, but\nhandles some annoying storage request stuff too.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxSave.html"
		},
		"flixel.util.FlxSort": {
			"name": "FlxSort",
			"path": "flixel.util.FlxSort",
			"description": "Helper class for sort() in FlxTypedGroup, but could theoretically be used on regular arrays as well.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxSort.html"
		},
		"flixel.util.FlxSpriteUtil": {
			"name": "FlxSpriteUtil",
			"path": "flixel.util.FlxSpriteUtil",
			"description": "Some handy functions for FlxSprite (FlxObject) manipulation, mostly drawing-related.\nNote that stage quality impacts the results of the draw() functions -\nuse FlxG.stage.quality = flash.display.StageQuality.BEST; for best results.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxSpriteUtil.html"
		},
		"flixel.util.FlxStringUtil": {
			"name": "FlxStringUtil",
			"path": "flixel.util.FlxStringUtil",
			"description": "A class primarily containing functions related\nto formatting different data types to strings.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxStringUtil.html"
		},
		"flixel.util.FlxTimer": {
			"name": "FlxTimer",
			"path": "flixel.util.FlxTimer",
			"description": "A simple timer class, leveraging the new plugins system.\nCan be used with callbacks or by polling the finished flag.\nNot intended to be added to a game state or group; the timer manager\nis responsible for actually calling update(), not the user.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxTimer.html"
		},
		"flixel.util.FlxTimerManager": {
			"name": "FlxTimerManager",
			"path": "flixel.util.FlxTimerManager",
			"description": "A simple manager for tracking and updating game timer objects.\nNormally accessed via the static FlxTimer.manager rather than being created separately.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/FlxTimerManager.html"
		},
		"flixel.util.IFlxDestroyable": {
			"name": "IFlxDestroyable",
			"path": "flixel.util.IFlxDestroyable",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/IFlxDestroyable.html"
		},
		"flixel.util.IFlxPool": {
			"name": "IFlxPool",
			"path": "flixel.util.IFlxPool",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/IFlxPool.html"
		},
		"flixel.util.IFlxPooled": {
			"name": "IFlxPooled",
			"path": "flixel.util.IFlxPooled",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/IFlxPooled.html"
		},
		"flixel.util.IFlxSignal": {
			"name": "IFlxSignal",
			"path": "flixel.util.IFlxSignal",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/IFlxSignal.html"
		},
		"flixel.util.LabelValuePair": {
			"name": "LabelValuePair",
			"path": "flixel.util.LabelValuePair",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/LabelValuePair.html"
		},
		"flixel.util.FlxColor": {
			"name": "FlxColor",
			"path": "flixel.util.FlxColor",
			"description": "Class representing a color, based on Int. Provides a variety of methods for creating and converting colors.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/FlxColor.html"
		},
		"flixel.util.FlxDirection": {
			"name": "FlxDirection",
			"path": "flixel.util.FlxDirection",
			"description": "Simple enum for orthogonal directions. Can be combined into FlxDirectionFlags.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/FlxDirection.html"
		},
		"flixel.util.FlxDirectionFlags": {
			"name": "FlxDirectionFlags",
			"path": "flixel.util.FlxDirectionFlags",
			"description": "Uses bit flags to create a list of orthogonal directions. useful for\nmany FlxObject features like allowCollisions and touching.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/FlxDirectionFlags.html"
		},
		"flixel.util.FlxTypedSignal": {
			"name": "FlxTypedSignal",
			"path": "flixel.util.FlxTypedSignal",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/FlxTypedSignal.html"
		},
		"flixel.util.FlxAxes": {
			"name": "FlxAxes",
			"path": "flixel.util.FlxAxes",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/util/FlxAxes.html"
		},
		"flixel.util.FlxHorizontalAlign": {
			"name": "FlxHorizontalAlign",
			"path": "flixel.util.FlxHorizontalAlign",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/util/FlxHorizontalAlign.html"
		},
		"flixel.util.FlxSaveStatus": {
			"name": "FlxSaveStatus",
			"path": "flixel.util.FlxSaveStatus",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/util/FlxSaveStatus.html"
		},
		"flixel.util.FlxVerticalAlign": {
			"name": "FlxVerticalAlign",
			"path": "flixel.util.FlxVerticalAlign",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/util/FlxVerticalAlign.html"
		},
		"flixel.util.DrawStyle": {
			"name": "DrawStyle",
			"path": "flixel.util.DrawStyle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/DrawStyle.html"
		},
		"flixel.util.FlxSignal": {
			"name": "FlxSignal",
			"path": "flixel.util.FlxSignal",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/FlxSignal.html"
		},
		"flixel.util.GradientMatrix": {
			"name": "GradientMatrix",
			"path": "flixel.util.GradientMatrix",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/GradientMatrix.html"
		},
		"flixel.util.Harmony": {
			"name": "Harmony",
			"path": "flixel.util.Harmony",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/Harmony.html"
		},
		"flixel.util.LineStyle": {
			"name": "LineStyle",
			"path": "flixel.util.LineStyle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/LineStyle.html"
		},
		"flixel.util.TriadicHarmony": {
			"name": "TriadicHarmony",
			"path": "flixel.util.TriadicHarmony",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/util/TriadicHarmony.html"
		},
		"lime.app.Application": {
			"name": "Application",
			"path": "lime.app.Application",
			"description": "The Application class forms the foundation for most Lime projects.\nIt is common to extend this class in a main class. It is then possible\nto override \"on\" functions in the class in order to handle standard events\nthat are relevant.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/Application.html"
		},
		"lime.app.Event": {
			"name": "Event",
			"path": "lime.app.Event",
			"description": "Event is a strictly-typed signals and slots implementation, used for\ncore event dispatching.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/Event.html"
		},
		"lime.app.Future": {
			"name": "Future",
			"path": "lime.app.Future",
			"description": "Future is an implementation of Futures and Promises, with the exception that\nin addition to \"success\" and \"failure\" states (represented as \"complete\" and \"error\"),\nLime Future introduces \"progress\" feedback as well to increase the value of\nFuture values.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/Future.html"
		},
		"lime.app.IModule": {
			"name": "IModule",
			"path": "lime.app.IModule",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/IModule.html"
		},
		"lime.app.Module": {
			"name": "Module",
			"path": "lime.app.Module",
			"description": "Module instances can be added to a running Application,\nsimplifying support for adding new components, such as a renderer,\ninput handler or higher-level framework.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/Module.html"
		},
		"lime.app.Promise": {
			"name": "Promise",
			"path": "lime.app.Promise",
			"description": "Promise is an implementation of Futures and Promises, with the exception that\nin addition to \"success\" and \"failure\" states (represented as \"complete\" and \"error\"),\nLime Future introduces \"progress\" feedback as well to increase the value of\nFuture values.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/app/Promise.html"
		},
		"lime.graphics.Image": {
			"name": "Image",
			"path": "lime.graphics.Image",
			"description": "Image is a convenience class for working with bitmap images in Lime.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/Image.html"
		},
		"lime.graphics.ImageBuffer": {
			"name": "ImageBuffer",
			"path": "lime.graphics.ImageBuffer",
			"description": "ImageBuffer is a simple object for storing image data.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/ImageBuffer.html"
		},
		"lime.graphics.RenderContext": {
			"name": "RenderContext",
			"path": "lime.graphics.RenderContext",
			"description": "The RenderContext provides access to rendering for a Lime Window.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/RenderContext.html"
		},
		"lime.graphics.CairoRenderContext": {
			"name": "CairoRenderContext",
			"path": "lime.graphics.CairoRenderContext",
			"description": "The CairoRenderContext represents the primary lime.graphics.Cairo instance when Cairo\nis the render context type of the Window.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/CairoRenderContext.html"
		},
		"lime.graphics.Canvas2DRenderContext": {
			"name": "Canvas2DRenderContext",
			"path": "lime.graphics.Canvas2DRenderContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/Canvas2DRenderContext.html"
		},
		"lime.graphics.DOMRenderContext": {
			"name": "DOMRenderContext",
			"path": "lime.graphics.DOMRenderContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/DOMRenderContext.html"
		},
		"lime.graphics.FlashRenderContext": {
			"name": "FlashRenderContext",
			"path": "lime.graphics.FlashRenderContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/FlashRenderContext.html"
		},
		"lime.graphics.OpenGLES2RenderContext": {
			"name": "OpenGLES2RenderContext",
			"path": "lime.graphics.OpenGLES2RenderContext",
			"description": "The OpenGLES2RenderContext allows access to OpenGL ES 2.0 features when OpenGL or\nOpenGL ES is the render context type of the Window.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/OpenGLES2RenderContext.html"
		},
		"lime.graphics.OpenGLES3RenderContext": {
			"name": "OpenGLES3RenderContext",
			"path": "lime.graphics.OpenGLES3RenderContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/OpenGLES3RenderContext.html"
		},
		"lime.graphics.OpenGLRenderContext": {
			"name": "OpenGLRenderContext",
			"path": "lime.graphics.OpenGLRenderContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/OpenGLRenderContext.html"
		},
		"lime.graphics.PixelFormat": {
			"name": "PixelFormat",
			"path": "lime.graphics.PixelFormat",
			"description": "An enum containing different pixel encoding formats for image data",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/PixelFormat.html"
		},
		"lime.graphics.RenderContextType": {
			"name": "RenderContextType",
			"path": "lime.graphics.RenderContextType",
			"description": "An enum for possible render context types",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/RenderContextType.html"
		},
		"lime.graphics.WebGL2RenderContext": {
			"name": "WebGL2RenderContext",
			"path": "lime.graphics.WebGL2RenderContext",
			"description": "The WebGL2RenderContext allows access to WebGL 2 features when OpenGL, OpenGL ES\nor WebGL is the render context type of the Window, and the current context supports\nWebGL 2 features.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/WebGL2RenderContext.html"
		},
		"lime.graphics.WebGLRenderContext": {
			"name": "WebGLRenderContext",
			"path": "lime.graphics.WebGLRenderContext",
			"description": "The WebGLRenderContext allows access to WebGL features when OpenGL, OpenGL ES or\nWebGL is the render context type of the Window.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/WebGLRenderContext.html"
		},
		"lime.graphics.ImageChannel": {
			"name": "ImageChannel",
			"path": "lime.graphics.ImageChannel",
			"description": "An enum with values for standard image color channels",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/graphics/ImageChannel.html"
		},
		"lime.graphics.ImageFileFormat": {
			"name": "ImageFileFormat",
			"path": "lime.graphics.ImageFileFormat",
			"description": "An enum with values for image encoding formats",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/graphics/ImageFileFormat.html"
		},
		"lime.graphics.ImageType": {
			"name": "ImageType",
			"path": "lime.graphics.ImageType",
			"description": "An enum containing values for the underlying image type\nrepresented by an ImageBuffer",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/graphics/ImageType.html"
		},
		"lime.graphics.RenderContextAttributes": {
			"name": "RenderContextAttributes",
			"path": "lime.graphics.RenderContextAttributes",
			"description": "Additional options possible for a render context",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/RenderContextAttributes.html"
		},
		"lime.math.Matrix3": {
			"name": "Matrix3",
			"path": "lime.math.Matrix3",
			"description": "Matrix3 is a 3x3 transformation matrix particularly useful for\ntwo-dimensional transformation. It can be used for rotation, scale\nand skewing of a two-dimensional object.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/math/Matrix3.html"
		},
		"lime.math.Rectangle": {
			"name": "Rectangle",
			"path": "lime.math.Rectangle",
			"description": "The Rectangle class provides a simple object for storing\nand manipulating a logical rectangle for calculations",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/math/Rectangle.html"
		},
		"lime.math.Vector2": {
			"name": "Vector2",
			"path": "lime.math.Vector2",
			"description": "The Vector2 class can be used for calculating math with\nbasic (x, y) coordinates",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/math/Vector2.html"
		},
		"lime.math.Vector4": {
			"name": "Vector4",
			"path": "lime.math.Vector4",
			"description": "Vector4 is a vector suitable for three-dimensional\nmath, containing (x, y, z, w) components",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/math/Vector4.html"
		},
		"lime.math.ARGB": {
			"name": "ARGB",
			"path": "lime.math.ARGB",
			"description": "A utility for storing, accessing and converting colors in an ARGB\n(alpha, red, green, blue) color format.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/math/ARGB.html"
		},
		"lime.math.BGRA": {
			"name": "BGRA",
			"path": "lime.math.BGRA",
			"description": "A utility for storing, accessing and converting colors in a BGRA\n(blue, green, red, alpha) color format.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/math/BGRA.html"
		},
		"lime.math.ColorMatrix": {
			"name": "ColorMatrix",
			"path": "lime.math.ColorMatrix",
			"description": "ColorMatrix is a 4x5 matrix containing color multiplication\nand offset values for tinting and other kinds of color\nmanipulation. In addition to using the multiplier, offset and\ncolor properties, it can be edited directly as a Float32Array",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/math/ColorMatrix.html"
		},
		"lime.math.RGBA": {
			"name": "RGBA",
			"path": "lime.math.RGBA",
			"description": "A utility for storing, accessing and converting colors in an RGBA\n(red, green, blue, alpha) color format.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/math/RGBA.html"
		},
		"lime.media.AudioBuffer": {
			"name": "AudioBuffer",
			"path": "lime.media.AudioBuffer",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/AudioBuffer.html"
		},
		"lime.media.AudioContext": {
			"name": "AudioContext",
			"path": "lime.media.AudioContext",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/AudioContext.html"
		},
		"lime.media.AudioManager": {
			"name": "AudioManager",
			"path": "lime.media.AudioManager",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/AudioManager.html"
		},
		"lime.media.FlashAudioContext": {
			"name": "FlashAudioContext",
			"path": "lime.media.FlashAudioContext",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/FlashAudioContext.html"
		},
		"lime.media.HTML5AudioContext": {
			"name": "HTML5AudioContext",
			"path": "lime.media.HTML5AudioContext",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/HTML5AudioContext.html"
		},
		"lime.media.OpenALAudioContext": {
			"name": "OpenALAudioContext",
			"path": "lime.media.OpenALAudioContext",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/OpenALAudioContext.html"
		},
		"lime.media.WebAudioContext": {
			"name": "WebAudioContext",
			"path": "lime.media.WebAudioContext",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/WebAudioContext.html"
		},
		"lime.media.AudioContextType": {
			"name": "AudioContextType",
			"path": "lime.media.AudioContextType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/AudioContextType.html"
		},
		"lime.net.HTTPRequest": {
			"name": "HTTPRequest",
			"path": "lime.net.HTTPRequest",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/net/HTTPRequest.html"
		},
		"lime.net.HTTPRequestHeader": {
			"name": "HTTPRequestHeader",
			"path": "lime.net.HTTPRequestHeader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/net/HTTPRequestHeader.html"
		},
		"lime.net.HTTPRequestMethod": {
			"name": "HTTPRequestMethod",
			"path": "lime.net.HTTPRequestMethod",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/net/HTTPRequestMethod.html"
		},
		"lime.system.CFFI": {
			"name": "CFFI",
			"path": "lime.system.CFFI",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/system/CFFI.html"
		},
		"lime.system.Display": {
			"name": "Display",
			"path": "lime.system.Display",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/system/Display.html"
		},
		"lime.system.DisplayMode": {
			"name": "DisplayMode",
			"path": "lime.system.DisplayMode",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/system/DisplayMode.html"
		},
		"lime.system.System": {
			"name": "System",
			"path": "lime.system.System",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/system/System.html"
		},
		"lime.system.ThreadPool": {
			"name": "ThreadPool",
			"path": "lime.system.ThreadPool",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/system/ThreadPool.html"
		},
		"lime.system.CFFIPointer": {
			"name": "CFFIPointer",
			"path": "lime.system.CFFIPointer",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/system/CFFIPointer.html"
		},
		"lime.system.Endian": {
			"name": "Endian",
			"path": "lime.system.Endian",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/system/Endian.html"
		},
		"lime.text.Font": {
			"name": "Font",
			"path": "lime.text.Font",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/text/Font.html"
		},
		"lime.text.GlyphMetrics": {
			"name": "GlyphMetrics",
			"path": "lime.text.GlyphMetrics",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/text/GlyphMetrics.html"
		},
		"lime.text.Glyph": {
			"name": "Glyph",
			"path": "lime.text.Glyph",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/text/Glyph.html"
		},
		"lime.text.NativeFontData": {
			"name": "NativeFontData",
			"path": "lime.text.NativeFontData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/text/NativeFontData.html"
		},
		"lime.text.NativeGlyphData": {
			"name": "NativeGlyphData",
			"path": "lime.text.NativeGlyphData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/text/NativeGlyphData.html"
		},
		"lime.text.NativeKerningData": {
			"name": "NativeKerningData",
			"path": "lime.text.NativeKerningData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/text/NativeKerningData.html"
		},
		"lime.ui.Gamepad": {
			"name": "Gamepad",
			"path": "lime.ui.Gamepad",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/ui/Gamepad.html"
		},
		"lime.ui.Joystick": {
			"name": "Joystick",
			"path": "lime.ui.Joystick",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/ui/Joystick.html"
		},
		"lime.ui.Touch": {
			"name": "Touch",
			"path": "lime.ui.Touch",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/ui/Touch.html"
		},
		"lime.ui.Window": {
			"name": "Window",
			"path": "lime.ui.Window",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/ui/Window.html"
		},
		"lime.ui.GamepadAxis": {
			"name": "GamepadAxis",
			"path": "lime.ui.GamepadAxis",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/GamepadAxis.html"
		},
		"lime.ui.GamepadButton": {
			"name": "GamepadButton",
			"path": "lime.ui.GamepadButton",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/GamepadButton.html"
		},
		"lime.ui.JoystickHatPosition": {
			"name": "JoystickHatPosition",
			"path": "lime.ui.JoystickHatPosition",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/JoystickHatPosition.html"
		},
		"lime.ui.KeyCode": {
			"name": "KeyCode",
			"path": "lime.ui.KeyCode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/KeyCode.html"
		},
		"lime.ui.KeyModifier": {
			"name": "KeyModifier",
			"path": "lime.ui.KeyModifier",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/KeyModifier.html"
		},
		"lime.ui.MouseButton": {
			"name": "MouseButton",
			"path": "lime.ui.MouseButton",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/MouseButton.html"
		},
		"lime.ui.ScanCode": {
			"name": "ScanCode",
			"path": "lime.ui.ScanCode",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/ui/ScanCode.html"
		},
		"lime.ui.MouseCursor": {
			"name": "MouseCursor",
			"path": "lime.ui.MouseCursor",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/ui/MouseCursor.html"
		},
		"lime.ui.MouseWheelMode": {
			"name": "MouseWheelMode",
			"path": "lime.ui.MouseWheelMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/ui/MouseWheelMode.html"
		},
		"lime.ui.WindowAttributes": {
			"name": "WindowAttributes",
			"path": "lime.ui.WindowAttributes",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/ui/WindowAttributes.html"
		},
		"lime.utils.ArrayBufferView": {
			"name": "ArrayBufferView",
			"path": "lime.utils.ArrayBufferView",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/ArrayBufferView.html"
		},
		"lime.utils.AssetBundle": {
			"name": "AssetBundle",
			"path": "lime.utils.AssetBundle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/AssetBundle.html"
		},
		"lime.utils.AssetCache": {
			"name": "AssetCache",
			"path": "lime.utils.AssetCache",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/AssetCache.html"
		},
		"lime.utils.AssetLibrary": {
			"name": "AssetLibrary",
			"path": "lime.utils.AssetLibrary",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/AssetLibrary.html"
		},
		"lime.utils.AssetManifest": {
			"name": "AssetManifest",
			"path": "lime.utils.AssetManifest",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/AssetManifest.html"
		},
		"lime.utils.Assets": {
			"name": "Assets",
			"path": "lime.utils.Assets",
			"description": "The Assets class provides a cross-platform interface to access\nembedded images, fonts, sounds and other resource files.",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/Assets.html"
		},
		"lime.utils.Log": {
			"name": "Log",
			"path": "lime.utils.Log",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/Log.html"
		},
		"lime.utils.Preloader": {
			"name": "Preloader",
			"path": "lime.utils.Preloader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/utils/Preloader.html"
		},
		"lime.utils.ArrayBuffer": {
			"name": "ArrayBuffer",
			"path": "lime.utils.ArrayBuffer",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/ArrayBuffer.html"
		},
		"lime.utils.AssetType": {
			"name": "AssetType",
			"path": "lime.utils.AssetType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/AssetType.html"
		},
		"lime.utils.BytePointer": {
			"name": "BytePointer",
			"path": "lime.utils.BytePointer",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/BytePointer.html"
		},
		"lime.utils.Bytes": {
			"name": "Bytes",
			"path": "lime.utils.Bytes",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Bytes.html"
		},
		"lime.utils.DataPointer": {
			"name": "DataPointer",
			"path": "lime.utils.DataPointer",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/DataPointer.html"
		},
		"lime.utils.Float32Array": {
			"name": "Float32Array",
			"path": "lime.utils.Float32Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Float32Array.html"
		},
		"lime.utils.Float64Array": {
			"name": "Float64Array",
			"path": "lime.utils.Float64Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Float64Array.html"
		},
		"lime.utils.Int16Array": {
			"name": "Int16Array",
			"path": "lime.utils.Int16Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Int16Array.html"
		},
		"lime.utils.Int32Array": {
			"name": "Int32Array",
			"path": "lime.utils.Int32Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Int32Array.html"
		},
		"lime.utils.Int8Array": {
			"name": "Int8Array",
			"path": "lime.utils.Int8Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/Int8Array.html"
		},
		"lime.utils.LogLevel": {
			"name": "LogLevel",
			"path": "lime.utils.LogLevel",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/LogLevel.html"
		},
		"lime.utils.UInt16Array": {
			"name": "UInt16Array",
			"path": "lime.utils.UInt16Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/UInt16Array.html"
		},
		"lime.utils.UInt32Array": {
			"name": "UInt32Array",
			"path": "lime.utils.UInt32Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/UInt32Array.html"
		},
		"lime.utils.UInt8Array": {
			"name": "UInt8Array",
			"path": "lime.utils.UInt8Array",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/UInt8Array.html"
		},
		"lime.utils.UInt8ClampedArray": {
			"name": "UInt8ClampedArray",
			"path": "lime.utils.UInt8ClampedArray",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/utils/UInt8ClampedArray.html"
		},
		"lime.utils.CompressionAlgorithm": {
			"name": "CompressionAlgorithm",
			"path": "lime.utils.CompressionAlgorithm",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/lime/utils/CompressionAlgorithm.html"
		},
		"nape.callbacks.BodyCallback": {
			"name": "BodyCallback",
			"path": "nape.callbacks.BodyCallback",
			"description": "Callback object for Body type events.\n\nThis, like all other callback objects are automatically reused\nand you should not keep any reference to them.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/BodyCallback.html"
		},
		"nape.callbacks.BodyListener": {
			"name": "BodyListener",
			"path": "nape.callbacks.BodyListener",
			"description": "Event listener for Body type events.\n\nThe events that can be caught are WAKE and SLEEP type events.\nTheses listeners will only operate on Bodys, not Interactors in general.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/BodyListener.html"
		},
		"nape.callbacks.Callback": {
			"name": "Callback",
			"path": "nape.callbacks.Callback",
			"description": "Base type for Callback event objects.\n\nCallback objects are automatically reused and you should not keep references\nto them.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/Callback.html"
		},
		"nape.callbacks.CbEvent": {
			"name": "CbEvent",
			"path": "nape.callbacks.CbEvent",
			"description": "Enumeration of possible callback event types.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/CbEvent.html"
		},
		"nape.callbacks.CbType": {
			"name": "CbType",
			"path": "nape.callbacks.CbType",
			"description": "Callback Type applied to Interactors and Constraints.\n\nCallback types are ranged over by listeners.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/CbType.html"
		},
		"nape.callbacks.CbTypeList": {
			"name": "CbTypeList",
			"path": "nape.callbacks.CbTypeList",
			"description": "Nape list of CbType type objects\n\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/ConstraintCallback.html\" title=\"nape.callbacks.ConstraintCallback\">ConstraintCallback</a></td><td><p>Callback object for Constraint type events.\n<br/><br/>\nThis, like all other callback objects are automatically reused\nand you should not keep any reference to them.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/ConstraintListener.html\" title=\"nape.callbacks.ConstraintListener\">ConstraintListener</a></td><td><p>Event listener for Constraint type events.\n<br/><br/>\nThe events that can be caught are WAKE, SLEEP and BREAK type events.\nTheses listeners will only operate on Constraints.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/InteractionCallback.html\" title=\"nape.callbacks.InteractionCallback\">InteractionCallback</a></td><td><p>Callback object for Interaction type events.\n<br/><br/>\nThis, like all other callback objects are automatically reused\nand you should not keep any reference to them.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/InteractionListener.html\" title=\"nape.callbacks.InteractionListener\">InteractionListener</a></td><td><p>Event listener for Interaction type events.\n<br/><br/>\nInteraction type events can occur between any two Interactors (whether they\nbe Shapes, Bodys, Compounds or a mix thereof).\n<br/><br/>\nThe events that can be caught are BEGIN, ONGOING, and END type events.\nTheses listeners will operate between pairs of Interactors.\n<pre></p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/InteractionType.html\" title=\"nape.callbacks.InteractionType\">InteractionType</a></td><td><p>Enumeration of Interaction types.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/Listener.html\" title=\"nape.callbacks.Listener\">Listener</a></td><td><p>Base type for all Nape callback listeners.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/ListenerIterator.html\" title=\"nape.callbacks.ListenerIterator\">ListenerIterator</a></td><td><p>Haxe Iterator<T> compatible iterator over Nape list.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/ListenerList.html\" title=\"nape.callbacks.ListenerList\">ListenerList</a></td><td><p>Nape list of Listener type objects\n<br/><br/>\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n<br/><br/>\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n<pre>\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/ListenerType.html\" title=\"nape.callbacks.ListenerType\">ListenerType</a></td><td><p>Enumeration of Listener types.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/callbacks/OptionType.html\" title=\"nape.callbacks.OptionType\">OptionType</a></td><td><p>OptionType representing matching behaviour for Listeners.\n<br/><br/>\nAn object's set of CbType's 'matches' against an OptionType iff.\nthe OptionType's includes list intersects the object's set of CbTypes\nand the OptionType's excludes list 'does not' intersect the object's set\nof CbTypes.\n<pre>\noption = new OptionType([A, B], [C, D]);\nobj.cbTypes = [] // => does not match option.\nobj.cbTypes = [A] // => matches the option\nobj.cbTypes = [A, C] // => does not match option.\n\nThe optionType's includes and excludes list are managed to be always\ndisjoint: The action of including an already excluded type serves to\nremove it from the excludes list, equalliy excluding an already included\ntype serves to remove it from the includes list.\n\nvar option = new OptionType();\noption.including(A); // option = {[A]:[]}\noption.excluding(A); // option = {[]:[]}\noption.excluding(A); // option = {[]:[A]}\noption.including(A); // option = {[A]:[]}\n",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/CbTypeList.html"
		},
		"nape.callbacks.PreCallback": {
			"name": "PreCallback",
			"path": "nape.callbacks.PreCallback",
			"description": "Callback object for Pre-Interaction type events.\n\nThis, like all other callback objects are automatically reused\nand you should not keep any reference to them.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/PreCallback.html"
		},
		"nape.callbacks.PreFlag": {
			"name": "PreFlag",
			"path": "nape.callbacks.PreFlag",
			"description": "Enumeration of interaction states for arbiters. These values are returned\nby PreListener callback handlers.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/PreFlag.html"
		},
		"nape.callbacks.PreListener": {
			"name": "PreListener",
			"path": "nape.callbacks.PreListener",
			"description": "Event listener for Pre-Interaction type events.\n\nPre-Interaction type events can occur between any two Interactors (whether they\nbe Shapes, Bodys, Compounds or a mix thereof).",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/callbacks/PreListener.html"
		},
		"nape.constraint.AngleJoint": {
			"name": "AngleJoint",
			"path": "nape.constraint.AngleJoint",
			"description": "AngleJoint constraining the relative angles of two Bodies.\n\nThe equation for this constraint is:\n\njointMin &lt;= ratio * body2.rotation - body1.rotation &lt;= jointMax\n",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/AngleJoint.html"
		},
		"nape.constraint.Constraint": {
			"name": "Constraint",
			"path": "nape.constraint.Constraint",
			"description": "Base type for all Nape joints and constraints",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/Constraint.html"
		},
		"nape.constraint.ConstraintList": {
			"name": "ConstraintList",
			"path": "nape.constraint.ConstraintList",
			"description": "Nape list of Constraint type objects\n\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/constraint/DistanceJoint.html\" title=\"nape.constraint.DistanceJoint\">DistanceJoint</a></td><td><p>DistanceJoint limiting the distance between two local anchor points of Bodies.\n<br/><br/>\nThe equation for this constraint could be written like:\n<pre>\njointMin &lt;= distance(body2.localPointToWorld(anchor2), body1.localPointToWorld(anchor1)) &lt;= jointMax\n\nThis joint is not designed to work when  jointMin = jointMax = 0  and constraint is\nstiff. In this instance you should use a PivotJoint instead.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/ConstraintList.html"
		},
		"nape.constraint.LineJoint": {
			"name": "LineJoint",
			"path": "nape.constraint.LineJoint",
			"description": "LineJoint constraining anchor of one body, to a line segment of the other.\n\nThe equation for this constraint could be written like:\n</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/constraint/MotorJoint.html\" title=\"nape.constraint.MotorJoint\">MotorJoint</a></td><td><p>MotorJoint constraining the angular velocities of two bodies\n<br/><br/>\nThe equation for this constraint is:\n<pre>\n(ratio * body2.angularVel) - body1.angularVel = rate\n\nThis constraint operates only on the velocities of objects.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/LineJoint.html"
		},
		"nape.constraint.PivotJoint": {
			"name": "PivotJoint",
			"path": "nape.constraint.PivotJoint",
			"description": "PivotJoint constraining two anchors points of bodies to be equal.\n\nThe equation for this constraint is:\n\nbody2.localPointToWorld(anchor2) = body1.localPointToWorld(anchor1)\n\nYou may view this constraint as being equal to the DistanceJoint constraint\nwhen both its jointMin and jointMax are exactly 0 (In such a case a\nDistanceJoint becomes degenerate). Compared to the DistanceJoint this is\na 2 dimensional constraint.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/PivotJoint.html"
		},
		"nape.constraint.PulleyJoint": {
			"name": "PulleyJoint",
			"path": "nape.constraint.PulleyJoint",
			"description": "PulleyJoint limiting the weighted sum of distances between 2 pairs of 4 local anchor points of Bodies.\n\nThe equation for this constraint could be written like:\n\njointMin &lt;= distance(body2.localPointToWorld(anchor2), body1.localPointToWorld(anchor1))\n+ ratio * distance(body4.localPointToWorld(anchor4), body3.localPointToWorld(anchor3)) &lt;= jointMax\n\nThis joint is not designed to work when either of these pairs achieves a distance of 0, it will still work\nbut may not be entirely ideal.\n!1* * This constraint can be used in a full 4-body set up, or a 3-body set up or a 2-body set up permitting\nany arrangement as long as body1 != body2 and body3 != body4",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/PulleyJoint.html"
		},
		"nape.constraint.UserConstraint": {
			"name": "UserConstraint",
			"path": "nape.constraint.UserConstraint",
			"description": "UserConstraint providing a low-level API for user-defined Constraints.\n\nThis API is intended to be powerful enough to model any constraint that\nNape can handle, but not so low level as to be completely prohibitive.\n\nFor instance, things like soft-constraints are automatically provided\nby this API.\n\nWorking with this API will require mathematical skills. A full manual\nfor this API is provided at: http://napephys.com/help/Constraints.pdf\n\nYou may also be interested in the nape-symbolic module that is available\non github/haxelib/nape downloads. Which provides a run-time compiled DSL\nusing this API to make prototyping (or creating non-performance critical)\nuser-defined constraints simple without the need for great mathematical\nskills as well as being much quicker to work with.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/UserConstraint.html"
		},
		"nape.constraint.WeldJoint": {
			"name": "WeldJoint",
			"path": "nape.constraint.WeldJoint",
			"description": "WeldJoint constraining two bodies to be exactly locked together.\n\nThe equation for this constraint is:\n\n[ body2.localPointToWorld(anchor2) ] = [ body1.localPointToWorld(anchor1) ]\n[          body2.rotation          ]   [      body1.rotation + phase      ]\n\nThis constraint is equivalent to using a PivotJoint and AngleJoint\ntogether except that it is solved as a single constraint and thus\nwill be more stable.\n\nThis constraint is 3 dimensional.\n\nAlthough this constraint is very stable, if you chain bodies together\nusing this constraint, you should except to see a small amount of rotation\nabout the anchor points so you should chose them accordingly.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/constraint/WeldJoint.html"
		},
		"nape.dynamics.Arbiter": {
			"name": "Arbiter",
			"path": "nape.dynamics.Arbiter",
			"description": "Arbiter representing the state of an interaction between two Bodys.\n\nThese objects are automatically reused, and you should not keep your own\nreferences to them.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/dynamics/Arbiter.html"
		},
		"nape.geom.AABB": {
			"name": "AABB",
			"path": "nape.geom.AABB",
			"description": "Axis Aligned Bounding Box (AABB)\n\nNote that in many cases of an AABB object being returned by a Nape function\nthe AABB object will be marked internally as an 'immutable' AABB. This will\nalways be documented and trying to mutate such an AABB will result in an\nerror being thrown.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/AABB.html"
		},
		"nape.geom.ConvexResult": {
			"name": "ConvexResult",
			"path": "nape.geom.ConvexResult",
			"description": "Class representing the results of a convex cast operation.\n\nThese objects are allocated from an object pool and can\nbe released back to that pool by calling its dispose method.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/ConvexResult.html"
		},
		"nape.geom.ConvexResultList": {
			"name": "ConvexResultList",
			"path": "nape.geom.ConvexResultList",
			"description": "Nape list of ConvexResult type objects\n\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/Geom.html\" title=\"nape.geom.Geom\">Geom</a></td><td><p>Geom class provides interface to collision detection routines in nape.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/GeomPoly.html\" title=\"nape.geom.GeomPoly\">GeomPoly</a></td><td><p>Polygon class with various geometric methods\n<br/><br/>\nThis class represents a general Polygon, rather than the Polygon class\nwhich is physics shape.\n<br/><br/>\nInternally this polygon is stored as a circularly linked list of special\nvertex types that are exposed via a Vec2 that is lazily constructed whenever\nnecessary to the API.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/GeomPolyIterator.html\" title=\"nape.geom.GeomPolyIterator\">GeomPolyIterator</a></td><td><p>Haxe Iterator<T> compatible iterator over Nape list.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/GeomPolyList.html\" title=\"nape.geom.GeomPolyList\">GeomPolyList</a></td><td><p>Nape list of GeomPoly type objects\n<br/><br/>\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n<br/><br/>\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n<pre>\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/GeomVertexIterator.html\" title=\"nape.geom.GeomVertexIterator\">GeomVertexIterator</a></td><td><p>Haxe compatible iterator over vertices of GeomPoly.\n<br/><br/>\nVec2's intrinsically tied to the vertices are exposed through\nthe iterator which does not modify the state of the polygon.</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/IsoFunction.html\" title=\"nape.geom.IsoFunction\">IsoFunction</a></td><td><p>For 'flash' targets only.\n<br/><br/>\nIso-functions for MarchingSquares must be given\nas an object implementing this IsoFunction interface. This is for\nreasons of avoiding excessive memory allocations that occur through\nautomatic boxing of arguments/return values when using function values.\n<br/>\nSince iso-functions may be called 10,000's of times per-invocation of\nmarching-squares, this can quickly accumulate into a lot of GC activity.</p></td></tr><tr class=\"type\"><td style=\"width:200px;\"><a href=\"../../nape/geom/IsoFunctionDef.html\" title=\"nape.geom.IsoFunctionDef\">IsoFunctionDef</a></td><td><p>Typedef defining iso-function type for MarchingSquares.\n<code>\ntypedef IsoFunctionDef = #if flash IsoFunction #else Float-&gt;Float-&gt;Float #end;\n</code></p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/MarchingSquares.html\" title=\"nape.geom.MarchingSquares\">MarchingSquares</a></td><td><p>Iso-surface extraction into polygons.\n<br/><br/>\nThis class, with only one static method provides an interface to\nan algorithm which will, when given a function mapping each point\nin a given AABB to a scalar value extract approximated polygons\nwhich represent the region of the AABB where the function returns\na negative value.\n<br/><br/>\nThis function could be a mathematical function like the equation of\na circle: <code> function (x, y) return (x<em>x + y</em>y) - r*r </code>\n<br/>\nOr something more practical like the biased alpha value interpolated\nfrom a Bitmap:\n<pre>\nfunction (x, y) {\nvar ix = if (x &lt; 0) 0 else if (x >= bitmap.width - 1) bitmap.width - 2 else Std.int(x);\nvar iy = if (y &lt; 0) 0 else if (y >= bitmap.height - 1) bitmap.height - 2 else Std.int(y);\nvar fx = x - ix;\nvar fy = y - iy;\nvar gx = 1 - fx;\nvar gy = 1 - fy;</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/Mat23.html\" title=\"nape.geom.Mat23\">Mat23</a></td><td><p>2D Matrix class representing affine transformations:\n<pre>\n[ a  b  tx ]\n[ c  d  ty ]\n[ 0  0  1  ]\n",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/ConvexResultList.html"
		},
		"nape.geom.MatMN": {
			"name": "MatMN",
			"path": "nape.geom.MatMN",
			"description": "A general MxN dimensional matrix.\n\nThis object is not often used in Nape :)",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/MatMN.html"
		},
		"nape.geom.Ray": {
			"name": "Ray",
			"path": "nape.geom.Ray",
			"description": "Parametrically defined ray used in ray casting functions.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/Ray.html"
		},
		"nape.geom.RayResult": {
			"name": "RayResult",
			"path": "nape.geom.RayResult",
			"description": "Class representing the results of a ray cast operation.\n\nThese objects are allocated from an object pool and can\nbe released back to that pool by calling its dispose method.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/RayResult.html"
		},
		"nape.geom.RayResultList": {
			"name": "RayResultList",
			"path": "nape.geom.RayResultList",
			"description": "Nape list of RayResult type objects\n\nInternally this list is at present implemented as a linked list with\nobject pooled nodes and iterators with various fast paths made for\nstandard access patterns (For instance accessing successive elements\nruns in constant time when using random access functions)\n\nIteration of this list can be done in various ways, but the preferred\nway on all targets, is through use of the foreach function:\n\nlist.foreach(function (obj) {\n});\n\nThis method is inlined so that in haxe no closure will need to be created.\n\nIn AS3, a closure would need to be created in general, so for performance\nreasons you 'may' choose to use iteration as follows:\n\nfor (var i:int = 0; i &lt; list.length; i++) {</p></td></tr><tr class=\"class\"><td style=\"width:200px;\"><a href=\"../../nape/geom/Vec2.html\" title=\"nape.geom.Vec2\">Vec2</a></td><td><p>2 Dimensional vector.\n<br/><br/>\nNote that in many cases of a Vec2 object being returned by a Nape function\nthe Vec2 object will be marked internally as an 'immutable' Vec2. This will\nalways be documented and trying to mutate such a Vec2 will result in an\nerror being thrown.\n<br/><br/>\nVec2 objects can make use of a global object pool, attempting to make use\nof a disposed Vec2 will also result in an error with the object pool\nworking in a FILO order to increase the likelihood of such misuse being\ncaught.\n<br/><br/>\nAdditionally Vec2 objects can be created as 'weak'. Passing a weak Vec2 to\nany Nape function as an argument will result in the automatic disposal of\nthe Vec2 once the method has finished with it. There may be exceptions to\nthis rule which will also be documented; a notable case being the appending\nof a weak Vec2 to a Nape Vec2List in which case the disposal of the weak\nVec2 is performed when that Vec2List is handed to a Nape function instead.\n<br/><br/>\nExample:\n<pre>\nvar vertices = Polygon.box(20, 20, true);\nvar polygon = new Polygon(vertices);\n\nIn this example, passing true to the Polygon.box method means\nthat we will be returned a Vec2List containing only 'weak' Vec2s. Upon\npassing this Vec2List to the Polygon constructor, all of the Vec2s from\nthat list will be automatically disposed.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/geom/RayResultList.html"
		},
		"nape.phys.Body": {
			"name": "Body",
			"path": "nape.phys.Body",
			"description": "Class representing a physics Rigid Body.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/phys/Body.html"
		},
		"nape.shape.Circle": {
			"name": "Circle",
			"path": "nape.shape.Circle",
			"description": "Shape subtype representing a Circle",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/shape/Circle.html"
		},
		"nape.shape.Edge": {
			"name": "Edge",
			"path": "nape.shape.Edge",
			"description": "Edge class providing internal details of Polygon.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/shape/Edge.html"
		},
		"nape.space.Broadphase": {
			"name": "Broadphase",
			"path": "nape.space.Broadphase",
			"description": "Enumeration of available broadphase collision types that Spaces may use.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/space/Broadphase.html"
		},
		"nape.space.Space": {
			"name": "Space",
			"path": "nape.space.Space",
			"description": "The heart of all Nape simulations.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/space/Space.html"
		},
		"nape.util.BitmapDebug": {
			"name": "BitmapDebug",
			"path": "nape.util.BitmapDebug",
			"description": "BitmapDebug available on flash10+ only.\n\nThis debug draw makes use of Alchemy opcodes so you may wish to forgo it\nif you do not want to be subjcet to Adobe licensing rules should you also\nbe using Stage3D.\n\nThis debug draw draws things pixel by pixel into alchemy memory, flushing\nto a BitmapData object. Believe it or not, this is in almost all cases\n'faster' than flash's built in graphics API.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/util/BitmapDebug.html"
		},
		"nape.util.Debug": {
			"name": "Debug",
			"path": "nape.util.Debug",
			"description": "Debug class providing general utilities\n\nAlso serves as the base type for Debug draws.",
			"type": "class",
			"link": "https://api.haxeflixel.com/nape/util/Debug.html"
		},
		"openfl.display.Application": {
			"name": "Application",
			"path": "openfl.display.Application",
			"description": "The Application class is a Lime Application instance that uses\nOpenFL Window by default when a new window is created.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/display/Application.html"
		},
		"openfl.display.GraphicsQuadPath": {
			"name": "GraphicsQuadPath",
			"path": "openfl.display.GraphicsQuadPath",
			"description": "Defines a set of quadrilaterals. This is similar to using GraphicsPath drawRect\nrepeatedly, but each rectangle can use a transform value to rotate, scale or skew\nthe result.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsQuadPath.html"
		},
		"openfl.display.GraphicsShader": {
			"name": "GraphicsShader",
			"path": "openfl.display.GraphicsShader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsShader.html"
		},
		"openfl.display.Preloader": {
			"name": "Preloader",
			"path": "openfl.display.Preloader",
			"description": "The Preloader class is a Lime Preloader instance that uses an OpenFL\ndisplay object to display loading progress.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/display/Preloader.html"
		},
		"openfl.display.Window": {
			"name": "Window",
			"path": "openfl.display.Window",
			"description": "The Window class is a Lime Window instance that automatically\ninitializes an OpenFL stage for the current window.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/display/Window.html"
		},
		"openfl.display.Bitmap": {
			"name": "Bitmap",
			"path": "openfl.display.Bitmap",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Bitmap.html"
		},
		"openfl.display.BitmapData": {
			"name": "BitmapData",
			"path": "openfl.display.BitmapData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/BitmapData.html"
		},
		"openfl.display.BitmapDataChannel": {
			"name": "BitmapDataChannel",
			"path": "openfl.display.BitmapDataChannel",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/BitmapDataChannel.html"
		},
		"openfl.display.BlendMode": {
			"name": "BlendMode",
			"path": "openfl.display.BlendMode",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/BlendMode.html"
		},
		"openfl.display.DisplayObject": {
			"name": "DisplayObject",
			"path": "openfl.display.DisplayObject",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/DisplayObject.html"
		},
		"openfl.display.DisplayObjectContainer": {
			"name": "DisplayObjectContainer",
			"path": "openfl.display.DisplayObjectContainer",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/DisplayObjectContainer.html"
		},
		"openfl.display.Graphics": {
			"name": "Graphics",
			"path": "openfl.display.Graphics",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Graphics.html"
		},
		"openfl.display.GraphicsBitmapFill": {
			"name": "GraphicsBitmapFill",
			"path": "openfl.display.GraphicsBitmapFill",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsBitmapFill.html"
		},
		"openfl.display.GraphicsEndFill": {
			"name": "GraphicsEndFill",
			"path": "openfl.display.GraphicsEndFill",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsEndFill.html"
		},
		"openfl.display.GraphicsGradientFill": {
			"name": "GraphicsGradientFill",
			"path": "openfl.display.GraphicsGradientFill",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsGradientFill.html"
		},
		"openfl.display.GraphicsPath": {
			"name": "GraphicsPath",
			"path": "openfl.display.GraphicsPath",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsPath.html"
		},
		"openfl.display.GraphicsShaderFill": {
			"name": "GraphicsShaderFill",
			"path": "openfl.display.GraphicsShaderFill",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsShaderFill.html"
		},
		"openfl.display.GraphicsSolidFill": {
			"name": "GraphicsSolidFill",
			"path": "openfl.display.GraphicsSolidFill",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsSolidFill.html"
		},
		"openfl.display.GraphicsStroke": {
			"name": "GraphicsStroke",
			"path": "openfl.display.GraphicsStroke",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsStroke.html"
		},
		"openfl.display.GraphicsTrianglePath": {
			"name": "GraphicsTrianglePath",
			"path": "openfl.display.GraphicsTrianglePath",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/GraphicsTrianglePath.html"
		},
		"openfl.display.IGraphicsData": {
			"name": "IGraphicsData",
			"path": "openfl.display.IGraphicsData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/IGraphicsData.html"
		},
		"openfl.display.IGraphicsPath": {
			"name": "IGraphicsPath",
			"path": "openfl.display.IGraphicsPath",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/IGraphicsPath.html"
		},
		"openfl.display.InteractiveObject": {
			"name": "InteractiveObject",
			"path": "openfl.display.InteractiveObject",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/InteractiveObject.html"
		},
		"openfl.display.MovieClip": {
			"name": "MovieClip",
			"path": "openfl.display.MovieClip",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/MovieClip.html"
		},
		"openfl.display.Shader": {
			"name": "Shader",
			"path": "openfl.display.Shader",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Shader.html"
		},
		"openfl.display.ShaderParameter": {
			"name": "ShaderParameter",
			"path": "openfl.display.ShaderParameter",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/ShaderParameter.html"
		},
		"openfl.display.Shape": {
			"name": "Shape",
			"path": "openfl.display.Shape",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Shape.html"
		},
		"openfl.display.Sprite": {
			"name": "Sprite",
			"path": "openfl.display.Sprite",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Sprite.html"
		},
		"openfl.display.Stage": {
			"name": "Stage",
			"path": "openfl.display.Stage",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/Stage.html"
		},
		"openfl.display.TriangleCulling": {
			"name": "TriangleCulling",
			"path": "openfl.display.TriangleCulling",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display/TriangleCulling.html"
		},
		"openfl.display3D.Context3DProgramFormat": {
			"name": "Context3DProgramFormat",
			"path": "openfl.display3D.Context3DProgramFormat",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/display3D/Context3DProgramFormat.html"
		},
		"openfl.display3D.Context3D": {
			"name": "Context3D",
			"path": "openfl.display3D.Context3D",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/Context3D.html"
		},
		"openfl.display3D.Context3DProfile": {
			"name": "Context3DProfile",
			"path": "openfl.display3D.Context3DProfile",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/Context3DProfile.html"
		},
		"openfl.display3D.Context3DRenderMode": {
			"name": "Context3DRenderMode",
			"path": "openfl.display3D.Context3DRenderMode",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/Context3DRenderMode.html"
		},
		"openfl.errors.EOFError": {
			"name": "EOFError",
			"path": "openfl.errors.EOFError",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/errors/EOFError.html"
		},
		"openfl.errors.IllegalOperationError": {
			"name": "IllegalOperationError",
			"path": "openfl.errors.IllegalOperationError",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/errors/IllegalOperationError.html"
		},
		"openfl.events.EventType": {
			"name": "EventType",
			"path": "openfl.events.EventType",
			"description": "The EventType abstract type provides type safety when\nmatching dispatch events with the correct type of listener",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/events/EventType.html"
		},
		"openfl.events.Event": {
			"name": "Event",
			"path": "openfl.events.Event",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/Event.html"
		},
		"openfl.events.EventDispatcher": {
			"name": "EventDispatcher",
			"path": "openfl.events.EventDispatcher",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/EventDispatcher.html"
		},
		"openfl.events.FocusEvent": {
			"name": "FocusEvent",
			"path": "openfl.events.FocusEvent",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/FocusEvent.html"
		},
		"openfl.events.IOErrorEvent": {
			"name": "IOErrorEvent",
			"path": "openfl.events.IOErrorEvent",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/IOErrorEvent.html"
		},
		"openfl.events.KeyboardEvent": {
			"name": "KeyboardEvent",
			"path": "openfl.events.KeyboardEvent",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/KeyboardEvent.html"
		},
		"openfl.events.MouseEvent": {
			"name": "MouseEvent",
			"path": "openfl.events.MouseEvent",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/MouseEvent.html"
		},
		"openfl.events.ProgressEvent": {
			"name": "ProgressEvent",
			"path": "openfl.events.ProgressEvent",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/ProgressEvent.html"
		},
		"openfl.events.UncaughtErrorEvents": {
			"name": "UncaughtErrorEvents",
			"path": "openfl.events.UncaughtErrorEvents",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/events/UncaughtErrorEvents.html"
		},
		"openfl.filters.BitmapFilter": {
			"name": "BitmapFilter",
			"path": "openfl.filters.BitmapFilter",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/filters/BitmapFilter.html"
		},
		"openfl.filters.ShaderFilter": {
			"name": "ShaderFilter",
			"path": "openfl.filters.ShaderFilter",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/filters/ShaderFilter.html"
		},
		"openfl.geom.ColorTransform": {
			"name": "ColorTransform",
			"path": "openfl.geom.ColorTransform",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/ColorTransform.html"
		},
		"openfl.geom.Matrix": {
			"name": "Matrix",
			"path": "openfl.geom.Matrix",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Matrix.html"
		},
		"openfl.geom.Matrix3D": {
			"name": "Matrix3D",
			"path": "openfl.geom.Matrix3D",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Matrix3D.html"
		},
		"openfl.geom.Point": {
			"name": "Point",
			"path": "openfl.geom.Point",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Point.html"
		},
		"openfl.geom.Rectangle": {
			"name": "Rectangle",
			"path": "openfl.geom.Rectangle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Rectangle.html"
		},
		"openfl.geom.Transform": {
			"name": "Transform",
			"path": "openfl.geom.Transform",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Transform.html"
		},
		"openfl.geom.Vector3D": {
			"name": "Vector3D",
			"path": "openfl.geom.Vector3D",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/geom/Vector3D.html"
		},
		"openfl.media.Sound": {
			"name": "Sound",
			"path": "openfl.media.Sound",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/media/Sound.html"
		},
		"openfl.media.SoundTransform": {
			"name": "SoundTransform",
			"path": "openfl.media.SoundTransform",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/media/SoundTransform.html"
		},
		"openfl.net.NetStream": {
			"name": "NetStream",
			"path": "openfl.net.NetStream",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/net/NetStream.html"
		},
		"openfl.net.ObjectEncoding": {
			"name": "ObjectEncoding",
			"path": "openfl.net.ObjectEncoding",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/net/ObjectEncoding.html"
		},
		"openfl.net.URLLoader": {
			"name": "URLLoader",
			"path": "openfl.net.URLLoader",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/net/URLLoader.html"
		},
		"openfl.net.URLRequest": {
			"name": "URLRequest",
			"path": "openfl.net.URLRequest",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/net/URLRequest.html"
		},
		"openfl.system.ApplicationDomain": {
			"name": "ApplicationDomain",
			"path": "openfl.system.ApplicationDomain",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/system/ApplicationDomain.html"
		},
		"openfl.system.Capabilities": {
			"name": "Capabilities",
			"path": "openfl.system.Capabilities",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/system/Capabilities.html"
		},
		"openfl.system.LoaderContext": {
			"name": "LoaderContext",
			"path": "openfl.system.LoaderContext",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/system/LoaderContext.html"
		},
		"openfl.text.Font": {
			"name": "Font",
			"path": "openfl.text.Font",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/Font.html"
		},
		"openfl.text.TextField": {
			"name": "TextField",
			"path": "openfl.text.TextField",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/TextField.html"
		},
		"openfl.text.TextFieldAutoSize": {
			"name": "TextFieldAutoSize",
			"path": "openfl.text.TextFieldAutoSize",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/TextFieldAutoSize.html"
		},
		"openfl.text.TextFieldType": {
			"name": "TextFieldType",
			"path": "openfl.text.TextFieldType",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/TextFieldType.html"
		},
		"openfl.text.TextFormat": {
			"name": "TextFormat",
			"path": "openfl.text.TextFormat",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/TextFormat.html"
		},
		"openfl.text.TextFormatAlign": {
			"name": "TextFormatAlign",
			"path": "openfl.text.TextFormatAlign",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/text/TextFormatAlign.html"
		},
		"openfl.ui.GameInputDevice": {
			"name": "GameInputDevice",
			"path": "openfl.ui.GameInputDevice",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/ui/GameInputDevice.html"
		},
		"openfl.ui.KeyLocation": {
			"name": "KeyLocation",
			"path": "openfl.ui.KeyLocation",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/ui/KeyLocation.html"
		},
		"openfl.ui.Keyboard": {
			"name": "Keyboard",
			"path": "openfl.ui.Keyboard",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/ui/Keyboard.html"
		},
		"openfl.utils.AssetCache": {
			"name": "AssetCache",
			"path": "openfl.utils.AssetCache",
			"description": "The AssetCache class is the default cache implementation used\nby openfl.utils.Assets, objects will be cached for the lifetime\nof the application unless removed explicitly, or using Assets\nunloadLibrary",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/utils/AssetCache.html"
		},
		"openfl.utils.AssetLibrary": {
			"name": "AssetLibrary",
			"path": "openfl.utils.AssetLibrary",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/utils/AssetLibrary.html"
		},
		"openfl.utils.Assets": {
			"name": "Assets",
			"path": "openfl.utils.Assets",
			"description": "The Assets class provides a cross-platform interface to access\nembedded images, fonts, sounds and other resource files.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/utils/Assets.html"
		},
		"openfl.utils.IAssetCache": {
			"name": "IAssetCache",
			"path": "openfl.utils.IAssetCache",
			"description": "The IAssetCache interface provides methods for caching\nresources loaded from openfl.utils.Assets to improve\nperformance.",
			"type": "class",
			"link": "https://api.haxeflixel.com/openfl/utils/IAssetCache.html"
		},
		"openfl.utils.AssetType": {
			"name": "AssetType",
			"path": "openfl.utils.AssetType",
			"description": "The AssetType enum lists the core set of available\nasset types from the OpenFL command-line tools.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/utils/AssetType.html"
		},
		"openfl.utils.ByteArray": {
			"name": "ByteArray",
			"path": "openfl.utils.ByteArray",
			"description": "The ByteArray class provides methods and properties to optimize reading,\nwriting, and working with binary data.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/utils/ByteArray.html"
		},
		"openfl.utils.Dictionary": {
			"name": "Dictionary",
			"path": "openfl.utils.Dictionary",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/utils/Dictionary.html"
		},
		"openfl.utils.Object": {
			"name": "Object",
			"path": "openfl.utils.Object",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/openfl/utils/Object.html"
		},
		"openfl.utils.CompressionAlgorithm": {
			"name": "CompressionAlgorithm",
			"path": "openfl.utils.CompressionAlgorithm",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/utils/CompressionAlgorithm.html"
		},
		"openfl.utils.Endian": {
			"name": "Endian",
			"path": "openfl.utils.Endian",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/utils/Endian.html"
		},
		"openfl.utils.Future": {
			"name": "Future",
			"path": "openfl.utils.Future",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/utils/Future.html"
		},
		"openfl.utils.IDataInput": {
			"name": "IDataInput",
			"path": "openfl.utils.IDataInput",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/utils/IDataInput.html"
		},
		"openfl.utils.IDataOutput": {
			"name": "IDataOutput",
			"path": "openfl.utils.IDataOutput",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/utils/IDataOutput.html"
		},
		"spinehaxe.animation.Animation": {
			"name": "Animation",
			"path": "spinehaxe.animation.Animation",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/Animation.html"
		},
		"spinehaxe.animation.AnimationState": {
			"name": "AnimationState",
			"path": "spinehaxe.animation.AnimationState",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/AnimationState.html"
		},
		"spinehaxe.animation.AnimationStateData": {
			"name": "AnimationStateData",
			"path": "spinehaxe.animation.AnimationStateData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/AnimationStateData.html"
		},
		"spinehaxe.animation.AttachmentTimeline": {
			"name": "AttachmentTimeline",
			"path": "spinehaxe.animation.AttachmentTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/AttachmentTimeline.html"
		},
		"spinehaxe.animation.BaseListeners": {
			"name": "BaseListeners",
			"path": "spinehaxe.animation.BaseListeners",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/BaseListeners.html"
		},
		"spinehaxe.animation.ColorTimeline": {
			"name": "ColorTimeline",
			"path": "spinehaxe.animation.ColorTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/ColorTimeline.html"
		},
		"spinehaxe.animation.CurveTimeline": {
			"name": "CurveTimeline",
			"path": "spinehaxe.animation.CurveTimeline",
			"description": "Base class for frames that use an interpolation bezier curve.",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/CurveTimeline.html"
		},
		"spinehaxe.animation.DeformTimeline": {
			"name": "DeformTimeline",
			"path": "spinehaxe.animation.DeformTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/DeformTimeline.html"
		},
		"spinehaxe.animation.DrawOrderTimeline": {
			"name": "DrawOrderTimeline",
			"path": "spinehaxe.animation.DrawOrderTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/DrawOrderTimeline.html"
		},
		"spinehaxe.animation.EventListeners": {
			"name": "EventListeners",
			"path": "spinehaxe.animation.EventListeners",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/EventListeners.html"
		},
		"spinehaxe.animation.EventQueue": {
			"name": "EventQueue",
			"path": "spinehaxe.animation.EventQueue",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/EventQueue.html"
		},
		"spinehaxe.animation.EventTimeline": {
			"name": "EventTimeline",
			"path": "spinehaxe.animation.EventTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/EventTimeline.html"
		},
		"spinehaxe.animation.IkConstraintTimeline": {
			"name": "IkConstraintTimeline",
			"path": "spinehaxe.animation.IkConstraintTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/IkConstraintTimeline.html"
		},
		"spinehaxe.animation.Listeners": {
			"name": "Listeners",
			"path": "spinehaxe.animation.Listeners",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/Listeners.html"
		},
		"spinehaxe.animation.PathConstraintMixTimeline": {
			"name": "PathConstraintMixTimeline",
			"path": "spinehaxe.animation.PathConstraintMixTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/PathConstraintMixTimeline.html"
		},
		"spinehaxe.animation.PathConstraintPositionTimeline": {
			"name": "PathConstraintPositionTimeline",
			"path": "spinehaxe.animation.PathConstraintPositionTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/PathConstraintPositionTimeline.html"
		},
		"spinehaxe.animation.PathConstraintSpacingTimeline": {
			"name": "PathConstraintSpacingTimeline",
			"path": "spinehaxe.animation.PathConstraintSpacingTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/PathConstraintSpacingTimeline.html"
		},
		"spinehaxe.animation.RotateTimeline": {
			"name": "RotateTimeline",
			"path": "spinehaxe.animation.RotateTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/RotateTimeline.html"
		},
		"spinehaxe.animation.ScaleTimeline": {
			"name": "ScaleTimeline",
			"path": "spinehaxe.animation.ScaleTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/ScaleTimeline.html"
		},
		"spinehaxe.animation.ShearTimeline": {
			"name": "ShearTimeline",
			"path": "spinehaxe.animation.ShearTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/ShearTimeline.html"
		},
		"spinehaxe.animation.Timeline": {
			"name": "Timeline",
			"path": "spinehaxe.animation.Timeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/Timeline.html"
		},
		"spinehaxe.animation.TrackEntry": {
			"name": "TrackEntry",
			"path": "spinehaxe.animation.TrackEntry",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/TrackEntry.html"
		},
		"spinehaxe.animation.TransformConstraintTimeline": {
			"name": "TransformConstraintTimeline",
			"path": "spinehaxe.animation.TransformConstraintTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/TransformConstraintTimeline.html"
		},
		"spinehaxe.animation.TranslateTimeline": {
			"name": "TranslateTimeline",
			"path": "spinehaxe.animation.TranslateTimeline",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/TranslateTimeline.html"
		},
		"spinehaxe.animation.EventType": {
			"name": "EventType",
			"path": "spinehaxe.animation.EventType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/EventType.html"
		},
		"spinehaxe.animation.TimelineType": {
			"name": "TimelineType",
			"path": "spinehaxe.animation.TimelineType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/animation/TimelineType.html"
		},
		"spinehaxe.atlas.Atlas": {
			"name": "Atlas",
			"path": "spinehaxe.atlas.Atlas",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/Atlas.html"
		},
		"spinehaxe.atlas.AtlasPage": {
			"name": "AtlasPage",
			"path": "spinehaxe.atlas.AtlasPage",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/AtlasPage.html"
		},
		"spinehaxe.atlas.AtlasRegion": {
			"name": "AtlasRegion",
			"path": "spinehaxe.atlas.AtlasRegion",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/AtlasRegion.html"
		},
		"spinehaxe.atlas.Reader": {
			"name": "Reader",
			"path": "spinehaxe.atlas.Reader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/Reader.html"
		},
		"spinehaxe.atlas.TextureLoader": {
			"name": "TextureLoader",
			"path": "spinehaxe.atlas.TextureLoader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/TextureLoader.html"
		},
		"spinehaxe.atlas.Format": {
			"name": "Format",
			"path": "spinehaxe.atlas.Format",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/Format.html"
		},
		"spinehaxe.atlas.TextureFilter": {
			"name": "TextureFilter",
			"path": "spinehaxe.atlas.TextureFilter",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/TextureFilter.html"
		},
		"spinehaxe.atlas.TextureWrap": {
			"name": "TextureWrap",
			"path": "spinehaxe.atlas.TextureWrap",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/atlas/TextureWrap.html"
		},
		"spinehaxe.attachments.AtlasAttachmentLoader": {
			"name": "AtlasAttachmentLoader",
			"path": "spinehaxe.attachments.AtlasAttachmentLoader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/AtlasAttachmentLoader.html"
		},
		"spinehaxe.attachments.Attachment": {
			"name": "Attachment",
			"path": "spinehaxe.attachments.Attachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/Attachment.html"
		},
		"spinehaxe.attachments.AttachmentLoader": {
			"name": "AttachmentLoader",
			"path": "spinehaxe.attachments.AttachmentLoader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/AttachmentLoader.html"
		},
		"spinehaxe.attachments.BoundingBoxAttachment": {
			"name": "BoundingBoxAttachment",
			"path": "spinehaxe.attachments.BoundingBoxAttachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/BoundingBoxAttachment.html"
		},
		"spinehaxe.attachments.MeshAttachment": {
			"name": "MeshAttachment",
			"path": "spinehaxe.attachments.MeshAttachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/MeshAttachment.html"
		},
		"spinehaxe.attachments.PathAttachment": {
			"name": "PathAttachment",
			"path": "spinehaxe.attachments.PathAttachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/PathAttachment.html"
		},
		"spinehaxe.attachments.RegionAttachment": {
			"name": "RegionAttachment",
			"path": "spinehaxe.attachments.RegionAttachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/RegionAttachment.html"
		},
		"spinehaxe.attachments.VertexAttachment": {
			"name": "VertexAttachment",
			"path": "spinehaxe.attachments.VertexAttachment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/VertexAttachment.html"
		},
		"spinehaxe.attachments.AttachmentType": {
			"name": "AttachmentType",
			"path": "spinehaxe.attachments.AttachmentType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/spinehaxe/attachments/AttachmentType.html"
		},
		"flixel.addons.api.FlxGameJolt": {
			"name": "FlxGameJolt",
			"path": "flixel.addons.api.FlxGameJolt",
			"description": "Similar to FlxKongregate, this allows access to the GameJolt API. Based loosely on the AS3 version by SumYungGai with many changes.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/api/FlxGameJolt.html"
		},
		"flixel.addons.api.FlxKongregate": {
			"name": "FlxKongregate",
			"path": "flixel.addons.api.FlxKongregate",
			"description": "Allows for easy access to the Kongregate API",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/api/FlxKongregate.html"
		},
		"flixel.addons.display.FlxBackdrop": {
			"name": "FlxBackdrop",
			"path": "flixel.addons.display.FlxBackdrop",
			"description": "Used for showing infinitely scrolling backgrounds.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxBackdrop.html"
		},
		"flixel.addons.display.FlxExtendedSprite": {
			"name": "FlxExtendedSprite",
			"path": "flixel.addons.display.FlxExtendedSprite",
			"description": "An enhanced FlxSprite that is capable of receiving mouse clicks, being dragged and thrown, mouse springs, gravity and other useful things",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxExtendedSprite.html"
		},
		"flixel.addons.display.FlxGridOverlay": {
			"name": "FlxGridOverlay",
			"path": "flixel.addons.display.FlxGridOverlay",
			"description": "FlxGridOverlay",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxGridOverlay.html"
		},
		"flixel.addons.display.FlxMouseSpring": {
			"name": "FlxMouseSpring",
			"path": "flixel.addons.display.FlxMouseSpring",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxMouseSpring.html"
		},
		"flixel.addons.display.FlxNestedSprite": {
			"name": "FlxNestedSprite",
			"path": "flixel.addons.display.FlxNestedSprite",
			"description": "Some sort of DisplayObjectContainer but very limited.\nIt can contain only other FlxNestedSprites.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxNestedSprite.html"
		},
		"flixel.addons.display.FlxPieDial": {
			"name": "FlxPieDial",
			"path": "flixel.addons.display.FlxPieDial",
			"description": "A dynamic shape that fills up the way a pie chart does. Useful for timers and other things.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxPieDial.html"
		},
		"flixel.addons.display.FlxShaderMaskCamera": {
			"name": "FlxShaderMaskCamera",
			"path": "flixel.addons.display.FlxShaderMaskCamera",
			"description": "An extension of FLxCamera that supports applying a shader to arbitrary sections of the game world.\nOnly available in blit render mode.\nDoes NOT currently support alpha blending; the effect will be applied to all pixels where the mask is not fully\ntransparent. This is due to an open issue with OpenFL masks (https://github.com/openfl/openfl/issues/1086).",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxShaderMaskCamera.html"
		},
		"flixel.addons.display.FlxSliceSprite": {
			"name": "FlxSliceSprite",
			"path": "flixel.addons.display.FlxSliceSprite",
			"description": "Sprite which can be used for various sorts of slicing (9-slice, 3 slice, tiled sprite but without scrolling).\nBased on Kyle Pulver's NineSlice class for FlashPunk: http://kpulv.com/96/Flashpunk_NineSlice_ClassUpdated/",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxSliceSprite.html"
		},
		"flixel.addons.display.FlxSpriteAniRot": {
			"name": "FlxSpriteAniRot",
			"path": "flixel.addons.display.FlxSpriteAniRot",
			"description": "Creating animated and rotated sprite from an un-rotated animated image.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxSpriteAniRot.html"
		},
		"flixel.addons.display.FlxStarField2D": {
			"name": "FlxStarField2D",
			"path": "flixel.addons.display.FlxStarField2D",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxStarField2D.html"
		},
		"flixel.addons.display.FlxStarField3D": {
			"name": "FlxStarField3D",
			"path": "flixel.addons.display.FlxStarField3D",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxStarField3D.html"
		},
		"flixel.addons.display.FlxTiledSprite": {
			"name": "FlxTiledSprite",
			"path": "flixel.addons.display.FlxTiledSprite",
			"description": "Tiled sprite which displays repeated and clipped graphic.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxTiledSprite.html"
		},
		"flixel.addons.display.FlxZoomCamera": {
			"name": "FlxZoomCamera",
			"path": "flixel.addons.display.FlxZoomCamera",
			"description": "FlxZoomCamera: A FlxCamera that centers its zoom on the target that it follows",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxZoomCamera.html"
		},
		"flixel.addons.display.FlxPieDialShape": {
			"name": "FlxPieDialShape",
			"path": "flixel.addons.display.FlxPieDialShape",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/display/FlxPieDialShape.html"
		},
		"flixel.addons.display.MouseCallback": {
			"name": "MouseCallback",
			"path": "flixel.addons.display.MouseCallback",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/display/MouseCallback.html"
		},
		"flixel.addons.effects.FlxClothSprite": {
			"name": "FlxClothSprite",
			"path": "flixel.addons.effects.FlxClothSprite",
			"description": "A FlxSprite that draw it's frame in a mesh and behave like a cloth.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxClothSprite.html"
		},
		"flixel.addons.effects.FlxSkewedSprite": {
			"name": "FlxSkewedSprite",
			"path": "flixel.addons.effects.FlxSkewedSprite",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxSkewedSprite.html"
		},
		"flixel.addons.effects.FlxTrail": {
			"name": "FlxTrail",
			"path": "flixel.addons.effects.FlxTrail",
			"description": "Nothing too fancy, just a handy little class to attach a trail effect to a FlxSprite.\nInspired by the way \"Buck\" from the inofficial #flixel IRC channel\ncreates a trail effect for the character in his game.\nFeel free to use this class and adjust it to your needs.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxTrail.html"
		},
		"flixel.addons.effects.FlxTrailArea": {
			"name": "FlxTrailArea",
			"path": "flixel.addons.effects.FlxTrailArea",
			"description": "This provides an area in which the added sprites have a trail effect. Usage: Create the FlxTrailArea and\nadd it to the display. Then add all sprites that should have a trail effect via the add function.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxTrailArea.html"
		},
		"flixel.addons.effects.FlxClothConstraint": {
			"name": "FlxClothConstraint",
			"path": "flixel.addons.effects.FlxClothConstraint",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxClothConstraint.html"
		},
		"flixel.addons.effects.FlxClothPoint": {
			"name": "FlxClothPoint",
			"path": "flixel.addons.effects.FlxClothPoint",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/FlxClothPoint.html"
		},
		"flixel.addons.nape.FlxNapeSpace": {
			"name": "FlxNapeSpace",
			"path": "flixel.addons.nape.FlxNapeSpace",
			"description": "FlxNapeSpace is a flixel plugin that integrates nape.space.Space\nto provide Nape physics simulation in Flixel.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/nape/FlxNapeSpace.html"
		},
		"flixel.addons.nape.FlxNapeSprite": {
			"name": "FlxNapeSprite",
			"path": "flixel.addons.nape.FlxNapeSprite",
			"description": "FlxNapeSprite consists of a FlxSprite with a physics body.\nDuring the simulation, the sprite follows the physics body position and rotation.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/nape/FlxNapeSprite.html"
		},
		"flixel.addons.nape.FlxNapeTilemap": {
			"name": "FlxNapeTilemap",
			"path": "flixel.addons.nape.FlxNapeTilemap",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/nape/FlxNapeTilemap.html"
		},
		"flixel.addons.nape.FlxNapeVelocity": {
			"name": "FlxNapeVelocity",
			"path": "flixel.addons.nape.FlxNapeVelocity",
			"description": "Some of the FlxVelocity functions, working with nape.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/nape/FlxNapeVelocity.html"
		},
		"flixel.addons.plugin.FlxMouseControl": {
			"name": "FlxMouseControl",
			"path": "flixel.addons.plugin.FlxMouseControl",
			"description": "FlxMouseControl",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/FlxMouseControl.html"
		},
		"flixel.addons.plugin.FlxScrollingText": {
			"name": "FlxScrollingText",
			"path": "flixel.addons.plugin.FlxScrollingText",
			"description": "FlxScrollingText\n-- Part of the Flixel Power Tools set\n-- Works only FLX_BLIT_RENDER mode for now",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/FlxScrollingText.html"
		},
		"flixel.addons.plugin.ScrollingTextData": {
			"name": "ScrollingTextData",
			"path": "flixel.addons.plugin.ScrollingTextData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/ScrollingTextData.html"
		},
		"flixel.addons.text.FlxTextField": {
			"name": "FlxTextField",
			"path": "flixel.addons.text.FlxTextField",
			"description": "Extends FlxText for better support rendering text on cpp target.\nDoesn't have multicamera support.\nDisplays over all other objects.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/text/FlxTextField.html"
		},
		"flixel.addons.text.FlxTypeText": {
			"name": "FlxTypeText",
			"path": "flixel.addons.text.FlxTypeText",
			"description": "This is loosely based on the TypeText class by Noel Berry, who wrote it for his Ludum Dare 22 game - Abandoned\nhttp://www.ludumdare.com/compo/ludum-dare-22/?action=preview&amp;uid=1527",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/text/FlxTypeText.html"
		},
		"flixel.addons.text.TypeSound": {
			"name": "TypeSound",
			"path": "flixel.addons.text.TypeSound",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/text/TypeSound.html"
		},
		"flixel.addons.tile.FlxCaveGenerator": {
			"name": "FlxCaveGenerator",
			"path": "flixel.addons.tile.FlxCaveGenerator",
			"description": "This class uses the cellular automata algorithm\nto generate very sexy caves.\n(Coded by Eddie Lee, October 16, 2010)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/FlxCaveGenerator.html"
		},
		"flixel.addons.tile.FlxRayCastTilemap": {
			"name": "FlxRayCastTilemap",
			"path": "flixel.addons.tile.FlxRayCastTilemap",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/FlxRayCastTilemap.html"
		},
		"flixel.addons.tile.FlxTileAnimation": {
			"name": "FlxTileAnimation",
			"path": "flixel.addons.tile.FlxTileAnimation",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/FlxTileAnimation.html"
		},
		"flixel.addons.tile.FlxTileSpecial": {
			"name": "FlxTileSpecial",
			"path": "flixel.addons.tile.FlxTileSpecial",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/FlxTileSpecial.html"
		},
		"flixel.addons.tile.FlxTilemapExt": {
			"name": "FlxTilemapExt",
			"path": "flixel.addons.tile.FlxTilemapExt",
			"description": "Extended FlxTilemap class that provides collision detection against slopes",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/FlxTilemapExt.html"
		},
		"flixel.addons.tile.AnimParams": {
			"name": "AnimParams",
			"path": "flixel.addons.tile.AnimParams",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/tile/AnimParams.html"
		},
		"flixel.addons.transition.FlxTransitionSprite": {
			"name": "FlxTransitionSprite",
			"path": "flixel.addons.transition.FlxTransitionSprite",
			"description": "<ul",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/FlxTransitionSprite.html"
		},
		"flixel.addons.transition.FlxTransitionableState": {
			"name": "FlxTransitionableState",
			"path": "flixel.addons.transition.FlxTransitionableState",
			"description": "A FlxState which can perform visual transitions",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/FlxTransitionableState.html"
		},
		"flixel.addons.transition.GraphicTransTileCircle": {
			"name": "GraphicTransTileCircle",
			"path": "flixel.addons.transition.GraphicTransTileCircle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/GraphicTransTileCircle.html"
		},
		"flixel.addons.transition.GraphicTransTileDiamond": {
			"name": "GraphicTransTileDiamond",
			"path": "flixel.addons.transition.GraphicTransTileDiamond",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/GraphicTransTileDiamond.html"
		},
		"flixel.addons.transition.GraphicTransTileSquare": {
			"name": "GraphicTransTileSquare",
			"path": "flixel.addons.transition.GraphicTransTileSquare",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/GraphicTransTileSquare.html"
		},
		"flixel.addons.transition.Transition": {
			"name": "Transition",
			"path": "flixel.addons.transition.Transition",
			"description": "This substate is automatically created to play the actual transition visuals inside a FlxTransitionState.\nTo achieve a specific effect, you should use a sub-class of this such as TileTransition or FadeTransition",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/Transition.html"
		},
		"flixel.addons.transition.TransitionData": {
			"name": "TransitionData",
			"path": "flixel.addons.transition.TransitionData",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionData.html"
		},
		"flixel.addons.transition.TransitionEffect": {
			"name": "TransitionEffect",
			"path": "flixel.addons.transition.TransitionEffect",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionEffect.html"
		},
		"flixel.addons.transition.TransitionFade": {
			"name": "TransitionFade",
			"path": "flixel.addons.transition.TransitionFade",
			"description": "<ul",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionFade.html"
		},
		"flixel.addons.transition.TransitionTiles": {
			"name": "TransitionTiles",
			"path": "flixel.addons.transition.TransitionTiles",
			"description": "<ul",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionTiles.html"
		},
		"flixel.addons.transition.TransitionStatus": {
			"name": "TransitionStatus",
			"path": "flixel.addons.transition.TransitionStatus",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionStatus.html"
		},
		"flixel.addons.transition.TransitionType": {
			"name": "TransitionType",
			"path": "flixel.addons.transition.TransitionType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionType.html"
		},
		"flixel.addons.transition.TransitionTileData": {
			"name": "TransitionTileData",
			"path": "flixel.addons.transition.TransitionTileData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/transition/TransitionTileData.html"
		},
		"flixel.addons.ui.Anchor": {
			"name": "Anchor",
			"path": "flixel.addons.ui.Anchor",
			"description": "A class that describes how some object should be positioned relative to another",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/Anchor.html"
		},
		"flixel.addons.ui.AnchorPoint": {
			"name": "AnchorPoint",
			"path": "flixel.addons.ui.AnchorPoint",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/AnchorPoint.html"
		},
		"flixel.addons.ui.BorderDef": {
			"name": "BorderDef",
			"path": "flixel.addons.ui.BorderDef",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/BorderDef.html"
		},
		"flixel.addons.ui.ButtonLabelStyle": {
			"name": "ButtonLabelStyle",
			"path": "flixel.addons.ui.ButtonLabelStyle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/ButtonLabelStyle.html"
		},
		"flixel.addons.ui.CheckStyle": {
			"name": "CheckStyle",
			"path": "flixel.addons.ui.CheckStyle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/CheckStyle.html"
		},
		"flixel.addons.ui.FlxBaseMultiInput": {
			"name": "FlxBaseMultiInput",
			"path": "flixel.addons.ui.FlxBaseMultiInput",
			"description": "Makes it easier to check if, say, SHIFT+Tab is being pressed rather than just Tab by itself",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxBaseMultiInput.html"
		},
		"flixel.addons.ui.FlxButtonPlus": {
			"name": "FlxButtonPlus",
			"path": "flixel.addons.ui.FlxButtonPlus",
			"description": "A simple button class that calls a function when clicked by the mouse.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxButtonPlus.html"
		},
		"flixel.addons.ui.FlxClickArea": {
			"name": "FlxClickArea",
			"path": "flixel.addons.ui.FlxClickArea",
			"description": "Trimmed-down button, invisible click area, only responds to onUP",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxClickArea.html"
		},
		"flixel.addons.ui.FlxInputText": {
			"name": "FlxInputText",
			"path": "flixel.addons.ui.FlxInputText",
			"description": "FlxInputText v1.11, ported to Haxe\n@link http://github.com/haxeflixel/flixel-ui",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxInputText.html"
		},
		"flixel.addons.ui.FlxMultiGamepad": {
			"name": "FlxMultiGamepad",
			"path": "flixel.addons.ui.FlxMultiGamepad",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxMultiGamepad.html"
		},
		"flixel.addons.ui.FlxMultiGamepadAnalogStick": {
			"name": "FlxMultiGamepadAnalogStick",
			"path": "flixel.addons.ui.FlxMultiGamepadAnalogStick",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxMultiGamepadAnalogStick.html"
		},
		"flixel.addons.ui.FlxMultiKey": {
			"name": "FlxMultiKey",
			"path": "flixel.addons.ui.FlxMultiKey",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxMultiKey.html"
		},
		"flixel.addons.ui.FlxSlider": {
			"name": "FlxSlider",
			"path": "flixel.addons.ui.FlxSlider",
			"description": "A slider GUI element for float and integer manipulation.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxSlider.html"
		},
		"flixel.addons.ui.FlxUI": {
			"name": "FlxUI",
			"path": "flixel.addons.ui.FlxUI",
			"description": "A simple xml-driven user interface",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUI.html"
		},
		"flixel.addons.ui.FlxUI9SliceSprite": {
			"name": "FlxUI9SliceSprite",
			"path": "flixel.addons.ui.FlxUI9SliceSprite",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUI9SliceSprite.html"
		},
		"flixel.addons.ui.FlxUIAssets": {
			"name": "FlxUIAssets",
			"path": "flixel.addons.ui.FlxUIAssets",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIAssets.html"
		},
		"flixel.addons.ui.FlxUIBar": {
			"name": "FlxUIBar",
			"path": "flixel.addons.ui.FlxUIBar",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIBar.html"
		},
		"flixel.addons.ui.FlxUIButton": {
			"name": "FlxUIButton",
			"path": "flixel.addons.ui.FlxUIButton",
			"description": "This class extends FlxUITypedButton and has a Text label, and is thus\nmost analagous to the regular FlxButton",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIButton.html"
		},
		"flixel.addons.ui.FlxUICheckBox": {
			"name": "FlxUICheckBox",
			"path": "flixel.addons.ui.FlxUICheckBox",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUICheckBox.html"
		},
		"flixel.addons.ui.FlxUIColorSwatch": {
			"name": "FlxUIColorSwatch",
			"path": "flixel.addons.ui.FlxUIColorSwatch",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIColorSwatch.html"
		},
		"flixel.addons.ui.FlxUIColorSwatchSelecter": {
			"name": "FlxUIColorSwatchSelecter",
			"path": "flixel.addons.ui.FlxUIColorSwatchSelecter",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIColorSwatchSelecter.html"
		},
		"flixel.addons.ui.FlxUICursor": {
			"name": "FlxUICursor",
			"path": "flixel.addons.ui.FlxUICursor",
			"description": "Cursor object that you can use to \"click\" on interface elements using a keyboard or gamepad\nTODO: need to support gamepad and/or deal with absence of mouse",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUICursor.html"
		},
		"flixel.addons.ui.FlxUIDropDownHeader": {
			"name": "FlxUIDropDownHeader",
			"path": "flixel.addons.ui.FlxUIDropDownHeader",
			"description": "Header for a FlxUIDropDownMenu",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIDropDownHeader.html"
		},
		"flixel.addons.ui.FlxUIDropDownMenu": {
			"name": "FlxUIDropDownMenu",
			"path": "flixel.addons.ui.FlxUIDropDownMenu",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIDropDownMenu.html"
		},
		"flixel.addons.ui.FlxUIGroup": {
			"name": "FlxUIGroup",
			"path": "flixel.addons.ui.FlxUIGroup",
			"description": "A cheap extension of FlxUIGroup that lets you move all the children around\nwithout having to call reset()",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIGroup.html"
		},
		"flixel.addons.ui.FlxUIInputText": {
			"name": "FlxUIInputText",
			"path": "flixel.addons.ui.FlxUIInputText",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIInputText.html"
		},
		"flixel.addons.ui.FlxUILine": {
			"name": "FlxUILine",
			"path": "flixel.addons.ui.FlxUILine",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUILine.html"
		},
		"flixel.addons.ui.FlxUIList": {
			"name": "FlxUIList",
			"path": "flixel.addons.ui.FlxUIList",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIList.html"
		},
		"flixel.addons.ui.FlxUILoadingScreen": {
			"name": "FlxUILoadingScreen",
			"path": "flixel.addons.ui.FlxUILoadingScreen",
			"description": "A simple loading screen -- you must drive the churning of tasks externally",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUILoadingScreen.html"
		},
		"flixel.addons.ui.FlxUIMouse": {
			"name": "FlxUIMouse",
			"path": "flixel.addons.ui.FlxUIMouse",
			"description": "A customized extension to FlxMouse that lets us add in accessibility stuff\nlike using the keyboard to control mouse moving/clicking",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIMouse.html"
		},
		"flixel.addons.ui.FlxUINumericStepper": {
			"name": "FlxUINumericStepper",
			"path": "flixel.addons.ui.FlxUINumericStepper",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUINumericStepper.html"
		},
		"flixel.addons.ui.FlxUIPopup": {
			"name": "FlxUIPopup",
			"path": "flixel.addons.ui.FlxUIPopup",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIPopup.html"
		},
		"flixel.addons.ui.FlxUIRadioGroup": {
			"name": "FlxUIRadioGroup",
			"path": "flixel.addons.ui.FlxUIRadioGroup",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIRadioGroup.html"
		},
		"flixel.addons.ui.FlxUIRegion": {
			"name": "FlxUIRegion",
			"path": "flixel.addons.ui.FlxUIRegion",
			"description": "A scalable object with width and height that isn't used for display purposes",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIRegion.html"
		},
		"flixel.addons.ui.FlxUISlider": {
			"name": "FlxUISlider",
			"path": "flixel.addons.ui.FlxUISlider",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUISlider.html"
		},
		"flixel.addons.ui.FlxUISprite": {
			"name": "FlxUISprite",
			"path": "flixel.addons.ui.FlxUISprite",
			"description": "Cheap extension of FlxSprite",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUISprite.html"
		},
		"flixel.addons.ui.FlxUISpriteButton": {
			"name": "FlxUISpriteButton",
			"path": "flixel.addons.ui.FlxUISpriteButton",
			"description": "This class extends FlxUISpriteButton and has a Sprite \"label\"",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUISpriteButton.html"
		},
		"flixel.addons.ui.FlxUIState": {
			"name": "FlxUIState",
			"path": "flixel.addons.ui.FlxUIState",
			"description": "This is a simple extension of FlxState that does two things:\n1) It implements the IFlxUIState interface\n2) Automatically creates a FlxUI objects from a single string id",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIState.html"
		},
		"flixel.addons.ui.FlxUISubState": {
			"name": "FlxUISubState",
			"path": "flixel.addons.ui.FlxUISubState",
			"description": "This is a simple extension of FlxState that does two things:\n1) It implements the IEventGetter interface\n2) Automatically creates a FlxUI objects from a single string id",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUISubState.html"
		},
		"flixel.addons.ui.FlxUITabMenu": {
			"name": "FlxUITabMenu",
			"path": "flixel.addons.ui.FlxUITabMenu",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITabMenu.html"
		},
		"flixel.addons.ui.FlxUIText": {
			"name": "FlxUIText",
			"path": "flixel.addons.ui.FlxUIText",
			"description": "Simple extension to the basic text field class.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIText.html"
		},
		"flixel.addons.ui.FlxUITileTest": {
			"name": "FlxUITileTest",
			"path": "flixel.addons.ui.FlxUITileTest",
			"description": "This is mostly just for testing purposes, it is NOT a replacement for FlxTileMap",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITileTest.html"
		},
		"flixel.addons.ui.FlxUITooltip": {
			"name": "FlxUITooltip",
			"path": "flixel.addons.ui.FlxUITooltip",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITooltip.html"
		},
		"flixel.addons.ui.FlxUITooltipManager": {
			"name": "FlxUITooltipManager",
			"path": "flixel.addons.ui.FlxUITooltipManager",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITooltipManager.html"
		},
		"flixel.addons.ui.FlxUITypedButton": {
			"name": "FlxUITypedButton",
			"path": "flixel.addons.ui.FlxUITypedButton",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITypedButton.html"
		},
		"flixel.addons.ui.FontDef": {
			"name": "FontDef",
			"path": "flixel.addons.ui.FontDef",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FontDef.html"
		},
		"flixel.addons.ui.FontFixer": {
			"name": "FontFixer",
			"path": "flixel.addons.ui.FontFixer",
			"description": "A really simple little class that solves an annoying problem with Flash font file names",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FontFixer.html"
		},
		"flixel.addons.ui.StrNameLabel": {
			"name": "StrNameLabel",
			"path": "flixel.addons.ui.StrNameLabel",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/StrNameLabel.html"
		},
		"flixel.addons.ui.SwatchData": {
			"name": "SwatchData",
			"path": "flixel.addons.ui.SwatchData",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/SwatchData.html"
		},
		"flixel.addons.ui.U": {
			"name": "U",
			"path": "flixel.addons.ui.U",
			"description": "Utility functions, inlined where possible",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/U.html"
		},
		"flixel.addons.ui.FlxUIDropDownMenuDropDirection": {
			"name": "FlxUIDropDownMenuDropDirection",
			"path": "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUIDropDownMenuDropDirection.html"
		},
		"flixel.addons.ui.GamepadAutoConnectPreference": {
			"name": "GamepadAutoConnectPreference",
			"path": "flixel.addons.ui.GamepadAutoConnectPreference",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/GamepadAutoConnectPreference.html"
		},
		"flixel.addons.ui.LineAxis": {
			"name": "LineAxis",
			"path": "flixel.addons.ui.LineAxis",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/LineAxis.html"
		},
		"flixel.addons.ui.Rounding": {
			"name": "Rounding",
			"path": "flixel.addons.ui.Rounding",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/Rounding.html"
		},
		"flixel.addons.ui.SortMethod": {
			"name": "SortMethod",
			"path": "flixel.addons.ui.SortMethod",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/SortMethod.html"
		},
		"flixel.addons.ui.XY": {
			"name": "XY",
			"path": "flixel.addons.ui.XY",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/XY.html"
		},
		"flixel.addons.ui.FlxBarStyle": {
			"name": "FlxBarStyle",
			"path": "flixel.addons.ui.FlxBarStyle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxBarStyle.html"
		},
		"flixel.addons.ui.FlxUITooltipData": {
			"name": "FlxUITooltipData",
			"path": "flixel.addons.ui.FlxUITooltipData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITooltipData.html"
		},
		"flixel.addons.ui.FlxUITooltipStyle": {
			"name": "FlxUITooltipStyle",
			"path": "flixel.addons.ui.FlxUITooltipStyle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/FlxUITooltipStyle.html"
		},
		"flixel.addons.ui.MaxMinSize": {
			"name": "MaxMinSize",
			"path": "flixel.addons.ui.MaxMinSize",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/MaxMinSize.html"
		},
		"flixel.addons.ui.NamedBool": {
			"name": "NamedBool",
			"path": "flixel.addons.ui.NamedBool",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/NamedBool.html"
		},
		"flixel.addons.ui.NamedFloat": {
			"name": "NamedFloat",
			"path": "flixel.addons.ui.NamedFloat",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/NamedFloat.html"
		},
		"flixel.addons.ui.NamedInt": {
			"name": "NamedInt",
			"path": "flixel.addons.ui.NamedInt",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/NamedInt.html"
		},
		"flixel.addons.ui.NamedString": {
			"name": "NamedString",
			"path": "flixel.addons.ui.NamedString",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/NamedString.html"
		},
		"flixel.addons.ui.SectionCounter": {
			"name": "SectionCounter",
			"path": "flixel.addons.ui.SectionCounter",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/SectionCounter.html"
		},
		"flixel.addons.ui.SortValue": {
			"name": "SortValue",
			"path": "flixel.addons.ui.SortValue",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/SortValue.html"
		},
		"flixel.addons.ui.StickInput": {
			"name": "StickInput",
			"path": "flixel.addons.ui.StickInput",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/StickInput.html"
		},
		"flixel.addons.ui.SwatchGraphic": {
			"name": "SwatchGraphic",
			"path": "flixel.addons.ui.SwatchGraphic",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/SwatchGraphic.html"
		},
		"flixel.addons.ui.UIEventCallback": {
			"name": "UIEventCallback",
			"path": "flixel.addons.ui.UIEventCallback",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/UIEventCallback.html"
		},
		"flixel.addons.ui.VarValue": {
			"name": "VarValue",
			"path": "flixel.addons.ui.VarValue",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/VarValue.html"
		},
		"flixel.addons.ui.WidgetList": {
			"name": "WidgetList",
			"path": "flixel.addons.ui.WidgetList",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/WidgetList.html"
		},
		"flixel.addons.util.FlxAsyncLoop": {
			"name": "FlxAsyncLoop",
			"path": "flixel.addons.util.FlxAsyncLoop",
			"description": "Special class for asynchonously performing a loop.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxAsyncLoop.html"
		},
		"flixel.addons.util.FlxFSM": {
			"name": "FlxFSM",
			"path": "flixel.addons.util.FlxFSM",
			"description": "A generic Finite-state machine implementation.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxFSM.html"
		},
		"flixel.addons.util.FlxFSMStack": {
			"name": "FlxFSMStack",
			"path": "flixel.addons.util.FlxFSMStack",
			"description": "Used for grouping FSM instances and updating them according to the stack's updateMode.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxFSMStack.html"
		},
		"flixel.addons.util.FlxFSMState": {
			"name": "FlxFSMState",
			"path": "flixel.addons.util.FlxFSMState",
			"description": "A generic FSM State implementation. Extend this class to create new states.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxFSMState.html"
		},
		"flixel.addons.util.FlxFSMTransitionTable": {
			"name": "FlxFSMTransitionTable",
			"path": "flixel.addons.util.FlxFSMTransitionTable",
			"description": "Contains the information on when to transition from a given state to another.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxFSMTransitionTable.html"
		},
		"flixel.addons.util.FlxScene": {
			"name": "FlxScene",
			"path": "flixel.addons.util.FlxScene",
			"description": "Loads a scene from XML file. Scenes contain layers of entities (custom FlxSprite),\nbackgrounds, tilemaps, constants, UI and more.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxScene.html"
		},
		"flixel.addons.util.FlxSimplex": {
			"name": "FlxSimplex",
			"path": "flixel.addons.util.FlxSimplex",
			"description": "Simplex noise generation.\nA combination of algorithms for very fast noise generation: http://weber.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf, http://www.google.com/patents/US6867776, and http://www.jgallant.com/procedurally-generating-wrapping-world-maps-in-unity-csharp-part-2/#wrap2.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/FlxSimplex.html"
		},
		"flixel.addons.util.PNGEncoder": {
			"name": "PNGEncoder",
			"path": "flixel.addons.util.PNGEncoder",
			"description": "Class that converts BitmapData into a valid PNG",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/PNGEncoder.html"
		},
		"flixel.addons.util.Transition": {
			"name": "Transition",
			"path": "flixel.addons.util.Transition",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/util/Transition.html"
		},
		"flixel.addons.util.StatePool": {
			"name": "StatePool",
			"path": "flixel.addons.util.StatePool",
			"description": "Helper typedef for FlxExtendedFSM's pools",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/util/StatePool.html"
		},
		"flixel.addons.weapon.FlxBullet": {
			"name": "FlxBullet",
			"path": "flixel.addons.weapon.FlxBullet",
			"description": "@link http://www.photonstorm.com\n@link http://www.haxeflixel.com",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxBullet.html"
		},
		"flixel.addons.weapon.FlxTypedWeapon": {
			"name": "FlxTypedWeapon",
			"path": "flixel.addons.weapon.FlxTypedWeapon",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxTypedWeapon.html"
		},
		"flixel.addons.weapon.FlxWeaponFireFrom": {
			"name": "FlxWeaponFireFrom",
			"path": "flixel.addons.weapon.FlxWeaponFireFrom",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxWeaponFireFrom.html"
		},
		"flixel.addons.weapon.FlxWeaponFireMode": {
			"name": "FlxWeaponFireMode",
			"path": "flixel.addons.weapon.FlxWeaponFireMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxWeaponFireMode.html"
		},
		"flixel.addons.weapon.FlxWeaponSpeedMode": {
			"name": "FlxWeaponSpeedMode",
			"path": "flixel.addons.weapon.FlxWeaponSpeedMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxWeaponSpeedMode.html"
		},
		"flixel.addons.weapon.FlxWeapon": {
			"name": "FlxWeapon",
			"path": "flixel.addons.weapon.FlxWeapon",
			"description": "A Weapon can only fire 1 type of bullet. But it can fire many of them at once (in different directions if needed) via createBulletPattern\nA Player could fire multiple Weapons at the same time however, if you need to layer them up",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/weapon/FlxWeapon.html"
		},
		"flixel.effects.particles.FlxParticle": {
			"name": "FlxParticle",
			"path": "flixel.effects.particles.FlxParticle",
			"description": "This is a simple particle class that extends the default behavior\nof FlxSprite to have slightly more specialized behavior\ncommon to many game scenarios. You can override and extend this class\njust like you would FlxSprite. While FlxEmitter\nused to work with just any old sprite, it now requires a\nFlxParticle based class.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/effects/particles/FlxParticle.html"
		},
		"flixel.effects.particles.FlxTypedEmitter": {
			"name": "FlxTypedEmitter",
			"path": "flixel.effects.particles.FlxTypedEmitter",
			"description": "FlxTypedEmitter is a lightweight particle emitter.\nIt can be used for one-time explosions or for continuous fx like rain and fire.\nFlxEmitter is not optimized or anything; all it does is launch FlxParticle objects out\nat set intervals by setting their positions and velocities accordingly.\nIt is easy to use and relatively efficient, relying on FlxGroup's RECYCLE POWERS.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/effects/particles/FlxTypedEmitter.html"
		},
		"flixel.effects.particles.IFlxParticle": {
			"name": "IFlxParticle",
			"path": "flixel.effects.particles.IFlxParticle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/effects/particles/IFlxParticle.html"
		},
		"flixel.effects.particles.FlxEmitterMode": {
			"name": "FlxEmitterMode",
			"path": "flixel.effects.particles.FlxEmitterMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/effects/particles/FlxEmitterMode.html"
		},
		"flixel.effects.particles.FlxEmitter": {
			"name": "FlxEmitter",
			"path": "flixel.effects.particles.FlxEmitter",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/effects/particles/FlxEmitter.html"
		},
		"flixel.effects.postprocess.PostProcess": {
			"name": "PostProcess",
			"path": "flixel.effects.postprocess.PostProcess",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/effects/postprocess/PostProcess.html"
		},
		"flixel.graphics.atlas.FlxAtlas": {
			"name": "FlxAtlas",
			"path": "flixel.graphics.atlas.FlxAtlas",
			"description": "Class for packing multiple images in big one and generating frame data for each of them\nso you can easily load regions of atlas in sprites and tilemaps as a source of graphic",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/atlas/FlxAtlas.html"
		},
		"flixel.graphics.atlas.FlxNode": {
			"name": "FlxNode",
			"path": "flixel.graphics.atlas.FlxNode",
			"description": "Atlas node holds information about image on Atlas.\nPlus it have few methods for easy frame data generation,\nwhich can be loaded in sprites and in tilemaps.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/atlas/FlxNode.html"
		},
		"flixel.graphics.frames.FlxAtlasFrames": {
			"name": "FlxAtlasFrames",
			"path": "flixel.graphics.frames.FlxAtlasFrames",
			"description": "Atlas frames collection. It makes possible to use texture atlases in Flixel.\nPlus it contains few packer parser methods for most commonly used atlas formats.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxAtlasFrames.html"
		},
		"flixel.graphics.frames.FlxBitmapFont": {
			"name": "FlxBitmapFont",
			"path": "flixel.graphics.frames.FlxBitmapFont",
			"description": "Holds information and bitmap characters for a bitmap font.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxBitmapFont.html"
		},
		"flixel.graphics.frames.FlxFilterFrames": {
			"name": "FlxFilterFrames",
			"path": "flixel.graphics.frames.FlxFilterFrames",
			"description": "Frames collection which you can apply bitmap filters to.\nWARNING: this frame collection doesn't use caching, so be careful or you will \"leak\" out memory very fast.\nYou should destroy frames collections of this type manually.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFilterFrames.html"
		},
		"flixel.graphics.frames.FlxFrame": {
			"name": "FlxFrame",
			"path": "flixel.graphics.frames.FlxFrame",
			"description": "Base class for all frame types",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFrame.html"
		},
		"flixel.graphics.frames.FlxFramesCollection": {
			"name": "FlxFramesCollection",
			"path": "flixel.graphics.frames.FlxFramesCollection",
			"description": "Base class for all frame collections.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFramesCollection.html"
		},
		"flixel.graphics.frames.FlxImageFrame": {
			"name": "FlxImageFrame",
			"path": "flixel.graphics.frames.FlxImageFrame",
			"description": "Single-frame collection.\nCould be useful for non-animated sprites.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxImageFrame.html"
		},
		"flixel.graphics.frames.FlxTileFrames": {
			"name": "FlxTileFrames",
			"path": "flixel.graphics.frames.FlxTileFrames",
			"description": "Spritesheet frame collection. It is used for tilemaps and animated sprites.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxTileFrames.html"
		},
		"flixel.graphics.frames.FlxFrameAngle": {
			"name": "FlxFrameAngle",
			"path": "flixel.graphics.frames.FlxFrameAngle",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFrameAngle.html"
		},
		"flixel.graphics.frames.FlxFrameType": {
			"name": "FlxFrameType",
			"path": "flixel.graphics.frames.FlxFrameType",
			"description": "Just enumeration of all types of frames.\nAdded for faster type detection with less usage of casting.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFrameType.html"
		},
		"flixel.graphics.frames.FlxFrameCollectionType": {
			"name": "FlxFrameCollectionType",
			"path": "flixel.graphics.frames.FlxFrameCollectionType",
			"description": "An enumeration of all types of frame collections.\nAdded for faster type detection with less usage of casting.",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/FlxFrameCollectionType.html"
		},
		"flixel.graphics.frames.TexturePackerObject": {
			"name": "TexturePackerObject",
			"path": "flixel.graphics.frames.TexturePackerObject",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/graphics/frames/TexturePackerObject.html"
		},
		"flixel.graphics.tile.FlxDrawBaseItem": {
			"name": "FlxDrawBaseItem",
			"path": "flixel.graphics.tile.FlxDrawBaseItem",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/FlxDrawBaseItem.html"
		},
		"flixel.graphics.tile.FlxDrawQuadsItem": {
			"name": "FlxDrawQuadsItem",
			"path": "flixel.graphics.tile.FlxDrawQuadsItem",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/FlxDrawQuadsItem.html"
		},
		"flixel.graphics.tile.FlxDrawTrianglesItem": {
			"name": "FlxDrawTrianglesItem",
			"path": "flixel.graphics.tile.FlxDrawTrianglesItem",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/FlxDrawTrianglesItem.html"
		},
		"flixel.graphics.tile.FlxGraphicsShader": {
			"name": "FlxGraphicsShader",
			"path": "flixel.graphics.tile.FlxGraphicsShader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/FlxGraphicsShader.html"
		},
		"flixel.graphics.tile.FlxDrawItemType": {
			"name": "FlxDrawItemType",
			"path": "flixel.graphics.tile.FlxDrawItemType",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/FlxDrawItemType.html"
		},
		"flixel.graphics.tile.DrawData": {
			"name": "DrawData",
			"path": "flixel.graphics.tile.DrawData",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/graphics/tile/DrawData.html"
		},
		"flixel.input.actions.FlxActionAnalog": {
			"name": "FlxActionAnalog",
			"path": "flixel.input.actions.FlxActionAnalog",
			"description": "Analog actions are events with continuous (floating-point) values, and up\nto two axes (x,y). This is for events like \"move\" and \"accelerate\" where the\nevent is not simply on or off.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxActionAnalog.html"
		},
		"flixel.input.actions.FlxActionDigital": {
			"name": "FlxActionDigital",
			"path": "flixel.input.actions.FlxActionDigital",
			"description": "A digital action is a binary on/off event like \"jump\" or \"fire\".\nFlxActions let you attach multiple inputs to a single in-game action,\nso \"jump\" could be performed by a keyboard press, a mouse click,\nor a gamepad button press.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxActionDigital.html"
		},
		"flixel.input.actions.FlxActionManager": {
			"name": "FlxActionManager",
			"path": "flixel.input.actions.FlxActionManager",
			"description": "High level input manager for FlxActions. This lets you manage multiple input\ndevices and action sets, and is the only supported method for natively using\nthe Steam Controller API.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxActionManager.html"
		},
		"flixel.input.actions.FlxInputDeviceID": {
			"name": "FlxInputDeviceID",
			"path": "flixel.input.actions.FlxInputDeviceID",
			"description": "Just a bucket for some handy sentinel values.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxInputDeviceID.html"
		},
		"flixel.input.actions.FlxInputDeviceObject": {
			"name": "FlxInputDeviceObject",
			"path": "flixel.input.actions.FlxInputDeviceObject",
			"description": "Just a bucket for being able to refer to a specific device by type &amp; slot number",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxInputDeviceObject.html"
		},
		"flixel.input.actions.FlxSteamController": {
			"name": "FlxSteamController",
			"path": "flixel.input.actions.FlxSteamController",
			"description": "Helper class that wraps steam API so that flixel can do some basic\nbook-keeping on top of it",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/actions/FlxSteamController.html"
		},
		"flixel.input.gamepad.FlxGamepad": {
			"name": "FlxGamepad",
			"path": "flixel.input.gamepad.FlxGamepad",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepad.html"
		},
		"flixel.input.gamepad.FlxGamepadAnalogStick": {
			"name": "FlxGamepadAnalogStick",
			"path": "flixel.input.gamepad.FlxGamepadAnalogStick",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadAnalogStick.html"
		},
		"flixel.input.gamepad.FlxGamepadButton": {
			"name": "FlxGamepadButton",
			"path": "flixel.input.gamepad.FlxGamepadButton",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadButton.html"
		},
		"flixel.input.gamepad.FlxGamepadManager": {
			"name": "FlxGamepadManager",
			"path": "flixel.input.gamepad.FlxGamepadManager",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadManager.html"
		},
		"flixel.input.gamepad.FlxGamepadInputID": {
			"name": "FlxGamepadInputID",
			"path": "flixel.input.gamepad.FlxGamepadInputID",
			"description": "A high-level list of unique values for gamepad inputs.\nThese do NOT correspond to any actual hardware values but\nare the basis for all hardware-specific lookups.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadInputID.html"
		},
		"flixel.input.gamepad.FlxAnalogToDigitalMode": {
			"name": "FlxAnalogToDigitalMode",
			"path": "flixel.input.gamepad.FlxAnalogToDigitalMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxAnalogToDigitalMode.html"
		},
		"flixel.input.gamepad.FlxGamepadAttachment": {
			"name": "FlxGamepadAttachment",
			"path": "flixel.input.gamepad.FlxGamepadAttachment",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadAttachment.html"
		},
		"flixel.input.gamepad.FlxGamepadDeadZoneMode": {
			"name": "FlxGamepadDeadZoneMode",
			"path": "flixel.input.gamepad.FlxGamepadDeadZoneMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadDeadZoneMode.html"
		},
		"flixel.input.gamepad.FlxGamepadModel": {
			"name": "FlxGamepadModel",
			"path": "flixel.input.gamepad.FlxGamepadModel",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadModel.html"
		},
		"flixel.input.gamepad.FlxGamepadAnalogStickSettings": {
			"name": "FlxGamepadAnalogStickSettings",
			"path": "flixel.input.gamepad.FlxGamepadAnalogStickSettings",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/FlxGamepadAnalogStickSettings.html"
		},
		"flixel.input.keyboard.FlxKeyList": {
			"name": "FlxKeyList",
			"path": "flixel.input.keyboard.FlxKeyList",
			"description": "A helper class for keyboard input.\nProvides optimized key checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/keyboard/FlxKeyList.html"
		},
		"flixel.input.keyboard.FlxKeyboard": {
			"name": "FlxKeyboard",
			"path": "flixel.input.keyboard.FlxKeyboard",
			"description": "Keeps track of what keys are pressed and how with handy Bools or strings.\nNormally accessed via FlxG.keys. Example: FlxG.keys.justPressed.A",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/keyboard/FlxKeyboard.html"
		},
		"flixel.input.keyboard.FlxKey": {
			"name": "FlxKey",
			"path": "flixel.input.keyboard.FlxKey",
			"description": "Maps enum values and strings to integer keycodes.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/input/keyboard/FlxKey.html"
		},
		"flixel.input.keyboard.FlxKeyInput": {
			"name": "FlxKeyInput",
			"path": "flixel.input.keyboard.FlxKeyInput",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/input/keyboard/FlxKeyInput.html"
		},
		"flixel.input.mouse.FlxMouse": {
			"name": "FlxMouse",
			"path": "flixel.input.mouse.FlxMouse",
			"description": "This class helps contain and track the mouse pointer in your game.\nAutomatically accounts for parallax scrolling, etc.\nNormally accessed via FlxG.mouse.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/mouse/FlxMouse.html"
		},
		"flixel.input.mouse.FlxMouseButton": {
			"name": "FlxMouseButton",
			"path": "flixel.input.mouse.FlxMouseButton",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/mouse/FlxMouseButton.html"
		},
		"flixel.input.mouse.FlxMouseEventManager": {
			"name": "FlxMouseEventManager",
			"path": "flixel.input.mouse.FlxMouseEventManager",
			"description": "Provides mouse event detection for FlxObject and FlxSprite (pixel-perfect for those).\nTo use it, initialize the manager and register objects / sprites.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/mouse/FlxMouseEventManager.html"
		},
		"flixel.input.mouse.FlxMouseButtonID": {
			"name": "FlxMouseButtonID",
			"path": "flixel.input.mouse.FlxMouseButtonID",
			"description": "These IDs are negative to avoid overlaps with possible touch point IDs.",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/input/mouse/FlxMouseButtonID.html"
		},
		"flixel.input.touch.FlxTouch": {
			"name": "FlxTouch",
			"path": "flixel.input.touch.FlxTouch",
			"description": "Helper class, contains and tracks touch points in your game.\nAutomatically accounts for parallax scrolling, etc.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/touch/FlxTouch.html"
		},
		"flixel.input.touch.FlxTouchManager": {
			"name": "FlxTouchManager",
			"path": "flixel.input.touch.FlxTouchManager",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/touch/FlxTouchManager.html"
		},
		"flixel.system.debug.DebuggerUtil": {
			"name": "DebuggerUtil",
			"path": "flixel.system.debug.DebuggerUtil",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/DebuggerUtil.html"
		},
		"flixel.system.debug.FlxDebugger": {
			"name": "FlxDebugger",
			"path": "flixel.system.debug.FlxDebugger",
			"description": "Container for the new debugger overlay. Most of the functionality is in the debug folder widgets,\nbut this class instantiates the widgets and handles their basic formatting and arrangement.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/FlxDebugger.html"
		},
		"flixel.system.debug.Tooltip": {
			"name": "Tooltip",
			"path": "flixel.system.debug.Tooltip",
			"description": "Manages tooltips to be used within the debugger.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/Tooltip.html"
		},
		"flixel.system.debug.TooltipOverlay": {
			"name": "TooltipOverlay",
			"path": "flixel.system.debug.TooltipOverlay",
			"description": "A generic, Flash-based tooltip class, created for use in FlxDebugger.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/TooltipOverlay.html"
		},
		"flixel.system.debug.VCR": {
			"name": "VCR",
			"path": "flixel.system.debug.VCR",
			"description": "This class contains the record, stop, play, and step 1 frame buttons seen on the top edge of the debugger overlay.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/VCR.html"
		},
		"flixel.system.debug.Window": {
			"name": "Window",
			"path": "flixel.system.debug.Window",
			"description": "A generic, Flash-based window class, created for use in FlxDebugger.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/Window.html"
		},
		"flixel.system.debug.FlxDebuggerLayout": {
			"name": "FlxDebuggerLayout",
			"path": "flixel.system.debug.FlxDebuggerLayout",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/system/debug/FlxDebuggerLayout.html"
		},
		"flixel.system.frontEnds.BitmapFrontEnd": {
			"name": "BitmapFrontEnd",
			"path": "flixel.system.frontEnds.BitmapFrontEnd",
			"description": "Internal storage system to prevent graphics from being used repeatedly in memory.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/BitmapFrontEnd.html"
		},
		"flixel.system.frontEnds.BitmapLogFrontEnd": {
			"name": "BitmapLogFrontEnd",
			"path": "flixel.system.frontEnds.BitmapLogFrontEnd",
			"description": "Accessed via FlxG.bitmapLog.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/BitmapLogFrontEnd.html"
		},
		"flixel.system.frontEnds.CameraFrontEnd": {
			"name": "CameraFrontEnd",
			"path": "flixel.system.frontEnds.CameraFrontEnd",
			"description": "Accessed via FlxG.cameras.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/CameraFrontEnd.html"
		},
		"flixel.system.frontEnds.ConsoleFrontEnd": {
			"name": "ConsoleFrontEnd",
			"path": "flixel.system.frontEnds.ConsoleFrontEnd",
			"description": "Accessed via FlxG.console.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/ConsoleFrontEnd.html"
		},
		"flixel.system.frontEnds.DebuggerFrontEnd": {
			"name": "DebuggerFrontEnd",
			"path": "flixel.system.frontEnds.DebuggerFrontEnd",
			"description": "Accessed via FlxG.debugger.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/DebuggerFrontEnd.html"
		},
		"flixel.system.frontEnds.InputFrontEnd": {
			"name": "InputFrontEnd",
			"path": "flixel.system.frontEnds.InputFrontEnd",
			"description": "Accessed via FlxG.inputs.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/InputFrontEnd.html"
		},
		"flixel.system.frontEnds.LogFrontEnd": {
			"name": "LogFrontEnd",
			"path": "flixel.system.frontEnds.LogFrontEnd",
			"description": "Accessed via FlxG.log.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/LogFrontEnd.html"
		},
		"flixel.system.frontEnds.PluginFrontEnd": {
			"name": "PluginFrontEnd",
			"path": "flixel.system.frontEnds.PluginFrontEnd",
			"description": "Accessed via FlxG.plugins.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/PluginFrontEnd.html"
		},
		"flixel.system.frontEnds.SignalFrontEnd": {
			"name": "SignalFrontEnd",
			"path": "flixel.system.frontEnds.SignalFrontEnd",
			"description": "Accessed via FlxG.signals.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/SignalFrontEnd.html"
		},
		"flixel.system.frontEnds.SoundFrontEnd": {
			"name": "SoundFrontEnd",
			"path": "flixel.system.frontEnds.SoundFrontEnd",
			"description": "Accessed via FlxG.sound.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/SoundFrontEnd.html"
		},
		"flixel.system.frontEnds.VCRFrontEnd": {
			"name": "VCRFrontEnd",
			"path": "flixel.system.frontEnds.VCRFrontEnd",
			"description": "Accessed via FlxG.vcr.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/VCRFrontEnd.html"
		},
		"flixel.system.frontEnds.WatchFrontEnd": {
			"name": "WatchFrontEnd",
			"path": "flixel.system.frontEnds.WatchFrontEnd",
			"description": "Accessed via FlxG.watch.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/frontEnds/WatchFrontEnd.html"
		},
		"flixel.system.macros.FlxMacroUtil": {
			"name": "FlxMacroUtil",
			"path": "flixel.system.macros.FlxMacroUtil",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/macros/FlxMacroUtil.html"
		},
		"flixel.system.replay.CodeValuePair": {
			"name": "CodeValuePair",
			"path": "flixel.system.replay.CodeValuePair",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/replay/CodeValuePair.html"
		},
		"flixel.system.replay.FlxReplay": {
			"name": "FlxReplay",
			"path": "flixel.system.replay.FlxReplay",
			"description": "The replay object both records and replays game recordings,\nas well as handle saving and loading replays to and from files.\nGameplay recordings are essentially a list of keyboard and mouse inputs,\nbut since Flixel is fairly deterministic, we can use these to play back\nrecordings of gameplay with a decent amount of fidelity.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/replay/FlxReplay.html"
		},
		"flixel.system.replay.FrameRecord": {
			"name": "FrameRecord",
			"path": "flixel.system.replay.FrameRecord",
			"description": "Helper class for the new replay system.  Represents all the game inputs for one \"frame\" or \"step\" of the game loop.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/replay/FrameRecord.html"
		},
		"flixel.system.replay.MouseRecord": {
			"name": "MouseRecord",
			"path": "flixel.system.replay.MouseRecord",
			"description": "A helper class for the frame records, part of the replay/demo/recording system.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/replay/MouseRecord.html"
		},
		"flixel.system.scaleModes.BaseScaleMode": {
			"name": "BaseScaleMode",
			"path": "flixel.system.scaleModes.BaseScaleMode",
			"description": "The base class from which all other scale modes extend from.\nYou can implement your own scale mode by extending this class and overriding the appropriate methods.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/BaseScaleMode.html"
		},
		"flixel.system.scaleModes.FillScaleMode": {
			"name": "FillScaleMode",
			"path": "flixel.system.scaleModes.FillScaleMode",
			"description": "FillScaleMode is a scaling mode which stretches and squashes the game to exactly fit the provided window.\nThis may result in the graphics of your game being distorted if the user resizes their game window.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/FillScaleMode.html"
		},
		"flixel.system.scaleModes.FixedScaleAdjustSizeScaleMode": {
			"name": "FixedScaleAdjustSizeScaleMode",
			"path": "flixel.system.scaleModes.FixedScaleAdjustSizeScaleMode",
			"description": "FixedScaleAdjustSizeScaleMode is a scaling mode which maintains the game's scene at a fixed size.\nThis will clip off the edges of the scene for dimensions which are too small.\nHowever, unlike FixedScaleMode, this mode will extend the width of the current scene to match the window scale.\nThe result is that objects that would be offscreen on smaller window sizes will be visible in larger ones.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/FixedScaleAdjustSizeScaleMode.html"
		},
		"flixel.system.scaleModes.FixedScaleMode": {
			"name": "FixedScaleMode",
			"path": "flixel.system.scaleModes.FixedScaleMode",
			"description": "FixedScaleMode is a scaling mode which maintains the game's scene at a fixed size.\nThis will clip off the edges of the scene for dimensions which are too small,\nand leave black margins on the sides for dimensions which are too large.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/FixedScaleMode.html"
		},
		"flixel.system.scaleModes.PixelPerfectScaleMode": {
			"name": "PixelPerfectScaleMode",
			"path": "flixel.system.scaleModes.PixelPerfectScaleMode",
			"description": "PixelPerfectScaleMode is a scaling mode which maintains the game's aspect ratio.\nWhen you shrink or grow the window, the width and height of the game will adjust,\neither scaling the game or adding black bars as needed.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/PixelPerfectScaleMode.html"
		},
		"flixel.system.scaleModes.RatioScaleMode": {
			"name": "RatioScaleMode",
			"path": "flixel.system.scaleModes.RatioScaleMode",
			"description": "RatioScaleMode is a scaling mode which maintains the game's aspect ratio.\nWhen you shrink or grow the window, the width and height of the game will adjust,\neither scaling the game or adding black bars as needed.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/RatioScaleMode.html"
		},
		"flixel.system.scaleModes.RelativeScaleMode": {
			"name": "RelativeScaleMode",
			"path": "flixel.system.scaleModes.RelativeScaleMode",
			"description": "RelativeScaleMode is a scaling mode which stretches and squashes the game to exactly fit the provided window.\nIt acts similar to the FillScaleMode, however there is one major difference.\nRelativeScaleMode takes two parameters, which represent the width scale and height scale.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/RelativeScaleMode.html"
		},
		"flixel.system.scaleModes.StageSizeScaleMode": {
			"name": "StageSizeScaleMode",
			"path": "flixel.system.scaleModes.StageSizeScaleMode",
			"description": "StageSizeScaleMode is a scaling mode which maintains the game's scene at a fixed size.\nThis will clip off the edges of the scene for dimensions which are too small.\nHowever, unlike FixedScaleMode, this mode will extend the width of the current scene to match the window scale.\nThe result is that objects that would be offscreen on smaller window sizes will be visible in larger ones.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/scaleModes/StageSizeScaleMode.html"
		},
		"flixel.system.ui.FlxFocusLostScreen": {
			"name": "FlxFocusLostScreen",
			"path": "flixel.system.ui.FlxFocusLostScreen",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/ui/FlxFocusLostScreen.html"
		},
		"flixel.system.ui.FlxSoundTray": {
			"name": "FlxSoundTray",
			"path": "flixel.system.ui.FlxSoundTray",
			"description": "The flixel sound tray, the little volume meter that pops down sometimes.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/ui/FlxSoundTray.html"
		},
		"flixel.system.ui.FlxSystemButton": {
			"name": "FlxSystemButton",
			"path": "flixel.system.ui.FlxSystemButton",
			"description": "A basic button for the debugger, extends flash.display.Sprite.\nCannot be used in a FlxState.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/ui/FlxSystemButton.html"
		},
		"flixel.tweens.misc.AngleTween": {
			"name": "AngleTween",
			"path": "flixel.tweens.misc.AngleTween",
			"description": "Tweens from one angle to another.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/misc/AngleTween.html"
		},
		"flixel.tweens.misc.ColorTween": {
			"name": "ColorTween",
			"path": "flixel.tweens.misc.ColorTween",
			"description": "Tweens a color's red, green, and blue properties\nindependently. Can also tween an alpha value.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/misc/ColorTween.html"
		},
		"flixel.tweens.misc.NumTween": {
			"name": "NumTween",
			"path": "flixel.tweens.misc.NumTween",
			"description": "Tweens a numeric value. See FlxTween.num()",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/misc/NumTween.html"
		},
		"flixel.tweens.misc.VarTween": {
			"name": "VarTween",
			"path": "flixel.tweens.misc.VarTween",
			"description": "Tweens multiple numeric properties of an object simultaneously.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/misc/VarTween.html"
		},
		"flixel.tweens.motion.CircularMotion": {
			"name": "CircularMotion",
			"path": "flixel.tweens.motion.CircularMotion",
			"description": "Determines a circular motion.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/CircularMotion.html"
		},
		"flixel.tweens.motion.CubicMotion": {
			"name": "CubicMotion",
			"path": "flixel.tweens.motion.CubicMotion",
			"description": "Determines motion along a cubic curve.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/CubicMotion.html"
		},
		"flixel.tweens.motion.LinearMotion": {
			"name": "LinearMotion",
			"path": "flixel.tweens.motion.LinearMotion",
			"description": "Determines motion along a line, from one point to another.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/LinearMotion.html"
		},
		"flixel.tweens.motion.LinearPath": {
			"name": "LinearPath",
			"path": "flixel.tweens.motion.LinearPath",
			"description": "Determines linear motion along a set of points.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/LinearPath.html"
		},
		"flixel.tweens.motion.Motion": {
			"name": "Motion",
			"path": "flixel.tweens.motion.Motion",
			"description": "Base class for motion Tweens.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/Motion.html"
		},
		"flixel.tweens.motion.QuadMotion": {
			"name": "QuadMotion",
			"path": "flixel.tweens.motion.QuadMotion",
			"description": "Determines motion along p1 quadratic curve.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/QuadMotion.html"
		},
		"flixel.tweens.motion.QuadPath": {
			"name": "QuadPath",
			"path": "flixel.tweens.motion.QuadPath",
			"description": "A series of points which will determine a path from the\nbeginning point to the end point using quadratic curves.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/tweens/motion/QuadPath.html"
		},
		"flixel.util.helpers.FlxBounds": {
			"name": "FlxBounds",
			"path": "flixel.util.helpers.FlxBounds",
			"description": "Helper object for holding minimum and maximum values of various properties.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/helpers/FlxBounds.html"
		},
		"flixel.util.helpers.FlxRange": {
			"name": "FlxRange",
			"path": "flixel.util.helpers.FlxRange",
			"description": "Helper object for holding beginning and ending values of various properties.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/util/helpers/FlxRange.html"
		},
		"flixel.util.typeLimit.OneOfFour": {
			"name": "OneOfFour",
			"path": "flixel.util.typeLimit.OneOfFour",
			"description": "Useful to limit a Dynamic function argument's type to the specified\ntype parameters. This does NOT make the use of Dynamic type-safe in\nany way (the underlying type is still Dynamic and Std.is() checks +\ncasts are necessary).",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/typeLimit/OneOfFour.html"
		},
		"flixel.util.typeLimit.OneOfThree": {
			"name": "OneOfThree",
			"path": "flixel.util.typeLimit.OneOfThree",
			"description": "Useful to limit a Dynamic function argument's type to the specified\ntype parameters. This does NOT make the use of Dynamic type-safe in\nany way (the underlying type is still Dynamic and Std.is() checks +\ncasts are necessary).",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/typeLimit/OneOfThree.html"
		},
		"flixel.util.typeLimit.OneOfTwo": {
			"name": "OneOfTwo",
			"path": "flixel.util.typeLimit.OneOfTwo",
			"description": "Useful to limit a Dynamic function argument's type to the specified\ntype parameters. This does NOT make the use of Dynamic type-safe in\nany way (the underlying type is still Dynamic and Std.is() checks +\ncasts are necessary).",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/util/typeLimit/OneOfTwo.html"
		},
		"lime.graphics.cairo.Cairo": {
			"name": "Cairo",
			"path": "lime.graphics.cairo.Cairo",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/Cairo.html"
		},
		"lime.graphics.cairo.CairoGlyph": {
			"name": "CairoGlyph",
			"path": "lime.graphics.cairo.CairoGlyph",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoGlyph.html"
		},
		"lime.graphics.cairo.CairoAntialias": {
			"name": "CairoAntialias",
			"path": "lime.graphics.cairo.CairoAntialias",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoAntialias.html"
		},
		"lime.graphics.cairo.CairoContent": {
			"name": "CairoContent",
			"path": "lime.graphics.cairo.CairoContent",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoContent.html"
		},
		"lime.graphics.cairo.CairoExtend": {
			"name": "CairoExtend",
			"path": "lime.graphics.cairo.CairoExtend",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoExtend.html"
		},
		"lime.graphics.cairo.CairoFillRule": {
			"name": "CairoFillRule",
			"path": "lime.graphics.cairo.CairoFillRule",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoFillRule.html"
		},
		"lime.graphics.cairo.CairoFilter": {
			"name": "CairoFilter",
			"path": "lime.graphics.cairo.CairoFilter",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoFilter.html"
		},
		"lime.graphics.cairo.CairoFontFace": {
			"name": "CairoFontFace",
			"path": "lime.graphics.cairo.CairoFontFace",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoFontFace.html"
		},
		"lime.graphics.cairo.CairoFontOptions": {
			"name": "CairoFontOptions",
			"path": "lime.graphics.cairo.CairoFontOptions",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoFontOptions.html"
		},
		"lime.graphics.cairo.CairoHintMetrics": {
			"name": "CairoHintMetrics",
			"path": "lime.graphics.cairo.CairoHintMetrics",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoHintMetrics.html"
		},
		"lime.graphics.cairo.CairoHintStyle": {
			"name": "CairoHintStyle",
			"path": "lime.graphics.cairo.CairoHintStyle",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoHintStyle.html"
		},
		"lime.graphics.cairo.CairoLineCap": {
			"name": "CairoLineCap",
			"path": "lime.graphics.cairo.CairoLineCap",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoLineCap.html"
		},
		"lime.graphics.cairo.CairoLineJoin": {
			"name": "CairoLineJoin",
			"path": "lime.graphics.cairo.CairoLineJoin",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoLineJoin.html"
		},
		"lime.graphics.cairo.CairoOperator": {
			"name": "CairoOperator",
			"path": "lime.graphics.cairo.CairoOperator",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoOperator.html"
		},
		"lime.graphics.cairo.CairoPattern": {
			"name": "CairoPattern",
			"path": "lime.graphics.cairo.CairoPattern",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoPattern.html"
		},
		"lime.graphics.cairo.CairoStatus": {
			"name": "CairoStatus",
			"path": "lime.graphics.cairo.CairoStatus",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoStatus.html"
		},
		"lime.graphics.cairo.CairoSubpixelOrder": {
			"name": "CairoSubpixelOrder",
			"path": "lime.graphics.cairo.CairoSubpixelOrder",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoSubpixelOrder.html"
		},
		"lime.graphics.cairo.CairoSurface": {
			"name": "CairoSurface",
			"path": "lime.graphics.cairo.CairoSurface",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/cairo/CairoSurface.html"
		},
		"lime.graphics.opengl.GL": {
			"name": "GL",
			"path": "lime.graphics.opengl.GL",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GL.html"
		},
		"lime.graphics.opengl.GLProgram": {
			"name": "GLProgram",
			"path": "lime.graphics.opengl.GLProgram",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLProgram.html"
		},
		"lime.graphics.opengl.GLShader": {
			"name": "GLShader",
			"path": "lime.graphics.opengl.GLShader",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLShader.html"
		},
		"lime.graphics.opengl.GLActiveInfo": {
			"name": "GLActiveInfo",
			"path": "lime.graphics.opengl.GLActiveInfo",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLActiveInfo.html"
		},
		"lime.graphics.opengl.GLBuffer": {
			"name": "GLBuffer",
			"path": "lime.graphics.opengl.GLBuffer",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLBuffer.html"
		},
		"lime.graphics.opengl.GLContextAttributes": {
			"name": "GLContextAttributes",
			"path": "lime.graphics.opengl.GLContextAttributes",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLContextAttributes.html"
		},
		"lime.graphics.opengl.GLFramebuffer": {
			"name": "GLFramebuffer",
			"path": "lime.graphics.opengl.GLFramebuffer",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLFramebuffer.html"
		},
		"lime.graphics.opengl.GLQuery": {
			"name": "GLQuery",
			"path": "lime.graphics.opengl.GLQuery",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLQuery.html"
		},
		"lime.graphics.opengl.GLRenderbuffer": {
			"name": "GLRenderbuffer",
			"path": "lime.graphics.opengl.GLRenderbuffer",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLRenderbuffer.html"
		},
		"lime.graphics.opengl.GLSampler": {
			"name": "GLSampler",
			"path": "lime.graphics.opengl.GLSampler",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLSampler.html"
		},
		"lime.graphics.opengl.GLShaderPrecisionFormat": {
			"name": "GLShaderPrecisionFormat",
			"path": "lime.graphics.opengl.GLShaderPrecisionFormat",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLShaderPrecisionFormat.html"
		},
		"lime.graphics.opengl.GLSync": {
			"name": "GLSync",
			"path": "lime.graphics.opengl.GLSync",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLSync.html"
		},
		"lime.graphics.opengl.GLTexture": {
			"name": "GLTexture",
			"path": "lime.graphics.opengl.GLTexture",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLTexture.html"
		},
		"lime.graphics.opengl.GLTransformFeedback": {
			"name": "GLTransformFeedback",
			"path": "lime.graphics.opengl.GLTransformFeedback",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLTransformFeedback.html"
		},
		"lime.graphics.opengl.GLUniformLocation": {
			"name": "GLUniformLocation",
			"path": "lime.graphics.opengl.GLUniformLocation",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLUniformLocation.html"
		},
		"lime.graphics.opengl.GLVertexArrayObject": {
			"name": "GLVertexArrayObject",
			"path": "lime.graphics.opengl.GLVertexArrayObject",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/lime/graphics/opengl/GLVertexArrayObject.html"
		},
		"lime.media.openal.AL": {
			"name": "AL",
			"path": "lime.media.openal.AL",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/openal/AL.html"
		},
		"lime.media.openal.ALC": {
			"name": "ALC",
			"path": "lime.media.openal.ALC",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALC.html"
		},
		"lime.media.openal.ALAuxiliaryEffectSlot": {
			"name": "ALAuxiliaryEffectSlot",
			"path": "lime.media.openal.ALAuxiliaryEffectSlot",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALAuxiliaryEffectSlot.html"
		},
		"lime.media.openal.ALBuffer": {
			"name": "ALBuffer",
			"path": "lime.media.openal.ALBuffer",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALBuffer.html"
		},
		"lime.media.openal.ALContext": {
			"name": "ALContext",
			"path": "lime.media.openal.ALContext",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALContext.html"
		},
		"lime.media.openal.ALDevice": {
			"name": "ALDevice",
			"path": "lime.media.openal.ALDevice",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALDevice.html"
		},
		"lime.media.openal.ALEffect": {
			"name": "ALEffect",
			"path": "lime.media.openal.ALEffect",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALEffect.html"
		},
		"lime.media.openal.ALFilter": {
			"name": "ALFilter",
			"path": "lime.media.openal.ALFilter",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALFilter.html"
		},
		"lime.media.openal.ALSource": {
			"name": "ALSource",
			"path": "lime.media.openal.ALSource",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/lime/media/openal/ALSource.html"
		},
		"lime.media.vorbis.VorbisComment": {
			"name": "VorbisComment",
			"path": "lime.media.vorbis.VorbisComment",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/vorbis/VorbisComment.html"
		},
		"lime.media.vorbis.VorbisFile": {
			"name": "VorbisFile",
			"path": "lime.media.vorbis.VorbisFile",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/vorbis/VorbisFile.html"
		},
		"lime.media.vorbis.VorbisInfo": {
			"name": "VorbisInfo",
			"path": "lime.media.vorbis.VorbisInfo",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/lime/media/vorbis/VorbisInfo.html"
		},
		"openfl.display3D.textures.CubeTexture": {
			"name": "CubeTexture",
			"path": "openfl.display3D.textures.CubeTexture",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/textures/CubeTexture.html"
		},
		"openfl.display3D.textures.RectangleTexture": {
			"name": "RectangleTexture",
			"path": "openfl.display3D.textures.RectangleTexture",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/textures/RectangleTexture.html"
		},
		"openfl.display3D.textures.Texture": {
			"name": "Texture",
			"path": "openfl.display3D.textures.Texture",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/textures/Texture.html"
		},
		"openfl.display3D.textures.TextureBase": {
			"name": "TextureBase",
			"path": "openfl.display3D.textures.TextureBase",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/textures/TextureBase.html"
		},
		"openfl.display3D.textures.VideoTexture": {
			"name": "VideoTexture",
			"path": "openfl.display3D.textures.VideoTexture",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/openfl/display3D/textures/VideoTexture.html"
		},
		"flixel.addons.display.shapes.FlxShape": {
			"name": "FlxShape",
			"path": "flixel.addons.display.shapes.FlxShape",
			"description": "A convenience class for wrapping vector shape drawing in FlxSprites, all ready to go.\nDon't use this class by itself -- use things like FlxLine, FlxCircle, that extend it",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShape.html"
		},
		"flixel.addons.display.shapes.FlxShapeArrow": {
			"name": "FlxShapeArrow",
			"path": "flixel.addons.display.shapes.FlxShapeArrow",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeArrow.html"
		},
		"flixel.addons.display.shapes.FlxShapeBox": {
			"name": "FlxShapeBox",
			"path": "flixel.addons.display.shapes.FlxShapeBox",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeBox.html"
		},
		"flixel.addons.display.shapes.FlxShapeCircle": {
			"name": "FlxShapeCircle",
			"path": "flixel.addons.display.shapes.FlxShapeCircle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeCircle.html"
		},
		"flixel.addons.display.shapes.FlxShapeCross": {
			"name": "FlxShapeCross",
			"path": "flixel.addons.display.shapes.FlxShapeCross",
			"description": "A cross shape drawn onto a FlxSprite. Useful for tactics games and stuff!",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeCross.html"
		},
		"flixel.addons.display.shapes.FlxShapeDonut": {
			"name": "FlxShapeDonut",
			"path": "flixel.addons.display.shapes.FlxShapeDonut",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeDonut.html"
		},
		"flixel.addons.display.shapes.FlxShapeDoubleCircle": {
			"name": "FlxShapeDoubleCircle",
			"path": "flixel.addons.display.shapes.FlxShapeDoubleCircle",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeDoubleCircle.html"
		},
		"flixel.addons.display.shapes.FlxShapeGrid": {
			"name": "FlxShapeGrid",
			"path": "flixel.addons.display.shapes.FlxShapeGrid",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeGrid.html"
		},
		"flixel.addons.display.shapes.FlxShapeLightning": {
			"name": "FlxShapeLightning",
			"path": "flixel.addons.display.shapes.FlxShapeLightning",
			"description": "This creates a Lightning bolt drawn on top of a FlxSprite object.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeLightning.html"
		},
		"flixel.addons.display.shapes.FlxShapeLine": {
			"name": "FlxShapeLine",
			"path": "flixel.addons.display.shapes.FlxShapeLine",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeLine.html"
		},
		"flixel.addons.display.shapes.FlxShapeSquareDonut": {
			"name": "FlxShapeSquareDonut",
			"path": "flixel.addons.display.shapes.FlxShapeSquareDonut",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeSquareDonut.html"
		},
		"flixel.addons.display.shapes.LineSegment": {
			"name": "LineSegment",
			"path": "flixel.addons.display.shapes.LineSegment",
			"description": "Helper for FlxShapeLightning",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/LineSegment.html"
		},
		"flixel.addons.display.shapes.FlxShapeType": {
			"name": "FlxShapeType",
			"path": "flixel.addons.display.shapes.FlxShapeType",
			"description": "<ul",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/FlxShapeType.html"
		},
		"flixel.addons.display.shapes.LightningStyle": {
			"name": "LightningStyle",
			"path": "flixel.addons.display.shapes.LightningStyle",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/display/shapes/LightningStyle.html"
		},
		"flixel.addons.editors.ogmo.FlxOgmoLoader": {
			"name": "FlxOgmoLoader",
			"path": "flixel.addons.editors.ogmo.FlxOgmoLoader",
			"description": "This is for loading maps made with OGMO Editor 2. For loading maps made with OGMO Editor 3, use FlxOgmo3Loader",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/FlxOgmoLoader.html"
		},
		"flixel.addons.editors.ogmo.DecalData": {
			"name": "DecalData",
			"path": "flixel.addons.editors.ogmo.DecalData",
			"description": "Individual Decal data",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/DecalData.html"
		},
		"flixel.addons.editors.ogmo.DecalLayer": {
			"name": "DecalLayer",
			"path": "flixel.addons.editors.ogmo.DecalLayer",
			"description": "Decal subset of LayerData",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/DecalLayer.html"
		},
		"flixel.addons.editors.ogmo.EntityData": {
			"name": "EntityData",
			"path": "flixel.addons.editors.ogmo.EntityData",
			"description": "Individual Entity data",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/EntityData.html"
		},
		"flixel.addons.editors.ogmo.EntityLayer": {
			"name": "EntityLayer",
			"path": "flixel.addons.editors.ogmo.EntityLayer",
			"description": "Entity subset of LayerData",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/EntityLayer.html"
		},
		"flixel.addons.editors.ogmo.GridLayer": {
			"name": "GridLayer",
			"path": "flixel.addons.editors.ogmo.GridLayer",
			"description": "Grid subset of LayerData",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/GridLayer.html"
		},
		"flixel.addons.editors.ogmo.LayerData": {
			"name": "LayerData",
			"path": "flixel.addons.editors.ogmo.LayerData",
			"description": "Level Layer data",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/LayerData.html"
		},
		"flixel.addons.editors.ogmo.LevelData": {
			"name": "LevelData",
			"path": "flixel.addons.editors.ogmo.LevelData",
			"description": "Parsed .JSON Level data",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/LevelData.html"
		},
		"flixel.addons.editors.ogmo.Point": {
			"name": "Point",
			"path": "flixel.addons.editors.ogmo.Point",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/Point.html"
		},
		"flixel.addons.editors.ogmo.ProjectData": {
			"name": "ProjectData",
			"path": "flixel.addons.editors.ogmo.ProjectData",
			"description": "Parsed .OGMO Project data",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/ProjectData.html"
		},
		"flixel.addons.editors.ogmo.ProjectEntityData": {
			"name": "ProjectEntityData",
			"path": "flixel.addons.editors.ogmo.ProjectEntityData",
			"description": "Project Entity",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/ProjectEntityData.html"
		},
		"flixel.addons.editors.ogmo.ProjectLayerData": {
			"name": "ProjectLayerData",
			"path": "flixel.addons.editors.ogmo.ProjectLayerData",
			"description": "Project Layer",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/ProjectLayerData.html"
		},
		"flixel.addons.editors.ogmo.ProjectTilesetData": {
			"name": "ProjectTilesetData",
			"path": "flixel.addons.editors.ogmo.ProjectTilesetData",
			"description": "Project Tileset",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/ProjectTilesetData.html"
		},
		"flixel.addons.editors.ogmo.TileLayer": {
			"name": "TileLayer",
			"path": "flixel.addons.editors.ogmo.TileLayer",
			"description": "Tile subset of LayerData",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/ogmo/TileLayer.html"
		},
		"flixel.addons.editors.pex.FlxPexParser": {
			"name": "FlxPexParser",
			"path": "flixel.addons.editors.pex.FlxPexParser",
			"description": "Parser for particle files created with \"Starling Particle Editor\" or \"Particle Designer\".",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/pex/FlxPexParser.html"
		},
		"flixel.addons.editors.pex.PexEmitterType": {
			"name": "PexEmitterType",
			"path": "flixel.addons.editors.pex.PexEmitterType",
			"description": "",
			"type": "abstract",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/pex/PexEmitterType.html"
		},
		"flixel.addons.editors.spine.FlxSpine": {
			"name": "FlxSpine",
			"path": "flixel.addons.editors.spine.FlxSpine",
			"description": "A Sprite that can play animations exported by Spine (http://esotericsoftware.com/)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/spine/FlxSpine.html"
		},
		"flixel.addons.editors.spine.FlxSpineCollider": {
			"name": "FlxSpineCollider",
			"path": "flixel.addons.editors.spine.FlxSpineCollider",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/spine/FlxSpineCollider.html"
		},
		"flixel.addons.editors.tiled.TiledGroupLayer": {
			"name": "TiledGroupLayer",
			"path": "flixel.addons.editors.tiled.TiledGroupLayer",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledGroupLayer.html"
		},
		"flixel.addons.editors.tiled.TiledImageLayer": {
			"name": "TiledImageLayer",
			"path": "flixel.addons.editors.tiled.TiledImageLayer",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledImageLayer.html"
		},
		"flixel.addons.editors.tiled.TiledImageTile": {
			"name": "TiledImageTile",
			"path": "flixel.addons.editors.tiled.TiledImageTile",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledImageTile.html"
		},
		"flixel.addons.editors.tiled.TiledLayer": {
			"name": "TiledLayer",
			"path": "flixel.addons.editors.tiled.TiledLayer",
			"description": "Base class for Tiled object and tile layers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledLayer.html"
		},
		"flixel.addons.editors.tiled.TiledMap": {
			"name": "TiledMap",
			"path": "flixel.addons.editors.tiled.TiledMap",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledMap.html"
		},
		"flixel.addons.editors.tiled.TiledObject": {
			"name": "TiledObject",
			"path": "flixel.addons.editors.tiled.TiledObject",
			"description": "(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledObject.html"
		},
		"flixel.addons.editors.tiled.TiledObjectLayer": {
			"name": "TiledObjectLayer",
			"path": "flixel.addons.editors.tiled.TiledObjectLayer",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledObjectLayer.html"
		},
		"flixel.addons.editors.tiled.TiledPropertySet": {
			"name": "TiledPropertySet",
			"path": "flixel.addons.editors.tiled.TiledPropertySet",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledPropertySet.html"
		},
		"flixel.addons.editors.tiled.TiledTile": {
			"name": "TiledTile",
			"path": "flixel.addons.editors.tiled.TiledTile",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledTile.html"
		},
		"flixel.addons.editors.tiled.TiledTileLayer": {
			"name": "TiledTileLayer",
			"path": "flixel.addons.editors.tiled.TiledTileLayer",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledTileLayer.html"
		},
		"flixel.addons.editors.tiled.TiledTileSet": {
			"name": "TiledTileSet",
			"path": "flixel.addons.editors.tiled.TiledTileSet",
			"description": "Copyright (c) 2013 by Samuel Batista\n(original by Matt Tuttle based on Thomas Jahn's. Haxe port by Adrien Fischer)\nThis content is released under the MIT License.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledTileSet.html"
		},
		"flixel.addons.editors.tiled.TiledLayerType": {
			"name": "TiledLayerType",
			"path": "flixel.addons.editors.tiled.TiledLayerType",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/TiledLayerType.html"
		},
		"flixel.addons.editors.tiled.FlxTiledMapAsset": {
			"name": "FlxTiledMapAsset",
			"path": "flixel.addons.editors.tiled.FlxTiledMapAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/FlxTiledMapAsset.html"
		},
		"flixel.addons.editors.tiled.FlxTiledTileAsset": {
			"name": "FlxTiledTileAsset",
			"path": "flixel.addons.editors.tiled.FlxTiledTileAsset",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/tiled/FlxTiledTileAsset.html"
		},
		"flixel.addons.effects.chainable.FlxEffectSprite": {
			"name": "FlxEffectSprite",
			"path": "flixel.addons.effects.chainable.FlxEffectSprite",
			"description": "Use this class to chain bitmap effects to your target FlxSprite frame.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxEffectSprite.html"
		},
		"flixel.addons.effects.chainable.FlxGlitchEffect": {
			"name": "FlxGlitchEffect",
			"path": "flixel.addons.effects.chainable.FlxGlitchEffect",
			"description": "This is a modified version of FlxGlitchSprite by Tim Hely",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxGlitchEffect.html"
		},
		"flixel.addons.effects.chainable.FlxOutlineEffect": {
			"name": "FlxOutlineEffect",
			"path": "flixel.addons.effects.chainable.FlxOutlineEffect",
			"description": "This creates an outline around the bitmapData. This is a modified version of FlxOutline by red__hara, with some code get from FlxText's borders.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxOutlineEffect.html"
		},
		"flixel.addons.effects.chainable.FlxRainbowEffect": {
			"name": "FlxRainbowEffect",
			"path": "flixel.addons.effects.chainable.FlxRainbowEffect",
			"description": "This is a modified version of FlxRainbowSprite by Tim Hely",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxRainbowEffect.html"
		},
		"flixel.addons.effects.chainable.FlxShakeEffect": {
			"name": "FlxShakeEffect",
			"path": "flixel.addons.effects.chainable.FlxShakeEffect",
			"description": "This will shake the bitmapData.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxShakeEffect.html"
		},
		"flixel.addons.effects.chainable.FlxTrailEffect": {
			"name": "FlxTrailEffect",
			"path": "flixel.addons.effects.chainable.FlxTrailEffect",
			"description": "This creates a trail copying the bitmapData many times.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxTrailEffect.html"
		},
		"flixel.addons.effects.chainable.FlxWaveEffect": {
			"name": "FlxWaveEffect",
			"path": "flixel.addons.effects.chainable.FlxWaveEffect",
			"description": "This is a modified version of FlxWaveSprite by Tim Hely",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxWaveEffect.html"
		},
		"flixel.addons.effects.chainable.IFlxEffect": {
			"name": "IFlxEffect",
			"path": "flixel.addons.effects.chainable.IFlxEffect",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/IFlxEffect.html"
		},
		"flixel.addons.effects.chainable.FlxGlitchDirection": {
			"name": "FlxGlitchDirection",
			"path": "flixel.addons.effects.chainable.FlxGlitchDirection",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxGlitchDirection.html"
		},
		"flixel.addons.effects.chainable.FlxWaveDirection": {
			"name": "FlxWaveDirection",
			"path": "flixel.addons.effects.chainable.FlxWaveDirection",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxWaveDirection.html"
		},
		"flixel.addons.effects.chainable.FlxWaveMode": {
			"name": "FlxWaveMode",
			"path": "flixel.addons.effects.chainable.FlxWaveMode",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/addons/effects/chainable/FlxWaveMode.html"
		},
		"flixel.addons.plugin.control.FlxControl": {
			"name": "FlxControl",
			"path": "flixel.addons.plugin.control.FlxControl",
			"description": "FlxControl",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/control/FlxControl.html"
		},
		"flixel.addons.plugin.control.FlxControlHandler": {
			"name": "FlxControlHandler",
			"path": "flixel.addons.plugin.control.FlxControlHandler",
			"description": "Makes controlling an FlxSprite with the keyboard a LOT easier and quicker to set-up!\nSometimes it's hard to know what values to set, especially if you want gravity, jumping, sliding, etc.\nThis class helps sort that - and adds some cool extra functionality too :)\nTODO: Hot Keys\nTODO: Binding of sound effects to keys (seperate from setSounds? as those are event based)\nTODO: Specify animation frames to play based on velocity\nTODO: Variable gravity (based on height, the higher the stronger the effect)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/control/FlxControlHandler.html"
		},
		"flixel.addons.plugin.screengrab.FlxScreenGrab": {
			"name": "FlxScreenGrab",
			"path": "flixel.addons.plugin.screengrab.FlxScreenGrab",
			"description": "Captures a screen grab of the game and stores it locally, optionally saving as a PNG.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/screengrab/FlxScreenGrab.html"
		},
		"flixel.addons.plugin.taskManager.FlxTaskManager": {
			"name": "FlxTaskManager",
			"path": "flixel.addons.plugin.taskManager.FlxTaskManager",
			"description": "The Task Manager is used to perform tasks (call methods) in specified order.\nAllows you to quickly and easily program any action, such as the appearance of the buttons in the game menus.\nTask Manager is started automatically when you add at least one task, and stops when all tasks are done.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/plugin/taskManager/FlxTaskManager.html"
		},
		"flixel.addons.ui.interfaces.ICursorPointable": {
			"name": "ICursorPointable",
			"path": "flixel.addons.ui.interfaces.ICursorPointable",
			"description": "The cursor can point to one of these",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/ICursorPointable.html"
		},
		"flixel.addons.ui.interfaces.IEventGetter": {
			"name": "IEventGetter",
			"path": "flixel.addons.ui.interfaces.IEventGetter",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IEventGetter.html"
		},
		"flixel.addons.ui.interfaces.IFireTongue": {
			"name": "IFireTongue",
			"path": "flixel.addons.ui.interfaces.IFireTongue",
			"description": "An interface to match FireTongue, so we can use this without making\na full dependency",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IFireTongue.html"
		},
		"flixel.addons.ui.interfaces.IFlxUIButton": {
			"name": "IFlxUIButton",
			"path": "flixel.addons.ui.interfaces.IFlxUIButton",
			"description": "This interface keeps me from having to use a Dynamic variable to point to a value holding a FlxUITypedButton\nthat could be either a FlxUIButton or a FlxUISpriteButton",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IFlxUIButton.html"
		},
		"flixel.addons.ui.interfaces.IFlxUIClickable": {
			"name": "IFlxUIClickable",
			"path": "flixel.addons.ui.interfaces.IFlxUIClickable",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IFlxUIClickable.html"
		},
		"flixel.addons.ui.interfaces.IFlxUIState": {
			"name": "IFlxUIState",
			"path": "flixel.addons.ui.interfaces.IFlxUIState",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IFlxUIState.html"
		},
		"flixel.addons.ui.interfaces.IFlxUIWidget": {
			"name": "IFlxUIWidget",
			"path": "flixel.addons.ui.interfaces.IFlxUIWidget",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IFlxUIWidget.html"
		},
		"flixel.addons.ui.interfaces.IHasParams": {
			"name": "IHasParams",
			"path": "flixel.addons.ui.interfaces.IHasParams",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IHasParams.html"
		},
		"flixel.addons.ui.interfaces.ILabeled": {
			"name": "ILabeled",
			"path": "flixel.addons.ui.interfaces.ILabeled",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/ILabeled.html"
		},
		"flixel.addons.ui.interfaces.IResizable": {
			"name": "IResizable",
			"path": "flixel.addons.ui.interfaces.IResizable",
			"description": "...",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/ui/interfaces/IResizable.html"
		},
		"flixel.input.gamepad.id.LogitechID": {
			"name": "LogitechID",
			"path": "flixel.input.gamepad.id.LogitechID",
			"description": "IDs for Logitech controllers (key codes based on Cordless Rumblepad 2)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/LogitechID.html"
		},
		"flixel.input.gamepad.id.MFiID": {
			"name": "MFiID",
			"path": "flixel.input.gamepad.id.MFiID",
			"description": "IDs for MFi controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/MFiID.html"
		},
		"flixel.input.gamepad.id.MayflashWiiRemoteID": {
			"name": "MayflashWiiRemoteID",
			"path": "flixel.input.gamepad.id.MayflashWiiRemoteID",
			"description": "WiiRemote hardware input ID's when using \"Mode 3\" of the MayFlash DolphinBar accessory",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/MayflashWiiRemoteID.html"
		},
		"flixel.input.gamepad.id.OUYAID": {
			"name": "OUYAID",
			"path": "flixel.input.gamepad.id.OUYAID",
			"description": "IDs for OUYA controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/OUYAID.html"
		},
		"flixel.input.gamepad.id.PS4ID": {
			"name": "PS4ID",
			"path": "flixel.input.gamepad.id.PS4ID",
			"description": "IDs for PlayStation 4 controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/PS4ID.html"
		},
		"flixel.input.gamepad.id.PSVitaID": {
			"name": "PSVitaID",
			"path": "flixel.input.gamepad.id.PSVitaID",
			"description": "Native PSVita input values.\n(The only way to use these is to actually be using a PSVita with the upcoming openfl vita target!)",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/PSVitaID.html"
		},
		"flixel.input.gamepad.id.SwitchJoyconLeftID": {
			"name": "SwitchJoyconLeftID",
			"path": "flixel.input.gamepad.id.SwitchJoyconLeftID",
			"description": "IDs for Switch's Left JoyCon controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/SwitchJoyconLeftID.html"
		},
		"flixel.input.gamepad.id.SwitchJoyconRightID": {
			"name": "SwitchJoyconRightID",
			"path": "flixel.input.gamepad.id.SwitchJoyconRightID",
			"description": "IDs for Switch's Right JoyCon controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/SwitchJoyconRightID.html"
		},
		"flixel.input.gamepad.id.SwitchProID": {
			"name": "SwitchProID",
			"path": "flixel.input.gamepad.id.SwitchProID",
			"description": "IDs for Switch Pro controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/SwitchProID.html"
		},
		"flixel.input.gamepad.id.WiiRemoteID": {
			"name": "WiiRemoteID",
			"path": "flixel.input.gamepad.id.WiiRemoteID",
			"description": "WiiRemote hardware input ID's when using the device directly\nHardware ID's: \"Nintendo RVL-CNT-01-TR\" and \"Nintendo RVL-CNT-01\" -- the latter does not have the Motion-Plus attachment",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/WiiRemoteID.html"
		},
		"flixel.input.gamepad.id.XInputID": {
			"name": "XInputID",
			"path": "flixel.input.gamepad.id.XInputID",
			"description": "IDs for generic XInput controllers",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/id/XInputID.html"
		},
		"flixel.input.gamepad.lists.FlxBaseGamepadList": {
			"name": "FlxBaseGamepadList",
			"path": "flixel.input.gamepad.lists.FlxBaseGamepadList",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxBaseGamepadList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadAnalogList": {
			"name": "FlxGamepadAnalogList",
			"path": "flixel.input.gamepad.lists.FlxGamepadAnalogList",
			"description": "A helper class for gamepad input.\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadAnalogList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadAnalogStateList": {
			"name": "FlxGamepadAnalogStateList",
			"path": "flixel.input.gamepad.lists.FlxGamepadAnalogStateList",
			"description": "A helper class for gamepad input.\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadAnalogStateList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadAnalogValueList": {
			"name": "FlxGamepadAnalogValueList",
			"path": "flixel.input.gamepad.lists.FlxGamepadAnalogValueList",
			"description": "A helper class for gamepad input.\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadAnalogValueList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadButtonList": {
			"name": "FlxGamepadButtonList",
			"path": "flixel.input.gamepad.lists.FlxGamepadButtonList",
			"description": "A helper class for gamepad input.\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadButtonList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadMotionValueList": {
			"name": "FlxGamepadMotionValueList",
			"path": "flixel.input.gamepad.lists.FlxGamepadMotionValueList",
			"description": "A helper class for gamepad input.\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadMotionValueList.html"
		},
		"flixel.input.gamepad.lists.FlxGamepadPointerValueList": {
			"name": "FlxGamepadPointerValueList",
			"path": "flixel.input.gamepad.lists.FlxGamepadPointerValueList",
			"description": "A helper class for gamepad input -- returns X/Y analog coordinate values between 0.0 and 1.0\nProvides optimized gamepad button checking using direct array access.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/lists/FlxGamepadPointerValueList.html"
		},
		"flixel.input.gamepad.mappings.FlxGamepadMapping": {
			"name": "FlxGamepadMapping",
			"path": "flixel.input.gamepad.mappings.FlxGamepadMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/FlxGamepadMapping.html"
		},
		"flixel.input.gamepad.mappings.LogitechMapping": {
			"name": "LogitechMapping",
			"path": "flixel.input.gamepad.mappings.LogitechMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/LogitechMapping.html"
		},
		"flixel.input.gamepad.mappings.MFiMapping": {
			"name": "MFiMapping",
			"path": "flixel.input.gamepad.mappings.MFiMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/MFiMapping.html"
		},
		"flixel.input.gamepad.mappings.MayflashWiiRemoteMapping": {
			"name": "MayflashWiiRemoteMapping",
			"path": "flixel.input.gamepad.mappings.MayflashWiiRemoteMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/MayflashWiiRemoteMapping.html"
		},
		"flixel.input.gamepad.mappings.OUYAMapping": {
			"name": "OUYAMapping",
			"path": "flixel.input.gamepad.mappings.OUYAMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/OUYAMapping.html"
		},
		"flixel.input.gamepad.mappings.PS4Mapping": {
			"name": "PS4Mapping",
			"path": "flixel.input.gamepad.mappings.PS4Mapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/PS4Mapping.html"
		},
		"flixel.input.gamepad.mappings.PSVitaMapping": {
			"name": "PSVitaMapping",
			"path": "flixel.input.gamepad.mappings.PSVitaMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/PSVitaMapping.html"
		},
		"flixel.input.gamepad.mappings.WiiRemoteMapping": {
			"name": "WiiRemoteMapping",
			"path": "flixel.input.gamepad.mappings.WiiRemoteMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/WiiRemoteMapping.html"
		},
		"flixel.input.gamepad.mappings.XInputMapping": {
			"name": "XInputMapping",
			"path": "flixel.input.gamepad.mappings.XInputMapping",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/XInputMapping.html"
		},
		"flixel.input.gamepad.mappings.Manufacturer": {
			"name": "Manufacturer",
			"path": "flixel.input.gamepad.mappings.Manufacturer",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/input/gamepad/mappings/Manufacturer.html"
		},
		"flixel.system.debug.completion.CompletionHandler": {
			"name": "CompletionHandler",
			"path": "flixel.system.debug.completion.CompletionHandler",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/completion/CompletionHandler.html"
		},
		"flixel.system.debug.completion.CompletionList": {
			"name": "CompletionList",
			"path": "flixel.system.debug.completion.CompletionList",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/completion/CompletionList.html"
		},
		"flixel.system.debug.completion.CompletionListEntry": {
			"name": "CompletionListEntry",
			"path": "flixel.system.debug.completion.CompletionListEntry",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/completion/CompletionListEntry.html"
		},
		"flixel.system.debug.completion.CompletionListScrollBar": {
			"name": "CompletionListScrollBar",
			"path": "flixel.system.debug.completion.CompletionListScrollBar",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/completion/CompletionListScrollBar.html"
		},
		"flixel.system.debug.console.Console": {
			"name": "Console",
			"path": "flixel.system.debug.console.Console",
			"description": "A powerful console for the flixel debugger screen with supports custom commands, registering\nobjects and functions and saves the last 25 commands used. Inspired by Eric Smith's \"CoolConsole\".",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/console/Console.html"
		},
		"flixel.system.debug.console.ConsoleCommands": {
			"name": "ConsoleCommands",
			"path": "flixel.system.debug.console.ConsoleCommands",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/console/ConsoleCommands.html"
		},
		"flixel.system.debug.console.ConsoleHistory": {
			"name": "ConsoleHistory",
			"path": "flixel.system.debug.console.ConsoleHistory",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/console/ConsoleHistory.html"
		},
		"flixel.system.debug.console.ConsoleUtil": {
			"name": "ConsoleUtil",
			"path": "flixel.system.debug.console.ConsoleUtil",
			"description": "A set of helper functions used by the console.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/console/ConsoleUtil.html"
		},
		"flixel.system.debug.interaction.Interaction": {
			"name": "Interaction",
			"path": "flixel.system.debug.interaction.Interaction",
			"description": "Adds a new functionality to Flixel debugger that allows any object\non the screen to be dragged, moved or deleted while the game is\nstill running.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/Interaction.html"
		},
		"flixel.system.debug.log.BitmapLog": {
			"name": "BitmapLog",
			"path": "flixel.system.debug.log.BitmapLog",
			"description": "An output window that lets you paste BitmapData in the debugger overlay.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/log/BitmapLog.html"
		},
		"flixel.system.debug.log.Log": {
			"name": "Log",
			"path": "flixel.system.debug.log.Log",
			"description": "A simple trace output window for use in the debugger overlay.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/log/Log.html"
		},
		"flixel.system.debug.log.LogStyle": {
			"name": "LogStyle",
			"path": "flixel.system.debug.log.LogStyle",
			"description": "A class that allows you to create a custom style for FlxG.log.advanced().\nAlso used internally for the pre-defined styles.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/log/LogStyle.html"
		},
		"flixel.system.debug.log.BitmapLogEntry": {
			"name": "BitmapLogEntry",
			"path": "flixel.system.debug.log.BitmapLogEntry",
			"description": "",
			"type": "type",
			"link": "https://api.haxeflixel.com/flixel/system/debug/log/BitmapLogEntry.html"
		},
		"flixel.system.debug.stats.Stats": {
			"name": "Stats",
			"path": "flixel.system.debug.stats.Stats",
			"description": "A simple performance monitor widget, for use in the debugger overlay.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/stats/Stats.html"
		},
		"flixel.system.debug.stats.StatsGraph": {
			"name": "StatsGraph",
			"path": "flixel.system.debug.stats.StatsGraph",
			"description": "This is a helper function for the stats window to draw a graph with given values.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/stats/StatsGraph.html"
		},
		"flixel.system.debug.watch.EditableTextField": {
			"name": "EditableTextField",
			"path": "flixel.system.debug.watch.EditableTextField",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/EditableTextField.html"
		},
		"flixel.system.debug.watch.Tracker": {
			"name": "Tracker",
			"path": "flixel.system.debug.watch.Tracker",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/Tracker.html"
		},
		"flixel.system.debug.watch.TrackerProfile": {
			"name": "TrackerProfile",
			"path": "flixel.system.debug.watch.TrackerProfile",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/TrackerProfile.html"
		},
		"flixel.system.debug.watch.Watch": {
			"name": "Watch",
			"path": "flixel.system.debug.watch.Watch",
			"description": "A Visual Studio-style \"watch\" window, for use in the debugger overlay.\nTrack the values of any public variable in real-time, and/or edit their values on the fly.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/Watch.html"
		},
		"flixel.system.debug.watch.WatchEntry": {
			"name": "WatchEntry",
			"path": "flixel.system.debug.watch.WatchEntry",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/WatchEntry.html"
		},
		"flixel.system.debug.watch.WatchEntryData": {
			"name": "WatchEntryData",
			"path": "flixel.system.debug.watch.WatchEntryData",
			"description": "",
			"type": "enum",
			"link": "https://api.haxeflixel.com/flixel/system/debug/watch/WatchEntryData.html"
		},
		"flixel.addons.editors.spine.texture.FlixelTextureLoader": {
			"name": "FlixelTextureLoader",
			"path": "flixel.addons.editors.spine.texture.FlixelTextureLoader",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/addons/editors/spine/texture/FlixelTextureLoader.html"
		},
		"flixel.system.debug.interaction.tools.Eraser": {
			"name": "Eraser",
			"path": "flixel.system.debug.interaction.tools.Eraser",
			"description": "A tool to delete items from the screen.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/Eraser.html"
		},
		"flixel.system.debug.interaction.tools.GraphicCursorCross": {
			"name": "GraphicCursorCross",
			"path": "flixel.system.debug.interaction.tools.GraphicCursorCross",
			"description": "",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/GraphicCursorCross.html"
		},
		"flixel.system.debug.interaction.tools.Mover": {
			"name": "Mover",
			"path": "flixel.system.debug.interaction.tools.Mover",
			"description": "A tool to move selected items.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/Mover.html"
		},
		"flixel.system.debug.interaction.tools.Pointer": {
			"name": "Pointer",
			"path": "flixel.system.debug.interaction.tools.Pointer",
			"description": "A tool to use the mouse cursor to select game elements.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/Pointer.html"
		},
		"flixel.system.debug.interaction.tools.Tool": {
			"name": "Tool",
			"path": "flixel.system.debug.interaction.tools.Tool",
			"description": "The base class of all tools in the interactive debug.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/Tool.html"
		},
		"flixel.system.debug.interaction.tools.Transform": {
			"name": "Transform",
			"path": "flixel.system.debug.interaction.tools.Transform",
			"description": "A tool to scale and rotate selected game elements.",
			"type": "class",
			"link": "https://api.haxeflixel.com/flixel/system/debug/interaction/tools/Transform.html"
		}
	}
}