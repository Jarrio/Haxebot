{
"version":3,
"file":"main.js",
"sourceRoot":"",
"sources":["file:////var/home/j/Apps/haxe-manager/current/std/DateTools.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Std.hx","file:////var/home/j/Apps/haxe-manager/current/std/StringBuf.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/String.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Date.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/EReg.hx","file:////var/home/j/Apps/haxe-manager/current/std/EnumValue.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/HxOverrides.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/Lib.hx","file:////var/home/j/Apps/haxe-manager/current/std/IntIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/Lambda.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/Map.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/Main.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/Universe.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/Vector.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/bits/git/src/bits/Bits.hx","file:////var/home/j/Apps/haxe-manager/current/std/Any.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Rest.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/Browser.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/ds/StringMap.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/sys/io/File.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/Query.hx","file:////var/home/j/Apps/haxe-manager/current/std/StringTools.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Reflect.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/NativeStackTrace.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/Boot.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/safety/git/src/Safety.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Math.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/SysTools.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/StringIteratorUnicode.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/Sys.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/js/Node.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/DynamicAccess.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/io/Output.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Int64.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/io/Bytes.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/js/node/buffer/Buffer.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/io/Input.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Type.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/Array.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/Util.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Api.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/System.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/systems/CommandBase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/macros/SystemMacros.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/Family.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/ArrayKeyValueIterator.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Archive.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/HaxeKeyValueIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/Map.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/KeyValue.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/AutoRole.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/AutoThread.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Boop.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Code.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/CodeLineNumbers.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Color.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/HaxeIterator.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/systems/CommandDbBase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/DeleteProject.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Emoji.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/util/EcsTools.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Everyone.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Haxelib.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Help.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Hi.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/JamSuggestionBox.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Notify.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/PinMessage.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Poll.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/ds/IntMap.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/node/16,10,3/ts/AnyOf4.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Quote.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/EnumTools.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/RecordSet.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/React.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/node/16,10,3/ts/AnyOf3.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Reminder.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Roundup.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/RoundupRoundup.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Rtfm.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/systems/TextCommandBase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Run2.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/sys/FileSystem.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Say.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/ScamPrevention.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_js/MessageEmbed.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Showcase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Snippet.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/ThreadCount.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/Translate.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/VoiceChatBridge.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/events/PinMessageInfo.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/mod/RateLimit.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/mod/Social.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/mod/Tracker.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/commands/types/Duration.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/components/ShowcaseModalSubmit.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/components/TextCommand.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/MyRecord.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/types/DBEmoji.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/DBMacros.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/types/DBQuote.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/types/DBRateLimit.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/types/DBReminder.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/database/types/DBSnippet.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/ColumnDefinition.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/DatabaseError.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/DatabaseFactory.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/macros/DatabaseTypes.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/DatabaseResult.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/DatabaseSchema.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/DebugUtils.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/Record.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/ArrayIterator.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/RelationshipDefinitions.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/TableSchema.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/TableSchemaDiff.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-mysql/src/db/mysql/MySqlDataTypeMapper.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/logging/git/src/logging/Logger.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-mysql/src/db/mysql/MySqlDatabase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-mysql/src/db/mysql/MySqlDatabaseType.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-mysql/src/db/mysql/MySqlTable.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-mysql/src/db/mysql/Utils.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/db-core/src/db/utils/SqlUtils.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/APIActionRowComponent.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/RestIterator.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/APIButtonComponentBase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/APITextInputComponent.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/ButtonBuilder.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/ModalBuilder.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/discordjs/discordjs/src/discord_builder/SharedSlashCommandOptions.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/Components.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/Entity.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/Phase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/TableType.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/core/ComponentManager.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/core/EntityManager.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/core/FamilyManager.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/core/ResourceManager.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/ds/Signal.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/ds/SparseSet.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/aidan-ecs/git/src/ecs/ds/Unit.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/CallStack.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/Exception.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Int32.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Int64Helper.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Log.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/Timer.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ValueException.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/crypto/Sha1.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/BalancedTree.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/EnumValueMap.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/List.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/ds/ObjectMap.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/ds/ReadOnlyArray.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/exceptions/PosException.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/exceptions/NotImplementedException.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/http/HttpBase.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/http/HttpNodeJs.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/io/ArrayBufferView.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/io/BytesBuffer.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/io/Eof.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/io/FPHelper.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/io/Path.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/_std/haxe/io/UInt8Array.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/DynamicAccessIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/DynamicAccessKeyValueIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/MapKeyValueIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/RestKeyValueIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/StringIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/iterators/StringKeyValueIterator.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/macro/Expr.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/macro/ExprTools.hx","file:////var/home/j/Apps/haxe-manager/current/std/haxe/macro/Printer.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/html/CanvasElement.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/ArrayBuffer.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/Object.hx","file:////var/home/j/Apps/haxe-manager/current/std/js/lib/Set.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/js/node/KeyValue.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/js/node/stream/Writable.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/js/node/url/URLSearchParams.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/logging/git/src/logging/LogManager.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/logging/git/src/logging/adaptors/NullLogAdaptor.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/logging/git/src/logging/formatters/DefaultFormatter.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/mysql/src/mysql/MySqlError.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/mysql/src/mysql/MySqlResult.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/mysql/src/mysql/impl/DatabaseConnectionBase.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/mysql/src/mysql/impl/nodejs/DatabaseConnection.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/promises/src/promises/PromiseUtils.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/safety/git/src/safety/SafetyException.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/safety/git/src/safety/NullPointerException.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/hx4compat/std/sys/db/Mysql.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/sys/io/FileInput.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/.haxelib/hxnodejs/git/src/sys/io/FileOutput.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/systems/DatabaseSystem.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/systems/MessageRouter.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/promises/src/thenshim/js/JSPromiseFactory.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/promises/src/thenshim/Promise.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/haxe_modules/promises/src/thenshim/Thenable.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/util/DiscordUtil.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/util/Duration.hx","file:////var/home/j/Documents/projects/nodejs/haxebot/src/util/Random.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe DateTools class contains some extra functionalities for handling `Date`\n\tinstances and timestamps.\n\n\tIn the context of Haxe dates, a timestamp is defined as the number of\n\tmilliseconds elapsed since 1st January 1970.\n**/\nclass DateTools {\n\t#if php\n\t#elseif (neko && !(macro || interp))\n\tstatic var date_format = neko.Lib.load(\"std\", \"date_format\", 2);\n\t#else\n\tstatic var DAY_SHORT_NAMES = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\tstatic var DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\tstatic var MONTH_SHORT_NAMES = [\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n\t];\n\tstatic var MONTH_NAMES = [\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t];\n\n\tprivate static function __format_get(d:Date, e:String):String {\n\t\treturn switch (e) {\n\t\t\tcase \"%\":\n\t\t\t\t\"%\";\n\t\t\tcase \"a\":\n\t\t\t\tDAY_SHORT_NAMES[d.getDay()];\n\t\t\tcase \"A\":\n\t\t\t\tDAY_NAMES[d.getDay()];\n\t\t\tcase \"b\", \"h\":\n\t\t\t\tMONTH_SHORT_NAMES[d.getMonth()];\n\t\t\tcase \"B\":\n\t\t\t\tMONTH_NAMES[d.getMonth()];\n\t\t\tcase \"C\":\n\t\t\t\tStringTools.lpad(Std.string(Std.int(d.getFullYear() / 100)), \"0\", 2);\n\t\t\tcase \"d\":\n\t\t\t\tStringTools.lpad(Std.string(d.getDate()), \"0\", 2);\n\t\t\tcase \"D\":\n\t\t\t\t__format(d, \"%m/%d/%y\");\n\t\t\tcase \"e\":\n\t\t\t\tStd.string(d.getDate());\n\t\t\tcase \"F\":\n\t\t\t\t__format(d, \"%Y-%m-%d\");\n\t\t\tcase \"H\", \"k\":\n\t\t\t\tStringTools.lpad(Std.string(d.getHours()), if (e == \"H\") \"0\" else \" \", 2);\n\t\t\tcase \"I\", \"l\":\n\t\t\t\tvar hour = d.getHours() % 12;\n\t\t\t\tStringTools.lpad(Std.string(hour == 0 ? 12 : hour), if (e == \"I\") \"0\" else \" \", 2);\n\t\t\tcase \"m\":\n\t\t\t\tStringTools.lpad(Std.string(d.getMonth() + 1), \"0\", 2);\n\t\t\tcase \"M\":\n\t\t\t\tStringTools.lpad(Std.string(d.getMinutes()), \"0\", 2);\n\t\t\tcase \"n\":\n\t\t\t\t\"\\n\";\n\t\t\tcase \"p\":\n\t\t\t\tif (d.getHours() > 11) \"PM\"; else \"AM\";\n\t\t\tcase \"r\":\n\t\t\t\t__format(d, \"%I:%M:%S %p\");\n\t\t\tcase \"R\":\n\t\t\t\t__format(d, \"%H:%M\");\n\t\t\tcase \"s\":\n\t\t\t\tStd.string(Std.int(d.getTime() / 1000));\n\t\t\tcase \"S\":\n\t\t\t\tStringTools.lpad(Std.string(d.getSeconds()), \"0\", 2);\n\t\t\tcase \"t\":\n\t\t\t\t\"\\t\";\n\t\t\tcase \"T\":\n\t\t\t\t__format(d, \"%H:%M:%S\");\n\t\t\tcase \"u\":\n\t\t\t\tvar t = d.getDay();\n\t\t\t\tif (t == 0) \"7\" else Std.string(t);\n\t\t\tcase \"w\":\n\t\t\t\tStd.string(d.getDay());\n\t\t\tcase \"y\":\n\t\t\t\tStringTools.lpad(Std.string(d.getFullYear() % 100), \"0\", 2);\n\t\t\tcase \"Y\":\n\t\t\t\tStd.string(d.getFullYear());\n\t\t\tdefault:\n\t\t\t\tthrow new haxe.exceptions.NotImplementedException(\"Date.format %\" + e + \"- not implemented yet.\");\n\t\t}\n\t}\n\n\tprivate static function __format(d:Date, f:String):String {\n\t\tvar r = new StringBuf();\n\t\tvar p = 0;\n\t\twhile (true) {\n\t\t\tvar np = f.indexOf(\"%\", p);\n\t\t\tif (np < 0)\n\t\t\t\tbreak;\n\n\t\t\tr.addSub(f, p, np - p);\n\t\t\tr.add(__format_get(d, f.substr(np + 1, 1)));\n\n\t\t\tp = np + 2;\n\t\t}\n\t\tr.addSub(f, p, f.length - p);\n\t\treturn r.toString();\n\t}\n\t#end\n\n\t/**\n\t\tFormat the date `d` according to the format `f`. The format is\n\t\tcompatible with the `strftime` standard format, except that there is no\n\t\tsupport in Flash and JS for day and months names (due to lack of proper\n\t\tinternationalization API). On Haxe/Neko/Windows, some formats are not\n\t\tsupported.\n\n\t\t```haxe\n\t\tvar t = DateTools.format(Date.now(), \"%Y-%m-%d_%H:%M:%S\");\n\t\t// 2016-07-08_14:44:05\n\n\t\tvar t = DateTools.format(Date.now(), \"%r\");\n\t\t// 02:44:05 PM\n\n\t\tvar t = DateTools.format(Date.now(), \"%T\");\n\t\t// 14:44:05\n\n\t\tvar t = DateTools.format(Date.now(), \"%F\");\n\t\t// 2016-07-08\n\t\t```\n\t**/\n\tpublic static function format(d:Date, f:String):String {\n\t\t#if (neko && !(macro || interp))\n\t\treturn new String(untyped date_format(d.__t, f.__s));\n\t\t#elseif php\n\t\treturn php.Global.strftime(f, php.Syntax.int(@:privateAccess d.__t));\n\t\t#else\n\t\treturn __format(d, f);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the result of adding timestamp `t` to Date `d`.\n\n\t\tThis is a convenience function for calling\n\t\t`Date.fromTime(d.getTime() + t)`.\n\t**/\n\tpublic static inline function delta(d:Date, t:Float):Date {\n\t\treturn Date.fromTime(d.getTime() + t);\n\t}\n\n\tstatic var DAYS_OF_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n\t/**\n\t\tReturns the number of days in the month of Date `d`.\n\n\t\tThis method handles leap years.\n\t**/\n\tpublic static function getMonthDays(d:Date):Int {\n\t\tvar month = d.getMonth();\n\t\tvar year = d.getFullYear();\n\n\t\tif (month != 1)\n\t\t\treturn DAYS_OF_MONTH[month];\n\n\t\tvar isB = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n\t\treturn if (isB) 29 else 28;\n\t}\n\n\t/**\n\t\tConverts a number of seconds to a timestamp.\n\t**/\n\tpublic static inline function seconds(n:Float):Float {\n\t\treturn n * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of minutes to a timestamp.\n\t**/\n\tpublic static inline function minutes(n:Float):Float {\n\t\treturn n * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of hours to a timestamp.\n\t**/\n\tpublic static inline function hours(n:Float):Float {\n\t\treturn n * 60.0 * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of days to a timestamp.\n\t**/\n\tpublic static inline function days(n:Float):Float {\n\t\treturn n * 24.0 * 60.0 * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tSeparate a date-time into several components\n\t**/\n\tpublic static function parse(t:Float) {\n\t\tvar s = t / 1000;\n\t\tvar m = s / 60;\n\t\tvar h = m / 60;\n\t\treturn {\n\t\t\tms: t % 1000,\n\t\t\tseconds: Std.int(s % 60),\n\t\t\tminutes: Std.int(m % 60),\n\t\t\thours: Std.int(h % 24),\n\t\t\tdays: Std.int(h / 24),\n\t\t};\n\t}\n\n\t/**\n\t\tBuild a date-time from several components\n\t**/\n\tpublic static function make(o:{\n\t\tms:Float,\n\t\tseconds:Int,\n\t\tminutes:Int,\n\t\thours:Int,\n\t\tdays:Int\n\t}) {\n\t\treturn o.ms + 1000.0 * (o.seconds + 60.0 * (o.minutes + 60.0 * (o.hours + 24.0 * o.days)));\n\t}\n\n\t#if (js || flash || php || cpp || python)\n\t/**\n\t\tRetrieve Unix timestamp value from Date components. Takes same argument sequence as the Date constructor.\n\t**/\n\tpublic static #if (js || flash || php) inline #end function makeUtc(year:Int, month:Int, day:Int, hour:Int, min:Int, sec:Int):Float {\n\t\t#if (js || flash || python)\n\t\treturn untyped Date.UTC(year, month, day, hour, min, sec);\n\t\t#elseif php\n\t\treturn php.Global.gmmktime(hour, min, sec, month + 1, day, year) * 1000;\n\t\t#elseif cpp\n\t\treturn untyped __global__.__hxcpp_utc_date(year, month, day, hour, min, sec) * 1000.0;\n\t\t#else\n\t\t// TODO\n\t\treturn 0.;\n\t\t#end\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\t@:deprecated('Std.is is deprecated. Use Std.isOfType instead.')\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S @:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\t#if (js_es >= 5)\n\t\tfinal v = js.Lib.parseInt(x);\n\t\t#else\n\t\t// before ES5, octal was supported in some implementations, so we need to explicitly use base 10 or 16\n\t\tif (x == null)\n\t\t\treturn null;\n\t\tvar v:Float = Math.NaN;\n\t\tfor (i => c in StringTools.keyValueIterator(x)) {\n\t\t\tif ((c <= 8 || c >= 14) && !(c == ' '.code || c == '-'.code || c == '+'.code)) {\n\t\t\t\tfinal nc = js.Syntax.code(\"{0}[{1}]\", x, i + 1);\n\t\t\t\tv = js.Lib.parseInt(x, c == '0'.code && (nc == \"x\" || nc == \"X\") ? 16 : 10);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t#end\n\t\tif (Math.isNaN(v))\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",\n\t\t\tObject.defineProperty(String.prototype, \"__class__\",\n\t\t\t\t{value: __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String), enumerable: false, writable: true}));\n\t\t__feature__(\"js.Boot.isClass\", String.__name__ = \"String\");\n\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = \"Array\");\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\tjs.Syntax.code('Date')\n\t\t\t\t\t.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t});\n\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t#if (js_es < 5)\n\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\tvar a = [];\n\t\t\tfor (i in 0...__this__.length)\n\t\t\t\ta[i] = f(__this__[i]);\n\t\t\treturn a;\n\t\t});\n\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\tvar a = [];\n\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\tvar e = __this__[i];\n\t\t\t\tif (f(e))\n\t\t\t\t\ta.push(e);\n\t\t\t}\n\t\t\treturn a;\n\t\t});\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues.\n**/\nclass StringBuf {\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get, never):Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length():Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>(x:T):Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar(c:Int):Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub(s:String, pos:Int, ?len:Int):Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn b;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi extern class String {\n\tvar length(default, null):Int;\n\n\t@:pure function new(string:String):Void;\n\t@:pure function toUpperCase():String;\n\t@:pure function toLowerCase():String;\n\t@:pure function charAt(index:Int):String;\n\t@:pure function indexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function lastIndexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function split(delimiter:String):Array<String>;\n\t@:pure function toString():String;\n\t@:pure function substring(startIndex:Int, ?endIndex:Int):String;\n\n\t@:pure inline function charCodeAt(index:Int):Null<Int> {\n\t\treturn @:privateAccess HxOverrides.cca(this, index);\n\t}\n\n\t@:pure inline function substr(pos:Int, ?len:Int):String {\n\t\treturn @:privateAccess HxOverrides.substr(this, pos, len);\n\t}\n\n\t@:pure static inline function fromCharCode(code:Int):String {\n\t\treturn untyped __define_feature__('String.fromCharCode', js.Syntax.code(\"String.fromCodePoint({0})\", code));\n\t}\n\n\t#if (js_es <= 5)\n\tstatic function __init__():Void {\n\t\tuntyped __feature__('String.fromCharCode',\n\t\t\tjs.Syntax.code(\"if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }\"));\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi extern class Date {\n\t@:pure function new(year:Int, month:Int, day:Int, hour:Int, min:Int, sec:Int):Void;\n\t@:pure function getTime():Float;\n\t@:pure function getHours():Int;\n\t@:pure function getMinutes():Int;\n\t@:pure function getSeconds():Int;\n\t@:pure function getFullYear():Int;\n\t@:pure function getMonth():Int;\n\t@:pure function getDate():Int;\n\t@:pure function getDay():Int;\n\n\t@:pure function getUTCHours():Int;\n\t@:pure function getUTCMinutes():Int;\n\t@:pure function getUTCSeconds():Int;\n\t@:pure function getUTCFullYear():Int;\n\t@:pure function getUTCMonth():Int;\n\t@:pure function getUTCDate():Int;\n\t@:pure function getUTCDay():Int;\n\t@:pure function getTimezoneOffset():Int;\n\n\t@:pure inline function toString():String {\n\t\treturn @:privateAccess HxOverrides.dateStr(this);\n\t}\n\n\t@:pure static inline function now():Date {\n\t\treturn js.Syntax.construct(Date);\n\t}\n\n\t@:pure static inline function fromTime(t:Float):Date {\n\t\treturn js.Syntax.construct(Date, t);\n\t}\n\n\t@:pure static inline function fromString(s:String):Date {\n\t\treturn @:privateAccess HxOverrides.strDate(s);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\tvar r:HaxeRegExp;\n\n\tpublic inline function new(r:String, opt:String):Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match(s:String):Bool {\n\t\tif (r.global)\n\t\t\tr.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched(n:Int):String {\n\t\treturn if (r.m != null && n >= 0 && n < r.m.length) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft():String {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\treturn r.s.substr(0, r.m.index);\n\t}\n\n\tpublic function matchedRight():String {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\tvar sz = r.m.index + r.m[0].length;\n\t\treturn r.s.substr(sz, r.s.length - sz);\n\t}\n\n\tpublic function matchedPos():{pos:Int, len:Int} {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\treturn {pos: r.m.index, len: r.m[0].length};\n\t}\n\n\tpublic function matchSub(s:String, pos:Int, len:Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match(len < 0 ? s.substr(pos) : s.substr(pos, len));\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split(s:String):Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn replace(s, d).split(d);\n\t}\n\n\tpublic inline function replace(s:String, by:String):String {\n\t\treturn (cast s).replace(r, by);\n\t}\n\n\tpublic function map(s:String, f:EReg->String):String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t} else\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n\n\tpublic static inline function escape(s:String):String {\n\t\treturn (cast s).replace(escapeRe, \"\\\\$&\");\n\t}\n\n\tstatic var escapeRe = new js.lib.RegExp(\"[.*+?^${}()|[\\\\]\\\\\\\\]\", \"g\");\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.lib.RegExp {\n\tvar m:js.lib.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tAn abstract type that represents any enum value.\n\tSee `Type` for the Haxe Reflection API.\n\n\t@see https://haxe.org/manual/types-enum-instance.html\n**/\n@:coreType abstract EnumValue {\n\t/**\n\t\tMatches enum instance `e` against pattern `pattern`, returning `true` if\n\t\tmatching succeeded and `false` otherwise.\n\n\t\tExample usage:\n\n\t\t```haxe\n\t\tif (e.match(pattern)) {\n\t\t\t// codeIfTrue\n\t\t} else {\n\t\t\t// codeIfFalse\n\t\t}\n\t\t```\n\n\t\tThis is equivalent to the following code:\n\n\t\t```haxe\n\t\tswitch (e) {\n\t\t\tcase pattern:\n\t\t\t\t// codeIfTrue\n\t\t\tcase _:\n\t\t\t\t// codeIfFalse\n\t\t}\n\t\t```\n\n\t\tThis method is implemented in the compiler. This definition exists only\n\t\tfor documentation.\n\t**/\n\tpublic function match(pattern:Dynamic):Bool {\n\t\treturn false;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\tstatic function dateStr(date:Date):String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\n\t}\n\n\tstatic function strDate(s:String):Date {\n\t\tswitch (s.length) {\n\t\t\tcase 8: // hh:mm:ss\n\t\t\t\tvar k = s.split(\":\");\n\t\t\t\tvar d = js.Syntax.construct(Date);\n\t\t\t\t(cast d)[cast \"setTime\"](0);\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\n\t\t\t\treturn d;\n\t\t\tcase 10: // YYYY-MM-DD\n\t\t\t\tvar k = s.split(\"-\");\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\t\tvar k = s.split(\" \");\n\t\t\t\tvar y = k[0].split(\"-\");\n\t\t\t\tvar t = k[1].split(\":\");\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca(s:String, index:Int):Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif (x != x) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0)\n\t\t\t\ti = 0;\n\t\t}\n\t\twhile (i < len) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>(a:Array<T>, obj:T) {\n\t\tvar i = a.indexOf(obj);\n\t\tif (i == -1)\n\t\t\treturn false;\n\t\ta.splice(i, 1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\n\t\tuntyped {\n\t\t\treturn {\n\t\t\t\tcur: 0,\n\t\t\t\tarr: a,\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\", \"closure_read.keyValueIterator\")\n\tstatic function keyValueIter<T>( a : Array<T> ) {\n\t\treturn new haxe.iterators.ArrayKeyValueIterator(a);\n\t}\n\n\t@:pure\n\tstatic function now(): Float return js.lib.Date.now();\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__('HxOverrides.indexOf',\n\t\t\t\tif (Array.prototype.indexOf) js.Syntax.code(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\n\t\t\t__feature__('HxOverrides.lastIndexOf',\n\t\t\t\tif (Array.prototype.lastIndexOf) js.Syntax.code(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\n\t\t\t#end\n\n\t\t\t__feature__('HxOverrides.now',\n\t\t\t\tif (js.Syntax.typeof(performance) != 'undefined' && js.Syntax.typeof(performance.now) == 'function') {\n\t\t\t\t\tHxOverrides.now = performance.now.bind(performance);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\n/**\n\tPlatform-specific JavaScript Library. Provides some platform-specific functions\n\tfor the JavaScript target.\n**/\nclass Lib {\n\t/**\n\t\tInserts a 'debugger' statement that will make a breakpoint if a debugger is available.\n\t**/\n\tpublic static inline function debug() {\n\t\tjs.Syntax.code(\"debugger\");\n\t}\n\n\t/**\n\t\tInserts an `import` expression that loads JavaScript object from\n\t\ta module or file specified in the `module` argument.\n\t**/\n\tpublic static inline function dynamicImport(module:String):js.lib.Promise<Dynamic> {\n\t\treturn js.Syntax.code(\"import({0})\", module);\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message.\n\t\t@deprecated Use Browser.alert() instead.\n\t**/\n\t@:deprecated(\"Lib.alert() is deprecated, use Browser.alert() instead\")\n\tpublic static function alert(v:Dynamic) {\n\t\tjs.Syntax.code(\"alert\")(@:privateAccess js.Boot.__string_rec(v, \"\"));\n\t}\n\n\tpublic static inline function eval(code:String):Dynamic {\n\t\treturn js.Syntax.code(\"eval\")(code);\n\t}\n\n\t/**\n\t\tInserts a `require` expression that loads JavaScript object from\n\t\ta module or file specified in the `module` argument.\n\n\t\tThis is only supported in environments where `require` function\n\t\tis available, such as Node.js or RequireJS.\n\t**/\n\textern public static inline function require(module:String):Dynamic {\n\t\treturn js.Syntax.code(\"require\")(module);\n\t}\n\n\t/**\n\t\tNative JavaScript `parseInt` function.\n\n\t\tIts specification is different from `Std.parseInt`, so one\n\t\tmight want to access the native one.\n\t**/\n\tpublic static var parseInt(get, never):(string:String, ?radix:Int) -> Float;\n\n\textern static inline function get_parseInt():(string:String, ?radix:Int) -> Float {\n\t\treturn js.Syntax.code(\"parseInt\");\n\t}\n\n\t/**\n\t\tReturns JavaScript `undefined` value.\n\n\t\tNote that this is only needed in very rare cases when working with external JavaScript code.\n\n\t\tIn Haxe, `null` is used to represent the absence of a value.\n\t**/\n\tpublic static var undefined(get, never):Dynamic;\n\n\tstatic inline function get_undefined():Dynamic {\n\t\treturn js.Syntax.code(\"undefined\");\n\t}\n\n\t/**\n\t\t`nativeThis` is the JavaScript `this`, which is semantically different\n\t\tfrom the Haxe `this`. Use `nativeThis` only when working with external\n\t\tJavaScript code.\n\n\t\tIn Haxe, `this` is always bound to a class instance.\n\t\tIn JavaScript, `this` in a function can be bound to an arbitrary\n\t\tvariable when the function is called using `func.call(thisObj, ...)` or\n\t\t`func.apply(thisObj, [...])`.\n\n\t\tRead more at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\n\t**/\n\tpublic static var nativeThis(get, never):Dynamic;\n\n\textern static inline function get_nativeThis():Dynamic {\n\t\treturn js.Syntax.code(\"this\");\n\t}\n\n\t/**\n\t\tCall JavaScript `typeof` operator on the `o` value\n\t\tand return a string representing the JavaScript type of a value.\n\n\t\tRead more at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n\t**/\n\textern public static inline function typeof(o:Dynamic):String {\n\t\treturn js.Syntax.typeof(o);\n\t}\n\n\t/**\n\t\tAn alias of the JS \"global\" object.\n\n\t\tConcretely, it is set as the first defined value in the list of\n\t\t`window`, `global`, `self`, and `this` in the top-level of the compiled output.\n\t**/\n\tpublic static var global(get, never):Dynamic;\n\n\textern static inline function get_global():Dynamic {\n\t\treturn untyped __define_feature__(\"js.Lib.global\", js.Syntax.code(\"$global\")); // $global is generated by the compiler\n\t}\n\n\t/**\n\t\tRe-throw last caught exception, preserving original stack information.\n\n\t\tCalling this is only possible inside a catch statement.\n\t**/\n\t@:pure(false) public static function rethrow() {\n\t\t// function is implemented in the compiler\n\t}\n\n\t/**\n\t\tGet original caught exception object, before unwrapping the `js.Boot.HaxeError`.\n\n\t\tCan be useful if we want to redirect the original error into some external API (e.g. Promise or node.js callbacks).\n\n\t\tCalling this is only possible inside a catch statement.\n\t**/\n\tpublic static function getOriginalException():Dynamic {\n\t\treturn null; // function is implemented in the compiler\n\t}\n\n\t/**\n\t\tGenerate next unique id\n\t**/\n\t@:allow(haxe.ds.ObjectMap.assignId)\n\tstatic inline function getNextHaxeUID():Int {\n\t\treturn js.Syntax.code(\"{0}.$haxeUID++\", untyped __define_feature__(\"$global.$haxeUID\", global));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tIntIterator is used for implementing interval iterations.\n\n\tIt is usually not used explicitly, but through its special syntax:\n\t`min...max`\n\n\tWhile it is possible to assign an instance of IntIterator to a variable or\n\tfield, it is worth noting that IntIterator does not reset after being used\n\tin a for-loop. Subsequent uses of the same instance will then have no\n\teffect.\n\n\t@see https://haxe.org/manual/lf-iterators.html\n**/\nclass IntIterator {\n\tvar min:Int;\n\tvar max:Int;\n\n\t/**\n\t\tIterates from `min` (inclusive) to `max` (exclusive).\n\n\t\tIf `max <= min`, the iterator will not act as a countdown.\n\t**/\n\tpublic inline function new(min:Int, max:Int) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t}\n\n\t/**\n\t\tReturns true if the iterator has other items, false otherwise.\n\t**/\n\tpublic inline function hasNext() {\n\t\treturn min < max;\n\t}\n\n\t/**\n\t\tMoves to the next item of the iterator.\n\n\t\tIf this is called while hasNext() is false, the result is unspecified.\n\t**/\n\tpublic inline function next() {\n\t\treturn min++;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.ds.List;\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with `using Lambda` and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n\n\t@see https://haxe.org/manual/std-Lambda.html\n**/\nclass Lambda {\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>(it:Iterable<A>):Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor (i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>(it:Iterable<A>):List<A> {\n\t\tvar l = new List<A>();\n\t\tfor (i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new Array by applying function `f` to all elements of `it`.\n\t\tThe order of elements is preserved.\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static inline function map<A, B>(it:Iterable<A>, f:(item:A) -> B):Array<B> {\n\t\treturn [for (x in it) f(x)];\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\t\tThe order of elements is preserved.\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static inline function mapi<A, B>(it:Iterable<A>, f:(index:Int, item:A) -> B):Array<B> {\n\t\tvar i = 0;\n\t\treturn [for (x in it) f(i++, x)];\n\t}\n\n\t/**\n\t\tConcatenate a list of iterables.\n\t\tThe order of elements is preserved.\n\t**/\n\tpublic static inline function flatten<A>(it:Iterable<Iterable<A>>):Array<A> {\n\t\treturn [for (e in it) for (x in e) x];\n\t}\n\n\t/**\n\t\tA composition of map and flatten.\n\t\tThe order of elements is preserved.\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static inline function flatMap<A, B>(it:Iterable<A>, f:(item:A) -> Iterable<B>):Array<B> {\n\t\treturn Lambda.flatten(Lambda.map(it, f));\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>(it:Iterable<A>, elt:A):Bool {\n\t\tfor (x in it)\n\t\t\tif (x == elt)\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>(it:Iterable<A>, f:(item:A) -> Bool) {\n\t\tfor (x in it)\n\t\t\tif (f(x))\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>(it:Iterable<A>, f:(item:A) -> Bool) {\n\t\tfor (x in it)\n\t\t\tif (!f(x))\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>(it:Iterable<A>, f:(item:A) -> Void) {\n\t\tfor (x in it)\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a Array containing those elements of `it` for which `f` returned\n\t\ttrue.\n\t\tIf `it` is empty, the result is the empty Array even if `f` is null.\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>(it:Iterable<A>, f:(item:A) -> Bool) {\n\t\treturn [for (x in it) if (f(x)) x];\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A, B>(it:Iterable<A>, f:(item:A, result:B) -> B, first:B):B {\n\t\tfor (x in it)\n\t\t\tfirst = f(x, first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tSimilar to fold, but also passes the index of each element to `f`.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function foldi<A, B>(it:Iterable<A>, f:(item:A, result:B, index:Int) -> B, first:B):B {\n\t\tvar i = 0;\n\t\tfor (x in it) {\n\t\t\tfirst = f(x, first, i);\n\t\t\t++i;\n\t\t}\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>(it:Iterable<A>, ?pred:(item:A) -> Bool) {\n\t\tvar n = 0;\n\t\tif (pred == null)\n\t\t\tfor (_ in it)\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor (x in it)\n\t\t\t\tif (pred(x))\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>(it:Iterable<T>):Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>(it:Iterable<T>, v:T):Int {\n\t\tvar i = 0;\n\t\tfor (v2 in it) {\n\t\t\tif (v == v2)\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>(it:Iterable<T>, f:(item:T) -> Bool):Null<T> {\n\t\tfor (v in it) {\n\t\t\tif (f(v))\n\t\t\t\treturn v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns the index of the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is -1.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function findIndex<T>(it:Iterable<T>, f:(item:T) -> Bool):Int {\n\t\tvar i = 0;\n\t\tfor (v in it) {\n\t\t\tif (f(v))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns a new Array containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>(a:Iterable<T>, b:Iterable<T>):Array<T> {\n\t\tvar l = new Array();\n\t\tfor (x in a)\n\t\t\tl.push(x);\n\t\tfor (x in b)\n\t\t\tl.push(x);\n\t\treturn l;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\nimport haxe.ds.StringMap;\nimport haxe.ds.IntMap;\nimport haxe.ds.ObjectMap;\nimport haxe.ds.EnumValueMap;\nimport haxe.Constraints.IMap;\n\n/**\n\tMap allows key to value mapping for arbitrary value types, and many key\n\ttypes.\n\n\tThis is a multi-type abstract, it is instantiated as one of its\n\tspecialization types depending on its type parameters.\n\n\tA Map can be instantiated without explicit type parameters. Type inference\n\twill then determine the type parameters from the usage.\n\n\tMaps can also be created with `[key1 => value1, key2 => value2]` syntax.\n\n\tMap is an abstract type, it is not available at runtime.\n\n\t@see https://haxe.org/manual/std-Map.html\n**/\n@:transitive\n@:multiType(@:followWithAbstracts K)\nabstract Map<K, V>(IMap<K, V>) {\n\t/**\n\t\tCreates a new Map.\n\n\t\tThis becomes a constructor call to one of the specialization types in\n\t\tthe output. The rules for that are as follows:\n\n\t\t1. if `K` is a `String`, `haxe.ds.StringMap` is used\n\t\t2. if `K` is an `Int`, `haxe.ds.IntMap` is used\n\t\t3. if `K` is an `EnumValue`, `haxe.ds.EnumValueMap` is used\n\t\t4. if `K` is any other class or structure, `haxe.ds.ObjectMap` is used\n\t\t5. if `K` is any other type, it causes a compile-time error\n\n\t\t(Cpp) Map does not use weak keys on `ObjectMap` by default.\n\t**/\n\tpublic function new();\n\n\t/**\n\t\tMaps `key` to `value`.\n\n\t\tIf `key` already has a mapping, the previous value disappears.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function set(key:K, value:V)\n\t\tthis.set(key, value);\n\n\t/**\n\t\tReturns the current mapping of `key`.\n\n\t\tIf no such mapping exists, `null` is returned.\n\n\t\tNote that a check like `map.get(key) == null` can hold for two reasons:\n\n\t\t1. the map has no mapping for `key`\n\t\t2. the map has a mapping with a value of `null`\n\n\t\tIf it is important to distinguish these cases, `exists()` should be\n\t\tused.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\t@:arrayAccess public inline function get(key:K)\n\t\treturn this.get(key);\n\n\t/**\n\t\tReturns true if `key` has a mapping, false otherwise.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function exists(key:K)\n\t\treturn this.exists(key);\n\n\t/**\n\t\tRemoves the mapping of `key` and returns true if such a mapping existed,\n\t\tfalse otherwise.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function remove(key:K)\n\t\treturn this.remove(key);\n\n\t/**\n\t\tReturns an Iterator over the keys of `this` Map.\n\n\t\tThe order of keys is undefined.\n\t**/\n\tpublic inline function keys():Iterator<K> {\n\t\treturn this.keys();\n\t}\n\n\t/**\n\t\tReturns an Iterator over the values of `this` Map.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function iterator():Iterator<V> {\n\t\treturn this.iterator();\n\t}\n\n\t/**\n\t\tReturns an Iterator over the keys and values of `this` Map.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function keyValueIterator():KeyValueIterator<K, V> {\n\t\treturn this.keyValueIterator();\n\t}\n\n\t/**\n\t\tReturns a shallow copy of `this` map.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function copy():Map<K, V> {\n\t\treturn cast this.copy();\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` Map.\n\n\t\tThe exact representation depends on the platform and key-type.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn this.toString();\n\t}\n\n\t/**\n\t\tRemoves all keys from `this` Map.\n\t**/\n\tpublic inline function clear():Void {\n\t\tthis.clear();\n\t}\n\n\t@:arrayAccess @:noCompletion public inline function arrayWrite(k:K, v:V):V {\n\t\tthis.set(k, v);\n\t\treturn v;\n\t}\n\n\t@:to static inline function toStringMap<K:String, V>(t:IMap<K, V>):StringMap<V> {\n\t\treturn new StringMap<V>();\n\t}\n\n\t@:to static inline function toIntMap<K:Int, V>(t:IMap<K, V>):IntMap<V> {\n\t\treturn new IntMap<V>();\n\t}\n\n\t@:to static inline function toEnumValueMapMap<K:EnumValue, V>(t:IMap<K, V>):EnumValueMap<K, V> {\n\t\treturn new EnumValueMap<K, V>();\n\t}\n\n\t@:to static inline function toObjectMap<K:{}, V>(t:IMap<K, V>):ObjectMap<K, V> {\n\t\treturn new ObjectMap<K, V>();\n\t}\n\n\t@:from static inline function fromStringMap<V>(map:StringMap<V>):Map<String, V> {\n\t\treturn cast map;\n\t}\n\n\t@:from static inline function fromIntMap<V>(map:IntMap<V>):Map<Int, V> {\n\t\treturn cast map;\n\t}\n\n\t@:from static inline function fromObjectMap<K:{}, V>(map:ObjectMap<K, V>):Map<K, V> {\n\t\treturn cast map;\n\t}\n}\n","import db.Record;\nimport database.DBEvents;\nimport discord_js.VoiceState;\nimport discord_js.VoiceChannel;\nimport discord_js.ThreadChannel;\nimport discord_builder.ContextMenuCommandBuilder;\nimport components.TextCommand;\nimport discord_builder.SlashCommandSubcommandBuilder;\nimport discord_js.GuildMember;\nimport discord_js.PermissionFlags;\nimport firebase.web.auth.Auth;\nimport haxe.Rest;\nimport discord_api_types.Routes;\nimport discord_js.rest.REST;\nimport discord_js.ApplicationCommandManager.ApplicationCommandData;\nimport discord_js.Snowflake;\nimport discord_js.ApplicationCommand;\nimport haxe.extern.EitherType;\nimport discord_js.User;\nimport discord_builder.SlashCommandMentionableOption;\nimport discord_builder.SlashCommandRoleOption;\nimport discord_builder.SlashCommandChannelOption;\nimport discord_builder.SlashCommandBooleanOption;\nimport discord_builder.SlashCommandUserOption;\nimport discord_js.TextChannel;\nimport discord_js.Message;\nimport discord_builder.SlashCommandNumberOption;\nimport discord_builder.SlashCommandStringOption;\nimport discord_builder.SharedSlashCommandOptions;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport discord_builder.SlashCommandBuilder;\nimport discord_js.ClientOptions.IntentFlags;\nimport discord_js.Client;\nimport haxe.Json;\nimport sys.io.File;\nimport ecs.Universe;\nimport haxe.Timer;\nimport commands.*;\nimport commands.mod.*;\nimport firebase.web.app.FirebaseApp;\nimport js.lib.Promise;\nimport commands.AutoRole;\nimport commands.mod.Social;\nimport commands.events.PinMessageInfo;\nimport js.Browser;\nimport commands.types.ContextMenuTypes;\nimport commands.ThreadCount;\nimport discord_js.GuildScheduledEvent;\nimport commands.JamSuggestionBox;\nimport systems.MessageRouter;\nimport commands.Roundup;\nimport commands.Everyone;\nimport systems.DatabaseSystem;\nimport Query;\nimport commands.Run2;\n\nclass Main {\n\tpublic static var app:FirebaseApp;\n\tpublic static var logged_in:Bool = false;\n\tpublic static var auth:firebase.web.auth.User;\n\tpublic static var client:Client;\n\tpublic static var registered_commands:Map<String, ApplicationCommand> = [];\n\tpublic static var commands_active:Bool = false;\n\tpublic static var connected:Bool = false;\n\tpublic static var keys:TKeys;\n\tpublic static var state:TState;\n\tpublic static var command_file:Array<TCommands>;\n\tpublic static var universe:Universe;\n\tpublic static var dm_help_tracking:Map<String, Float> = [];\n\tprivate static var active_systems:Map<String, Bool> = [];\n\t#if block\n\tpublic static final guild_id:String = \"416069724158427137\";\n\t#else\n\tpublic static final guild_id:String = \"162395145352904705\";\n\t#end\n\n\tpublic static var discord(get, never):TDiscordConfig;\n\n\tstatic function get_discord() {\n\t\tvar config = null;\n\t\t#if block\n\t\tconfig = Main.keys.discord_test;\n\t\t#else\n\t\tconfig = Main.keys.discord_live;\n\t\t#end\n\t\treturn config;\n\t}\n\n\tpublic static function token(rest:REST):Promise<Dynamic> {\n\t\tvar commands = parseCommands();\n\t\tvar get = rest.put(\n\t\t\tRoutes.applicationGuildCommands(discord.client_id, Main.guild_id),\n\t\t\t{body: commands}\n\t\t);\n\t\treturn get;\n\t}\n\n\tpublic static function start() {\n\t\tuniverse = Universe.create({\n\t\t\tentities: 1000,\n\t\t\tphases: [\n\t\t\t\t{\n\t\t\t\t\tname: 'systems',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tsystems: [MessageRouter, DatabaseSystem]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'messages',\n\t\t\t\t\tenabled: #if block true #else true #end,\n\t\t\t\t\tsystems: [ThreadCount, ScamPrevention, JamSuggestionBox, Showcase, RateLimit]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'testing',\n\t\t\t\t\tenabled: #if block false #else false #end,\n\t\t\t\t\tsystems: [\n\t\t\t\t\t\tDeleteProject,\n\t\t\t\t\t\tEmoji,\n\t\t\t\t\t\tHaxelib,\n\t\t\t\t\t\tHi, Boop,\n\t\t\t\t\t\tVoiceChatBridge,\n\t\t\t\t\t\t//Run2,\n\t\t\t\t\t\tEveryone,\n\t\t\t\t\t\tPinMessageInfo, Quote, Snippet, Api, Notify, Code, CodeLineNumbers, React, Say, Poll],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'main',\n\t\t\t\t\tenabled: #if block false #else true #end,\n\t\t\t\t\tsystems: [\n\t\t\t\t\t\tVoiceChatBridge,\n\t\t\t\t\t\tDeleteProject,\n\t\t\t\t\t\tHaxelib,\n\t\t\t\t\t\tEmoji,\n\t\t\t\t\t\tEveryone,\n\t\t\t\t\t\tTracker,\n\t\t\t\t\t\tPinMessageInfo,\n\t\t\t\t\t\t#if update\n\t\t\t\t\t\tHelppls Ban, Helpdescription,\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tRoundupRoundup,\n\t\t\t\t\t\tAutoThread,\n\t\t\t\t\t\tSnippet,\n\t\t\t\t\t\tPinMessage,\n\t\t\t\t\t\tReminder,\n\t\t\t\t\t\tSocial,\n\t\t\t\t\t\tRun2,\n\t\t\t\t\t\tAutoRole,\n\t\t\t\t\t\tQuote,\n\t\t\t\t\t\tApi,\n\t\t\t\t\t\tReact,\n\t\t\t\t\t\tNotify,\n\t\t\t\t\t\tRtfm,\n\t\t\t\t\t\tPoll,\n\t\t\t\t\t\tBoop,\n\t\t\t\t\t\tArchive,\n\t\t\t\t\t\tHelp,\n\t\t\t\t\t\tTranslate,\n\t\t\t\t\t\tHi,\n\t\t\t\t\t\tRoundup,\n\t\t\t\t\t\tCodeLineNumbers,\n\t\t\t\t\t\tSay,\n\t\t\t\t\t\tColor\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tvar e = DBEvents.GetAllRecords('state', (response) -> {\n\t\t\t#if block\n\t\t\tstate = Json.parse(File.getContent('./config/state.json'));\n\t\t\treturn;\n\t\t\t#end\n\t\t\tswitch (response) {\n\t\t\t\tcase Records(data):\n\t\t\t\t\tstate = {\n\t\t\t\t\t\tnext_roundup: 0,\n\t\t\t\t\t\troundup_roundup: null,\n\t\t\t\t\t\tsnippet_tags: null\n\t\t\t\t\t}\n\t\t\t\t\tfor (d in data) {\n\t\t\t\t\t\tvar value:Dynamic = d.field('value');\n\t\t\t\t\t\tswitch (d.field('key')) {\n\t\t\t\t\t\t\tcase 'next_roundup':\n\t\t\t\t\t\t\t\tstate.next_roundup = value;\n\t\t\t\t\t\t\tcase 'roundup_roundup':\n\t\t\t\t\t\t\t\tstate.roundup_roundup = value;\n\t\t\t\t\t\t\tcase 'snippet_tags':\n\t\t\t\t\t\t\t\tstate.snippet_tags = value;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttrace(d.field('key'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(response);\n\t\t\t}\n\t\t});\n\t\tuniverse.setComponents(universe.createEntity(), e);\n\n\t\tclient = new Client({\n\t\t\tintents: [\n\t\t\t\tIntentFlags.GUILDS,\n\t\t\t\tIntentFlags.MESSAGE_CONTENT,\n\t\t\t\tIntentFlags.GUILD_MESSAGES,\n\t\t\t\tIntentFlags.GUILD_SCHEDULED_EVENTS,\n\t\t\t\tIntentFlags.DIRECT_MESSAGES,\n\t\t\t\tIntentFlags.GUILD_MEMBERS,\n\t\t\t\tIntentFlags.GUILD_MESSAGE_REACTIONS,\n\t\t\t\tIntentFlags.GUILD_VOICE_STATES,\n\t\t\t\tIntentFlags.DIRECT_MESSAGE_REACTIONS\n\t\t\t]\n\t\t});\n\n\t\tclient.once('ready', (clients) -> {\n\t\t\ttrace('Ready!');\n\t\t\tMain.client = cast clients[0];\n\t\t\t\n\t\t\t#if block\n\t\t\tuniverse.getPhase('testing').enable();\n\t\t\t#end\n\t\t\tconnected = true;\n\n\t\t\tvar rest = new REST({version: '9'}).setToken(discord.token);\n\t\t\tvar res = token(rest);\n\t\t\tres.then(function(foo:Array<RegisteredApplicationCommand>) {\n\t\t\t\tcommands_active = true;\n\t\t\t\tfor (item in foo) {\n\t\t\t\t\ttrace('DEBUG - ${item.name} is REGISTERED');\n\t\t\t\t}\n\t\t\t\t#if block\n\t\t\t\ttrace('DEBUG - TESTING ON DEVELOPER TOKEN NOT FOR LIVE');\n\t\t\t\t#end\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t});\n\n\t\tclient.on('guildMemberAdd', (member:GuildMember) -> {\n\t\t\ttrace('member ${member.user.tag}');\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.add_event_role, member);\n\t\t\t// universe.setComponents(universe.createEntity(), CommandForward.auto_thread, member);\n\t\t});\n\n\t\tclient.on('guildScheduledEventCreate', (event:GuildScheduledEvent) -> {\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.create_event, event);\n\t\t});\n\n\t\tclient.on('guildScheduledEventUpdate', (event:GuildScheduledEvent) -> {\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.scheduled_event_update, event);\n\t\t\t// universe.setComponents(universe.createEntity(), CommandForward.auto_thread, member);\n\t\t});\n\n\t\tclient.on('voiceStateUpdate', (old:VoiceState, updated:VoiceState) -> {\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.roundup_member_update, old, updated);\n\t\t\t//universe.setComponents(universe.createEntity(), CommandForward.add_event_role, member);\n\t\t\t// universe.setComponents(universe.createEntity(), CommandForward.auto_thread, member);\n\t\t});\n\n\t\tclient.on('messageCreate', (message:Message) -> {\n\t\t\tif (message.author.bot || message.system) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.new_message, message);\n\t\t});\n\n\t\tclient.on('ChatInputAutoCompleteEvent', (incoming) -> {\n\t\t\ttrace('disconnected');\n\t\t\ttrace(incoming);\n\t\t});\n\n\t\tclient.on('threadCreate', (thread:ThreadChannel) -> {\n\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.thread_pin_message,\n\t\t\t\tthread);\n\t\t});\n\n\t\tclient.on('interactionCreate', function(interaction:BaseCommandInteraction) {\n\t\t\tif (interaction.isButton()) {\n\t\t\t\tif (interaction.customId == 'showcase_agree') {\n\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.showcase_agree,\n\t\t\t\t\t\tinteraction);\n\t\t\t\t}\n\t\t\t\tif (interaction.customId == 'showcase_disagree') {\n\t\t\t\t\tuniverse.setComponents(universe.createEntity(),\n\t\t\t\t\t\tCommandForward.showcase_disagree, interaction);\n\t\t\t\t}\n\n\t\t\t\tif (interaction.customId == 'snippet_left') {\n\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.snippet_left,\n\t\t\t\t\t\tinteraction);\n\t\t\t\t}\n\n\t\t\t\tif (interaction.customId == 'snippet_right') {\n\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.snippet_right,\n\t\t\t\t\t\tinteraction);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (interaction.isModalSubmit()) {\n\t\t\t\t\n\t\t\t\tswitch ((interaction.customId:CommandForward)) {\n\t\t\t\t\tcase quote_edit:\n\t\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.quote_edit,\n\t\t\t\t\t\t\tinteraction);\n\t\t\t\t\tcase quote_set:\n\t\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.quote_set,\n\t\t\t\t\t\t\tinteraction);\n\t\t\t\t\tcase code_paste:\n\t\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.code_paste,\n\t\t\t\t\t\t\tinteraction);\n\t\t\t\t\tcase emoji_edit:\n\t\t\t\t\t\tuniverse.setComponents(universe.createEntity(), CommandForward.emoji_edit,\n\t\t\t\t\t\t\tinteraction);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttrace(interaction.customId);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (interaction.isMessageContextMenuCommand()) {\n\t\t\t\tvar type:ContextMenuTypes = switch(interaction.commandName) {\n\t\t\t\t\tcase 'Pin Message':\n\t\t\t\t\t\tPinMessage;\n\t\t\t\t\tcase 'Line Numbers': \n\t\t\t\t\t\tCodeLineNumbers;\n\t\t\t\t\tcase 'Delete Project': \n\t\t\t\t\t\tDeleteProject;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\tnone;\n\t\t\t\t}\n\n\t\t\t\tif (type != none) {\n\t\t\t\t\tuniverse.setComponents(universe.createEntity(), type, interaction);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(interaction.isAutocomplete()) {\n\t\t\t\ttrace(interaction);\n\t\t\t}\n\t\t\tif (!interaction.isCommand() && !interaction.isAutocomplete()\n\t\t\t\t&& !interaction.isChatInputCommand()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar command = createCommand(interaction);\n\t\t\tuniverse.setComponents(universe.createEntity(), command, interaction);\n\t\t});\n\n\t\tclient.login(discord.token);\n\t\tnew Timer(500).run = function() {\n\t\t\tif (!connected || !commands_active) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tuniverse.update(1);\n\t\t}\n\t}\n\n\tpublic static function supressEmbeds(message:Message) {\n\t\tvar content = message.content;\n\t\t\n\t}\n\n\tpublic static function createCommand(interaction:BaseCommandInteraction) {\n\t\tvar command:Command = {\n\t\t\tname: interaction.commandName,\n\t\t\tcontent: null\n\t\t}\n\n\t\tswitch (command.name) {\n\t\t\tcase 'helppls':\n\t\t\t\tvar time = Date.now().getTime();\n\t\t\t\tdm_help_tracking.set(interaction.user.id, time);\n\t\t\tdefault:\n\t\t}\n\n\t\tvar enum_id = command.name.charAt(0).toUpperCase() + command.name.substring(1);\n\n\t\tfor (value in command_file) {\n\t\t\tif (value.name != command.name) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (value.params == null) {\n\t\t\t\tvar id = '';\n\t\t\t\tif (value.type == menu) {\n\t\t\t\t\tid = value.id;\n\t\t\t\t} else {\n\t\t\t\t\tid = enum_id;\n\t\t\t\t}\n\t\t\t\tcommand.content = Type.createEnum(CommandOptions, id);\n\t\t\t} else {\n\t\t\t\tvar subcommand = null;\n\t\t\t\tvar params = new Array<Dynamic>();\n\t\t\t\tfor (param in value.params) {\n\t\t\t\t\tswitch (param.type) {\n\t\t\t\t\t\tcase user:\n\t\t\t\t\t\t\tparams.push(interaction.options.getUser(param.name));\n\t\t\t\t\t\tcase bool:\n\t\t\t\t\t\t\tparams.push(interaction.options.getBoolean(param.name));\n\t\t\t\t\t\tcase mention:\n\t\t\t\t\t\t\tparams.push(interaction.options.getMentionable(param.name));\n\t\t\t\t\t\tcase channel:\n\t\t\t\t\t\t\tparams.push(interaction.options.getChannel(param.name));\n\t\t\t\t\t\tcase role:\n\t\t\t\t\t\t\tparams.push(interaction.options.getRole(param.name));\n\t\t\t\t\t\tcase string:\n\t\t\t\t\t\t\tparams.push(interaction.options.getString(param.name));\n\t\t\t\t\t\tcase number:\n\t\t\t\t\t\t\tparams.push(interaction.options.getNumber(param.name));\n\t\t\t\t\t\tcase subcommand:\n\t\t\t\t\t\t\tvar type = interaction.options.getSubcommand();\n\t\t\t\t\t\t\tif (param.name != type) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsubcommand = type;\n\t\t\t\t\t\t\t// params.push(type);\n\t\t\t\t\t\t\tfor (subparam in param.params) {\n\t\t\t\t\t\t\t\tparseIncomingCommand(params, subparam, interaction);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow 'Something went wrong.';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (subcommand != null) {\n\t\t\t\t\tenum_id += subcommand.charAt(0).toUpperCase() + subcommand.substring(1);\n\t\t\t\t}\n\n\t\t\t\tcommand.content = Type.createEnum(CommandOptions, enum_id, params);\n\t\t\t}\n\t\t}\n\n\t\treturn command;\n\n\t\tif (command.content == null) {\n\t\t\ttrace(interaction);\n\t\t\ttrace(enum_id);\n\t\t\ttrace('Unmatched command. (${command.name})');\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic function parseIncomingCommand(args:Array<Dynamic>, param:TCommands,\n\t\t\tinteraction:BaseCommandInteraction) {\n\t\tswitch (param.type) {\n\t\t\tcase user:\n\t\t\t\targs.push(interaction.options.getUser(param.name));\n\t\t\tcase bool:\n\t\t\t\targs.push(interaction.options.getBoolean(param.name));\n\t\t\tcase mention:\n\t\t\t\targs.push(interaction.options.getMentionable(param.name));\n\t\t\tcase channel:\n\t\t\t\targs.push(interaction.options.getChannel(param.name));\n\t\t\tcase role:\n\t\t\t\targs.push(interaction.options.getRole(param.name));\n\t\t\tcase string:\n\t\t\t\targs.push(interaction.options.getString(param.name));\n\t\t\tcase number:\n\t\t\t\targs.push(interaction.options.getNumber(param.name));\n\t\t\tdefault:\n\t\t\t\tthrow 'Something went wrong.';\n\t\t}\n\t}\n\n\tpublic static function getCommand(name:String) {\n\t\tif (Main.registered_commands == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (command in Main.registered_commands) {\n\t\t\tif (name == command.name) {\n\t\t\t\treturn command;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic function saveCommand(command:ApplicationCommand) {\n\t\tMain.registered_commands.set(command.name, command);\n\t\ttrace('registered ${command.name}');\n\t}\n\n\tstatic function main() {\n\t\ttry {\n\t\t\tkeys = Json.parse(File.getContent('./config/keys.json'));\n\t\t\tcommand_file = Json.parse(File.getContent('./config/commands.json'));\n\t\t} catch (e ) {\n\t\t\ttrace(e.message);\n\t\t}\n\n\t\tif (keys == null || discord.token == null) {\n\t\t\tthrow('Enter your discord auth token.');\n\t\t}\n\n\t\tMain.app = FirebaseApp.initializeApp(keys.firebase);\n\t\tAuth.signInWithEmailAndPassword(Auth.getAuth(), keys.username, keys.password)\n\t\t\t.then(function(res) {\n\t\t\t\ttrace('logged in');\n\t\t\t\tvar doc = Firestore.doc(Firestore.getFirestore(app), 'discord/admin');\n\t\t\t\tFirestore.onSnapshot(doc, function(resp) {\n\t\t\t\t\t\n\t\t\t\t\t#if !block\n\t\t\t\t\tadmin = resp.data();\n\t\t\t\t\t#end\n\t\t\t\t\tMain.auth = res.user;\n\t\t\t\t\tMain.logged_in = true;\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\t});\n\n\t\tstart();\n\t}\n\n\tstatic public function updateState(field:String, value:Dynamic) {\n\t\t#if block\n\t\tFile.saveContent('./config/state.json', Json.stringify(state));\n\t\t#else\n\t\tvar record = new Record();\n\t\trecord.field('key', field);\n\t\trecord.field('value', value);\n\t\t\n\t\tvar e = DBEvents.Update('state', record, Query.query($key = field), (response) -> {\n\t\t\tswitch(response) {\n\t\t\t\tcase Success(message, data):\n\t\t\t\t\ttrace('updated state');\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(response);\n\t\t\t}\n\t\t});\n\t\tuniverse.setComponents(universe.createEntity(), e);\n\t\t#end\n\t}\n\n\tstatic function parseCommands() {\n\t\tif (command_file == null || command_file.length == 0) {\n\t\t\tthrow 'No commands configured in the config.json file.';\n\t\t}\n\n\t\tvar commands = new Array<AnySlashCommand>();\n\t\tfor (command in command_file) {\n\t\t\t#if !block\n\t\t\tif (command.is_public != null && !command.is_public) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t#end\n\t\t\tvar permission = CommandPermission.fromString(command.permissions);\n\t\t\tif (permission == null) {\n\t\t\t\tpermission = everyone;\n\t\t\t}\n\n\t\t\tif (command.type == menu) {\n\t\t\t\tcommands.push(\n\t\t\t\t\tnew ContextMenuCommandBuilder().setName(command.name)\n\t\t\t\t\t\t.setType(command.menu_type)\n\t\t\t\t\t\t.setDefaultMemberPermissions(permission));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar main_command = new SlashCommandBuilder().setName(command.name)\n\t\t\t\t.setDescription(command.description)\n\t\t\t\t.setDefaultMemberPermissions(permission);\n\n\t\t\tif (command.params != null) {\n\t\t\t\tfor (param in command.params) {\n\t\t\t\t\tvar autocomplete = false;\n\n\t\t\t\t\tswitch (param.type) {\n\t\t\t\t\t\tcase subcommand:\n\t\t\t\t\t\t\tvar subcommand = new SlashCommandSubcommandBuilder().setName(param.name)\n\t\t\t\t\t\t\t\t.setDescription(param.description);\n\t\t\t\t\t\t\tfor (subparam in param.params) {\n\t\t\t\t\t\t\t\tvar autocomplete = false;\n\t\t\t\t\t\t\t\tif (subparam.autocomplete != null) {\n\t\t\t\t\t\t\t\t\tautocomplete = subparam.autocomplete;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tparseCommandType(subparam, autocomplete, subcommand);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmain_command.addSubcommand(subcommand);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (param.autocomplete != null) {\n\t\t\t\t\t\t\t\tautocomplete = param.autocomplete;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparseCommandType(param, autocomplete, cast main_command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcommands.push(main_command);\n\t\t}\n\t\treturn commands;\n\t}\n\n\tstatic function parseCommandType(param:TCommands, autocomplete:Bool,\n\t\t\tbuilder:SharedSlashCommandOptions) {\n\t\tswitch (param.type) {\n\t\t\tcase user:\n\t\t\t\tbuilder.addUserOption(\n\t\t\t\t\tnew SlashCommandUserOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tcase string:\n\t\t\t\tvar cmd = new SlashCommandStringOption().setName(param.name)\n\t\t\t\t\t.setRequired(param.required)\n\t\t\t\t\t.setAutocomplete(autocomplete);\n\t\t\t\tif (param.description != null) {\n\t\t\t\t\tcmd = cmd.setDescription(param.description);\n\t\t\t\t}\n\t\t\t\tif (param.choices != null && !autocomplete) {\n\t\t\t\t\tvar choices = [];\n\t\t\t\t\tfor (option in param.choices) {\n\t\t\t\t\t\tchoices.push({name: option.name, value: option.value});\n\t\t\t\t\t}\n\t\t\t\t\tcmd.addChoices(...Rest.of(choices));\n\t\t\t\t}\n\n\t\t\t\tbuilder.addStringOption(cmd);\n\t\t\tcase bool:\n\t\t\t\tbuilder.addBooleanOption(\n\t\t\t\t\tnew SlashCommandBooleanOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tcase channel:\n\t\t\t\tbuilder.addChannelOption(\n\t\t\t\t\tnew SlashCommandChannelOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tcase role:\n\t\t\t\tbuilder.addRoleOption(\n\t\t\t\t\tnew SlashCommandRoleOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tcase mention:\n\t\t\t\tbuilder.addMentionableOption(\n\t\t\t\t\tnew SlashCommandMentionableOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tcase number:\n\t\t\t\tbuilder.addNumberOption(\n\t\t\t\t\tnew SlashCommandNumberOption().setName(param.name)\n\t\t\t\t\t\t.setDescription(param.description)\n\t\t\t\t\t\t.setRequired(param.required));\n\t\t\tdefault:\n\t\t}\n\t}\n}\n\nenum abstract CommandPermission(Int) to Int {\n\tvar admin = PermissionFlags.ADMINISTRATOR;\n\tvar supermod = PermissionFlags.BAN_MEMBERS;\n\tvar everyone = VIEW_CHANNEL | SEND_MESSAGES;\n\n\t@:from public static function fromString(value:String):CommandPermission {\n\t\treturn switch (value) {\n\t\t\tcase \"admin\": admin;\n\t\t\tcase \"supermod\": supermod;\n\t\t\tcase \"everyone\": everyone;\n\t\t\tdefault: everyone;\n\t\t}\n\t}\n}\n\ntypedef THelpPls = {\n\tvar user:User;\n\tvar content:String;\n\tvar message:Message;\n}\n\ntypedef TKeys = {\n\tvar username:String;\n\tvar password:String;\n\tvar firebase:FirebaseOptions;\n\tvar deepl_key:String;\n\tvar discord_live:TDiscordConfig;\n\tvar discord_test:TDiscordConfig;\n\tvar twitter_token:String;\n\tvar showcase_hook:String;\n\tvar showcase_hook_debug:String;\n\tvar suggestionbox_hook:String;\n\tvar twitch_client_id:String;\n\tvar twitch_secret:String;\n\tvar mysql:TMysqlConfig;\n\tvar haxeip:String;\n\tvar haxelib:String;\n\tvar hooks:TWebhooks;\n\tvar debug_hooks:TWebhooks;\n}\n\ntypedef TWebhooks = {\n\tvar showcase:String;\n\tvar voice_channel:String;\n\tvar voice_text_channel:String;\n}\n\ntypedef TMysqlConfig = {\n\tvar user:String;\n\tvar pass:String;\n\tvar host:String;\n\tvar database:String;\n}\n\ntypedef TDiscordConfig = {\n\tvar token:String;\n\tvar secret:String;\n\tvar server_id:String;\n\tvar client_id:String;\n}\n\ntypedef TState = {\n\t@:optional var macros:Bool;\n\t@:optional var twitter_since_id:String;\n\tvar snippet_tags:Array<String>;\n\tvar next_roundup:Int;\n\tvar roundup_roundup:TRoundup;\n}\n\ntypedef TRoundup = {\n\tvar event_id:String;\n\tvar event_ping:Int;\n\tvar host:String;\n\tvar announced:Bool;\n}\n\ntypedef Foo = ApplicationCommandData;\n\ntypedef TCommands = {\n\tvar type:CommandType;\n\tvar menu_type:ContextMenuCommandType;\n\tvar name:String;\n\tvar description:String;\n\tvar id:String;\n\t@:optional var is_public:Bool;\n\t@:optional var permissions:String;\n\t@:optional var params:Array<TCommands>;\n\t@:optional var required:Bool;\n\t@:optional var autocomplete:Bool;\n\t@:optional var choices:Array<{name:String, value:EitherType<Int, String>}>;\n}\n\ntypedef RegisteredApplicationCommand = {\n\tpublic var application_id:Snowflake;\n\tpublic var default_permission:Bool;\n\tpublic var default_member_permission:Dynamic;\n\tpublic var description:String;\n\tpublic var guild_id:Snowflake;\n\tpublic var id:Snowflake;\n\tpublic var name:String;\n\tpublic var options:Array<ApplicationCommandOption>;\n\tpublic var type:CommandType;\n}\n\nenum abstract CommandType(String) {\n\tvar subcommand;\n\tvar menu;\n\tvar string;\n\tvar number;\n\tvar user;\n\tvar channel;\n\tvar role;\n\tvar bool;\n\tvar mention;\n}\n\nenum abstract CommandForward(String) from String {\n\tvar new_message;\n\tvar suggestion_box;\n\tvar create_event;\n\tvar scheduled_event_update;\n\tvar keyword_tracker;\n\tvar roundup_member_update;\n\tvar snippet_left;\n\tvar snippet_right;\n\tvar thread_pin_message;\n\tvar helppls;\n\tvar message_context_menu;\n\tvar scam_prevention;\n\tvar react;\n\tvar showcase;\n\tvar showcase_agree;\n\tvar showcase_disagree;\n\tvar showcase_message;\n\tvar voice_chat_bridge;\n\tvar voice_channel_bridge;\n\tvar quote_set;\n\tvar quote_edit;\n\tvar code_paste;\n\tvar add_event_role;\n\tvar auto_thread;\n\tvar thread_count;\n\tvar rate_limit;\n\tvar emoji_edit;\n}\n","package ecs;\n\nimport haxe.Exception;\nimport haxe.ds.Vector;\nimport ecs.core.EntityManager;\nimport ecs.core.FamilyManager;\nimport ecs.core.ResourceManager;\nimport ecs.core.ComponentManager;\n\n#if macro\nimport ecs.ds.Set;\nimport ecs.ds.Result;\nimport ecs.macros.Utils;\nimport ecs.macros.UniverseMacros;\nimport ecs.macros.ComponentCache;\nimport ecs.macros.ResourceCache;\nimport ecs.macros.FamilyCache;\nimport haxe.macro.Type;\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\n\nusing Safety;\nusing Lambda;\nusing EnumValue;\nusing haxe.macro.Tools;\n\nprivate class SystemSpec\n{\n    public final type : Type;\n\n    public final pos : Position;\n\n    public final enabled : Bool;\n\n    public function new(_type, _pos, _enabled)\n    {\n        type    = _type;\n        pos     = _pos;\n        enabled = _enabled;\n    }\n}\n\nprivate class PhaseSpec\n{\n    public final name : String;\n\n    public final enabled : Bool;\n\n    public final systems : Array<SystemSpec>;\n\n    public function new(_name, _enabled, _systems)\n    {\n        name    = _name;\n        enabled = _enabled;\n        systems = _systems;\n    }\n}\n\nprivate class UniverseSpec\n{\n    public final name : String;\n\n    public final entities : Int;\n\n    public final phases : Array<PhaseSpec>;\n\n    public function new(_name, _entities, _phases)\n    {\n        name     = _name;\n        entities = _entities;\n        phases   = _phases;\n    }\n}\n\nprivate function buildTypePath(_existing : String, _expr : Expr) : Result<String, String>\n{\n    return switch _expr.expr\n    {\n        case EConst(CIdent(s)):\n            Ok('$s.$_existing');\n        case EField(e, field):\n            buildTypePath('$field.$_existing', e);\n        case other:\n            Error('unsupported expression in type path : $other');\n    }\n}\n\n#end\n\nclass Universe\n{\n    @:ignoreInstrument public static macro function create(_spec : Expr)\n    {\n        final registerSystem = (e : Expr) -> {\n            return switch e.expr\n            {\n                case EConst(CIdent(i)):\n                    final t = try Context.getType(i) catch (exn) Context.error('Failed to get the type of \"$i\" : $exn', e.pos);\n\n                    return new SystemSpec(t, e.pos, true);\n                case EField(inner, field):\n                    switch buildTypePath(field, inner)\n                    {\n                        case Ok(path):\n                            final t = try Context.getType(path) catch (exn) Context.error('Failed to get the type of \"$path\" : $exn', e.pos);\n\n                            return new SystemSpec(t, e.pos, true);\n                        case Error(error):\n                            Context.error(error, e.pos);\n                    }\n                case other:\n                    Context.error('Expression is not a valid type path : $other', e.pos);\n            }\n        }\n\n        final extractPhase = (e : Expr) -> {\n            return switch e.expr\n            {\n                case EObjectDecl(fields):\n                    final name = switch fields.find(i -> i.field == 'name')\n                    {\n                        case null:\n                            Context.error('Phase does not contain a field called \"name\"', e.pos);\n                        case field:\n                            switch field.expr.expr\n                            {\n                                case EConst(CString(v)): v;\n                                case _: Context.error('field called \"name\" was not a string literal', field.expr.pos);\n                            }\n                    }\n                    final enabled = switch fields.find(i -> i.field == 'enabled')\n                    {\n                        case null:\n                            true;\n                        case field:\n                            switch field.expr.expr\n                            {\n                                case EConst(CIdent('true')): true;\n                                case EConst(CIdent('false')): false;\n                                case _: Context.error('field called \"enabled\" was not a boolean literal', field.expr.pos);\n                            }\n                    }\n                    final systems = switch fields.find(i -> i.field == 'systems')\n                    {\n                        case null:\n                            Context.error('Phase does not contain a field called \"systems\"', e.pos);\n                        case field:\n                            switch field.expr.expr\n                            {\n                                case EArrayDecl(values):\n                                    values.map(registerSystem);\n                                case _:\n                                    Context.error('field called \"systems\" was not an array declaration', field.expr.pos);\n                            }\n                    }\n\n                    new PhaseSpec(name, enabled, systems);\n                case _:\n                    Context.error('Phase definition must be an object declaration', e.pos);\n            }\n        }\n\n        final spec = switch _spec.expr\n        {\n            case EObjectDecl(fields):\n                final name = switch fields.find(i -> i.field == 'name')\n                {\n                    case null:\n                        'universe';\n                    case field:\n                        switch field.expr.expr\n                        {\n                            case EConst(CString(v)): v;\n                            case _: Context.error('field called \"name\" was not a string literal', field.expr.pos);\n                        }\n                }\n                final capacity = switch fields.find(i -> i.field == 'entities')\n                {\n                    case null:\n                        Context.error('Object has no field with the name \"entities\"', _spec.pos);\n                    case field:\n                        switch field.expr.expr\n                        {\n                            case EConst(CInt(v)): Std.parseInt(v);\n                            case _: Context.error('field called \"entities\" was not an integer literal', field.expr.pos);\n                        }\n                }\n                final phases = switch fields.find(i -> i.field == 'phases')\n                {\n                    case null:\n                        Context.error('Object has no field with the name \"phases\"', _spec.pos);\n                    case field:\n                        switch field.expr.expr\n                        {\n                            case EArrayDecl(values):\n                                values.map(extractPhase);\n                            case _: Context.error('field called \"phases\" was not an array declaratioon', field.expr.pos);\n                        }\n                }\n\n                new UniverseSpec(name, capacity, phases);\n            case _:\n                Context.error('Universe definition must be an object declaration', _spec.pos);\n        }\n\n        // Register a dependency to the calling module and the invalidation file\n        // This means the compiler will invalidate the module whenever the file changes\n\n        final module = Context.getLocalModule();\n\n        if (invalidationFile != null)\n        {\n#if (debug && !ecs.no_debug_output)\n            Sys.println('[ecs] Registered $module to have a dependency to the invalidation file');\n#end\n    \n            Context.registerModuleDependency(module, invalidationFile);\n        }\n\n        return macro {\n            // pre-allocate the phases and reserve a vector to contain all a phases systems.\n            // Do not allocate the phases right now, they need a reference to the universe so we defer that til afterwards.\n            final phases = {\n                final vec = new haxe.ds.Vector($v{ spec.phases.length });\n\n                $b{ [\n                    for (idx => phase in spec.phases)\n                    {\n                        macro vec.set(\n                            $v{ idx },\n                            new ecs.Phase(\n                                $v{ phase.enabled },\n                                $v{ phase.name },\n                                new haxe.ds.Vector($v{ phase.systems.length }),\n                                new haxe.ds.Vector($v{ phase.systems.length }))\n                        );\n                    }\n                ] }\n\n                vec;\n            }\n\n            final entities = new ecs.core.EntityManager($v{ spec.entities });\n            final components = {\n                final vec = new haxe.ds.Vector<Any>($v{ getComponentCount() });\n    \n                $b{\n                    [\n                        for (_ => value in getComponentMap())\n                        {\n                            final ct = value.type.toComplexType();\n            \n                            macro vec.set($v{ value.id }, new ecs.Components<$ct>($v{ getComponentCount() }));\n                        }\n                    ]\n                }\n\n                new ecs.core.ComponentManager(entities, vec);\n            }\n            final resources = new ecs.core.ResourceManager(new bits.Bits($v{ getResourceCount() }), new haxe.ds.Vector($v{ getResourceCount() }));\n            final families = {\n                final vec = new haxe.ds.Vector($v{ getFamilyCount() });\n\n                $b{ [\n                    for (idx => family in getFamilies())\n                    {\n                        macro {\n                            final cmpBits = new bits.Bits($v{ getComponentCount() });\n    \n                            $b{ [\n                                for (field in family.components)\n                                {\n                                    macro cmpBits.set($v{ field.uID });\n                                }\n                            ] }\n    \n                            final resBits = new bits.Bits($v{ getResourceCount() });\n    \n                            $b{ [\n                                for (field in family.resources)\n                                {\n                                    macro resBits.set($v{ field.uID });\n                                }\n                            ] }\n    \n                            vec.set($v{ idx }, new ecs.Family($v{ idx }, cmpBits, resBits, $v{ spec.entities }));\n                        }\n                    }\n                ] }\n\n                new ecs.core.FamilyManager(components, resources, vec);\n            }\n\n            final u = new ecs.Universe(entities, components, resources, families, phases);\n\n            // Second iteration over phases, now we allocate all our systems.\n            $b{ [\n                for (i => phase in spec.phases)\n                {\n                    macro {\n                        final phase = phases.get($v{ i });\n\n                        $b{ [\n                            for (j => system in phase.systems)\n                            {\n                                final tp = switch system.type\n                                {\n                                    case TInst(_.get() => cType, params):\n                                        @:privateAccess haxe.macro.TypeTools.toTypePath(cType, params);\n                                    case other:\n                                        // TODO : Keep the pos of the type so we can report the error at the right location.\n                                        Context.error('Expected system to be an instance : $other', system.pos);\n                                }\n\n                                macro {\n                                    final s = new $tp(u);\n\n                                    @:privateAccess phase.systems.set($v{ j }, s);\n                                    @:privateAccess phase.enabledSystems.set($v{ j }, $v{ system.enabled });\n\n                                    $e{ if (phase.enabled && system.enabled) macro s.onEnabled(); else macro null }\n                                };\n                            }\n                        ] }\n                    }\n                }\n            ] }\n\n            for (idx in 0...u.families.number)\n            {\n                u.families.tryActivate(idx);\n            }\n\n            u;\n        }\n    }\n\n    public final entities : EntityManager;\n    public final components : ComponentManager;\n    public final resources : ResourceManager;\n    public final families : FamilyManager;\n    public final phases : Vector<Phase>;\n\n    public function new(_entities, _components, _resources, _families, _phases)\n    {\n        entities   = _entities;\n        components = _components;\n        resources  = _resources;\n        families   = _families;\n        phases     = _phases;\n    }\n\n    public function update(_dt : Float)\n    {\n        for (phase in phases)\n        {\n            phase.update(_dt);\n        }\n    }\n\n    /**\n     * Creates a new entity within this universe.\n     * If the maximum number of entities has been reached an exception is thrown.\n     */\n    public function createEntity()\n    {\n        return entities.create();\n    }\n\n    /**\n     * Destroy an entity and all its attached components from this universe.\n     * If the universe does not contain the entity then no operation is performed.\n     * @param _entity Entity to delete.\n     */\n    public function deleteEntity(_entity)\n    {\n        families.whenEntityDestroyed(_entity);\n        components.clear(_entity);\n        entities.destroy(_entity.id());\n    }\n\n    public function getPhase(_name)\n    {\n        for (phase in phases)\n        {\n            if (phase.name == _name)\n            {\n                return phase;\n            }\n        }\n\n        throw new Exception('Unable to find a phase with the name $_name');\n    }\n\n    /**\n     * Sets any number of components on an entity in a specific universe.\n     * The final argument is a rest argument meaning it can take in any number of arguments.\n     * \n     * Example usage for `using ecs.macros.UniverseMacros;`\n     * \n     * ```\n     * unverse.setComponents(myEntity,\n     *     new Position(32, 32),\n     *     new Velocity(),\n     *     new Sprite('assets/player.png'));\n     * ```\n     * \n     * Along with the usual variable, function, and constructor expressions if the component has a constructor\n     * with no arguments then simply passing in the type will construct a new component for it.\n     * \n     * ```\n     * universe.setComponents(myEntity,\n     *     new Position(32, 32),\n     *     Velocity,\n     *     new Sprite('assets/player.png));\n     * ```\n     * \n     * It is also possible to use basic types for components.\n     * \n     * ```\n     * universe.setComponents(myEntity, 7, 4.2, true, 'hello world');\n     * ```\n     * \n     * Attempting to add a component which is not used in any families will result in a compiler warning and that\n     * expression will not be typed (no functions or property getters would be called if used).\n     * Setting a component onto an entity which already has a component of that type will replace it.\n     * \n     * @param _entity Entity to add components to.\n     * @param _components Components to add.\n     */\n    @:ignoreInstrument public macro function setComponents(self : Expr, _entity : Expr, _components : Array<Expr>)\n    {\n        final exprs  = [ macro final _ecsTmpEntity = $e{ _entity } ];\n        final added  = new Set();\n        final insert = (id, compExpr) -> {\n            exprs.push(macro $e{ self }.components.set(_ecsTmpEntity, $v{ id }, $e{ compExpr }));\n    \n            for (familyID in ecs.macros.FamilyCache.getFamilyIDsWithComponent(id))\n            {\n                added.add(familyID);\n            }\n        }\n    \n        for (component in _components)\n        {\n            switch component.expr\n            {\n                case EConst(CIdent(s)):\n                    switch isLocalIdent(s, Context.getLocalType().getClass(), Context.getLocalTVars())\n                    {\n                        case Some(type):\n                            switch getComponentID(signature(type))\n                            {\n                                case Some(id): insert(id, component);\n                                case None: Context.warning('Local ident $s : $type is not used in any families', component.pos);\n                            }\n                        case None:\n                            final resolved  = try Context.getType(s) catch (_) Context.error('Unable to get type of component expression ${ component.toString() }', component.pos);\n                            final signature = signature(resolved);\n    \n                            switch getComponentID(signature)\n                            {\n                                case Some(id):\n                                    switch resolved.toComplexType()\n                                    {\n                                        case TPath(tp): insert(id, macro new $tp());\n                                        case other: Context.error('Component ${ other.toString() } should be TPath', component.pos);\n                                    }\n                                case None: Context.warning('Component $resolved is not used in any families', component.pos);\n                            }\n                    }\n                // We need to handle ENew separately as Context.typeof won't give typedef as a type.\n                case ENew(tp, _):\n                    final resolved = {\n                        try\n                        {\n                            final t = Context.getType(printTypePath(tp));\n\n                            switch t\n                            {\n                                case TType(_, _):\n                                    t;\n                                case _:\n                                    throw new Exception('Not a typedef');\n                            }\n                        }\n                        catch (exn)\n                        {\n                            try Context.typeof(component) catch (exn) Context.error('unable to get type ${ component.toString() } : $exn', component.pos);\n                        }\n                    }\n                    final signature = signature(resolved);\n\n                    switch getComponentID(signature)\n                    {\n                        case Some(id): insert(id, component);\n                        case None: Context.warning('Component ${ resolved } is not used in any families', component.pos);\n                    }\n                case _:\n                    final resolved  = try Context.typeof(component) catch (e) Context.error('Unable to get the type of ${ component.toString() } : $e', component.pos);\n                    final signature = signature(resolved);\n\n                    switch getComponentID(signature)\n                    {\n                        case Some(id): insert(id, component);\n                        case None: Context.warning('Component ${ resolved } is not used in any families', component.pos);\n                    }\n            }\n        }\n    \n        // After all `set` functions are called check each family which could have been modified by the components added.\n        exprs.push(macro final ecsEntCompFlags = $e{ self }.components.flags[_ecsTmpEntity.id()]);\n\n        // With static loaded the `added` set contains all families which could have been effected by the components added.\n        // So we only need to check those ones.\n        for (familyID in added)\n        {\n            exprs.push(macro final ecsTmpFamily = $e{ self }.families.get($v{ familyID }));\n            exprs.push(macro if (ecsEntCompFlags.areSet(ecsTmpFamily.componentsMask)) {\n                ecsTmpFamily.add(_ecsTmpEntity);\n            });\n        }\n    \n        return macro $b{ exprs };\n    }\n\n    /**\n     * Removes any number of components from an entity in a given universe.\n     * The final argument is a rest argument meaning it can take in any number of arguments.\n     * \n     * Example usage for `using ecs.macros.UniverseMacros;`\n     * \n     * ```\n     * universe.removeComponents(myEntity, Position, Velocity, Sprite);\n     * ```\n     * \n     * Attempting to remove a component which is not used in any families will result in a compiler warning\n     * and that expression will be skipped.\n     * @param _universe Universe which contains the entity.\n     * @param _entity Entity to remove components from.\n     * @param _components Components to remove.\n     */\n    @:ignoreInstrument public macro function removeComponents(_universe : ExprOf<Universe>, _entity : Expr, _components : Array<Expr>)\n    {\n        final exprs  = [ macro final _ecsTmpEntity = $e{ _entity } ];\n        final added  = new Set();\n        final insert = id -> {\n            exprs.push(macro $e{ _universe }.components.remove(_ecsTmpEntity, $v{ id }));\n\n            for (familyID in getFamilyIDsWithComponent(id))\n            {\n                added.add(familyID);\n            }\n        };\n    \n        for (component in _components)\n        {\n            switch component.expr\n            {\n                case EConst(CIdent(s)):\n                    switch isLocalIdent(s, Context.getLocalType().getClass(), Context.getLocalTVars())\n                    {\n                        case Some(type):\n                            switch getComponentID(signature(type))\n                            {\n                                case Some(id): insert(id);\n                                case None: Context.warning('Component ${ type } is not used in any families', component.pos);\n                            }\n                        case None:\n                            final resolved  = try Context.getType(s) catch (_) Context.error('Unable to get type of component expression ${ component.toString() }', component.pos);\n                            final signature = signature(resolved);\n    \n                            switch getComponentID(signature)\n                            {\n                                case Some(id): insert(id);\n                                case None: Context.warning('Component ${ resolved } is not used in any families', component.pos);\n                            }\n                    }\n                case _: Context.error('Unsupported component expression ${ component.toString() }', component.pos);\n            }\n        }\n    \n        // After all `remove` functions are called check each family which could have been modified by the components removed.\n        exprs.push(macro final ecsEntCompFlags = $e{ _universe }.components.flags[_ecsTmpEntity.id()]);\n\n        // With static loaded the `added` set contains all families which could have been effected by the components added.\n        // So we only need to check those ones.\n        for (familyID in added)\n        {\n            exprs.push(macro final ecsTmpFamily = $e{ _universe }.families.get($v{ familyID }));\n            exprs.push(macro if (!ecsEntCompFlags.areSet(ecsTmpFamily.componentsMask)) {\n                ecsTmpFamily.remove(_ecsTmpEntity);\n            });\n        }\n    \n        return macro $b{ exprs };\n    }\n\n    /**\n     * Add any number of resources to a given universe.\n     * The final argument is a rest argument meaning it can take in any number of arguments.\n     * \n     * Example usage for `using ecs.macros.UniverseMacros;`\n     * \n     * ```\n     * unverse.setResource(\n     *     new LevelData('assets/level1.json'),\n     *     new SpriteBatcher());\n     * ```\n     * \n     * Along with the usual variable, function, and constructor expressions if the resource has a constructor\n     * with no arguments then simply passing in the type will construct it.\n     * \n     * ```\n     * universe.setResources(\n     *     new LevelData('assets/level1.json'),\n     *     SpriteBatcher);\n     * ```\n     * \n     * It is also possible to use basic types for resources.\n     * \n     * ```\n     * universe.setResources(7, 4.2, true, 'hello world');\n     * ```\n     * \n     * Attempting to add a resource which is not used in any families will result in a compiler warning and that\n     * expression will not be typed (no functions or property getters would be called if used).\n     * Setting a resource which has already been set will replace.\n     * @param _universe Universe to add resources to.\n     * @param _resources Resources to add.\n     */\n    @:ignoreInstrument public macro function setResources(_universe : ExprOf<Universe>, _resources : Array<Expr>)\n    {\n        final exprs  = [];\n        final added  = new Set();\n        final insert = (id, resExpr) -> {\n            exprs.push(macro $e{ _universe }.resources.insert($v{ id }, $e{ resExpr }));\n    \n            for (familyID in getFamilyIDsWithResource(id))\n            {\n                added.add(familyID);\n            }\n        };\n    \n        for (resource in _resources)\n        {\n            switch resource.expr\n            {\n                case EConst(CIdent(s)):\n                    switch isLocalIdent(s, Context.getLocalType().getClass(), Context.getLocalTVars())\n                    {\n                        case Some(type):\n                            insert(registerResource(signature(type)), resource);\n                        case None:\n                            final resolved  = try Context.getType(s) catch (_) Context.error('Unable to get type of resource expression ${ resource.toString() }', resource.pos);\n                            final signature = signature(resolved);\n                            final id        = registerResource(signature);\n    \n                            switch resolved.toComplexType()\n                            {\n                                case TPath(tp): insert(id, macro new $tp());\n                                case other: Context.error('Resource ${ other.toString() } should be TPath', resource.pos);\n                            }\n                    }\n                case _:\n                    final resolved  = try Context.typeof(resource) catch (_) Context.error('Unable to get type of resource expression $resource', resource.pos);\n                    final signature = signature(resolved);\n                    final id        = registerResource(signature);\n\n                    insert(id, resource);\n            }\n        }\n    \n        // Add a call to try and activate each families which requested the resources.\n        for (familyID in added)\n        {\n            exprs.push(macro $e{ _universe }.families.tryActivate($v{ familyID }));\n        }\n    \n        return macro $b{ exprs };\n    }\n    \n    /**\n     * Removes any number of resource from the given universe.\n     * The final argument is a rest argument meaning it can take in any number of arguments.\n     * \n     * Example usage for `using ecs.macros.UniverseMacros;`\n     * \n     * ```\n     * universe.removeResources(LevelData, SpriteBatcher);\n     * ```\n     * \n     * Attempting to remove a resource which is not used in any families will result in a compiler warning\n     * and that expression will be skipped.\n     * @param _universe Universe to remove the resource from.\n     * @param _components Resources to remove.\n     */\n    @:ignoreInstrument public macro function removeResources(_universe : ExprOf<Universe>, _resources : Array<Expr>)\n    {\n        final exprs  = [];\n        final adder  = new Set();\n        final insert = id -> {\n            adder.add(id);\n    \n            for (familyID in getFamilyIDsWithResource(id))\n            {\n                exprs.push(macro $e{ _universe }.families.get($v{ familyID }).deactivate());\n            }\n        };\n    \n        for (resource in _resources)\n        {\n            switch resource.expr\n            {\n                case EConst(CIdent(s)):\n                    switch isLocalIdent(s, Context.getLocalType().getClass(), Context.getLocalTVars())\n                    {\n                        case Some(type):\n                            switch getResourceID(signature(type))\n                            {\n                                case Some(id): insert(id);\n                                case None: Context.warning('Resource $type is not used in any families', resource.pos);\n                            }\n                        case None:\n                            final resolved  = try Context.getType(s) catch (_) Context.error('Unable to get type of resource expression ${ resource.toString() }', resource.pos);\n                            final signature = signature(resolved);\n    \n                            switch getResourceID(signature)\n                            {\n                                case Some(id):\n                                    switch resolved.toComplexType()\n                                    {\n                                        case TPath(_): insert(id);\n                                        case other: Context.error('Resource ${ other.toString() } should be TPath', resource.pos);\n                                    }\n                                case None: Context.warning('Resource $resolved is not used in any families', resource.pos);\n                            }\n                    }\n                case _:\n                    Context.error('Unsupported resource expression ${ resource.toString() }', resource.pos);\n            }\n        }\n    \n        // Remove the resources once each family has been deactivated\n        for (resourceID in adder)\n        {\n            exprs.push(macro for (i in 0...$e{ _universe }.families.number) $e{ _universe }.families.tryDeactivate(i, $v{ resourceID }));\n    \n            exprs.push(macro $e{ _universe }.resources.remove($v{ resourceID }));\n        }\n    \n        return macro $b{ exprs };\n    }\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\nprivate typedef VectorData<T> =\n\t#if flash10\n\tflash.Vector<T>\n\t#elseif neko\n\tneko.NativeArray<T>\n\t#elseif java\n\tjvm.NativeArray<T>\n\t#elseif lua\n\tlua.Table<Int, T>\n\t#elseif eval\n\teval.Vector<T>\n\t#else\n\tArray<T>\n\t#end;\n\n/**\n\tA Vector is a storage of fixed size. It can be faster than Array on some\n\ttargets, and is never slower.\n\n\t@see https://haxe.org/manual/std-vector.html\n**/\nabstract Vector<T>(VectorData<T>) {\n\t/**\n\t\tCreates a new Vector of length `length`.\n\n\t\tInitially `this` Vector contains `length` neutral elements:\n\n\t\t- always null on dynamic targets\n\t\t- 0, 0.0 or false for Int, Float and Bool respectively on static targets\n\t\t- null for other types on static targets\n\n\t\tIf `length` is less than or equal to 0, the result is unspecified.\n\t**/\n\textern overload public inline function new(length:Int) {\n\t\t#if flash10\n\t\tthis = new flash.Vector<T>(length, true);\n\t\t#elseif neko\n\t\tthis = untyped __dollar__amake(length);\n\t\t#elseif js\n\t\tthis = js.Syntax.construct(Array, length);\n\t\t#elseif java\n\t\tthis = new java.NativeArray(length);\n\t\t#elseif cpp\n\t\tthis = NativeArray.create(length);\n\t\t#elseif python\n\t\tthis = python.Syntax.code(\"([{0}]*{1})\", null, length);\n\t\t#elseif lua\n\t\tthis = untyped __lua_table__({length: length});\n\t\t#elseif eval\n\t\tthis = new eval.Vector(length);\n\t\t#else\n\t\tthis = [];\n\t\tuntyped this.length = length;\n\t\t#end\n\t}\n\n\t/**\n\t\tCreates a new Vector of length `length` filled with `defaultValue` elements.\n\n\t\tCan be faster than `new Vector(length)` for iteration on some targets for non-nullable elements.\n\n\t\tIf `length` is less than or equal to 0, the result is unspecified.\n\t**/\n\textern overload public inline function new(length:Int, defaultValue:T):Vector<T> {\n\t\t#if js\n\t\tthis = [for (_ in 0...length) defaultValue];\n\t\t#elseif python\n\t\tthis = python.Syntax.code(\"([{0}]*{1})\", defaultValue, length);\n\t\t#else\n\n\t\t#if flash10\n\t\tthis = new flash.Vector<T>(length, true);\n\t\t#elseif neko\n\t\tthis = untyped __dollar__amake(length);\n\t\t#elseif java\n\t\tthis = new java.NativeArray(length);\n\t\t#elseif cpp\n\t\tthis = NativeArray.create(length);\n\t\t#elseif lua\n\t\tthis = untyped __lua_table__({length: length});\n\t\t#elseif eval\n\t\tthis = new eval.Vector(length);\n\t\t#else\n\t\tthis = [];\n\t\tuntyped this.length = length;\n\t\t#end\n\t\tfill(defaultValue);\n\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the value at index `index`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:op([]) public inline function get(index:Int):T {\n\t\t#if cpp\n\t\treturn this.unsafeGet(index);\n\t\t#elseif python\n\t\treturn python.internal.ArrayImpl.unsafeGet(this, index);\n\t\t#elseif eval\n\t\treturn this[index];\n\t\t#else\n\t\treturn this[index];\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the value at index `index` to `val`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:op([]) public inline function set(index:Int, val:T):T {\n\t\t#if cpp\n\t\treturn this.unsafeSet(index, val);\n\t\t#elseif python\n\t\treturn python.internal.ArrayImpl.unsafeSet(this, index, val);\n\t\t#elseif eval\n\t\treturn this[index] = val;\n\t\t#else\n\t\treturn this[index] = val;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the length of `this` Vector.\n\t**/\n\tpublic var length(get, never):Int;\n\n\tinline function get_length():Int {\n\t\t#if neko\n\t\treturn untyped __dollar__asize(this);\n\t\t#elseif java\n\t\treturn this.length;\n\t\t#elseif python\n\t\treturn this.length;\n\t\t#else\n\t\treturn untyped this.length;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets all `length` elements of `this` Vector to `value`.\n\t**/\n\tpublic inline function fill(value:T):Void\n\t\tfor (i in 0...length) this[i] = value;\n\n\t/**\n\t\tCopies `length` of elements from `src` Vector, beginning at `srcPos` to\n\t\t`dest` Vector, beginning at `destPos`\n\n\t\tThe results are unspecified if `length` results in out-of-bounds access,\n\t\tor if `src` or `dest` are null\n\t**/\n\tpublic static #if (java || neko || cpp || eval) inline #end function blit<T>(src:Vector<T>, srcPos:Int, dest:Vector<T>, destPos:Int, len:Int):Void {\n\t\t#if neko\n\t\tuntyped __dollar__ablit(dest, destPos, src, srcPos, len);\n\t\t#elseif java\n\t\tjava.lang.System.arraycopy(src, srcPos, dest, destPos, len);\n\t\t#elseif cpp\n\t\tdest.toData().blit(destPos, src.toData(), srcPos, len);\n\t\t#elseif eval\n\t\tsrc.toData().blit(srcPos, dest.toData(), destPos, len);\n\t\t#else\n\t\tif (src == dest) {\n\t\t\tif (srcPos < destPos) {\n\t\t\t\tvar i = srcPos + len;\n\t\t\t\tvar j = destPos + len;\n\t\t\t\tfor (k in 0...len) {\n\t\t\t\t\ti--;\n\t\t\t\t\tj--;\n\t\t\t\t\tsrc[j] = src[i];\n\t\t\t\t}\n\t\t\t} else if (srcPos > destPos) {\n\t\t\t\tvar i = srcPos;\n\t\t\t\tvar j = destPos;\n\t\t\t\tfor (k in 0...len) {\n\t\t\t\t\tsrc[j] = src[i];\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i in 0...len) {\n\t\t\t\tdest[destPos + i] = src[srcPos + i];\n\t\t\t}\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tCreates a new Array, copy the content from the Vector to it, and returns it.\n\t**/\n\tpublic #if (flash || cpp || js || java || eval) inline #end function toArray():Array<T> {\n\t\t#if cpp\n\t\treturn this.copy();\n\t\t#elseif python\n\t\treturn this.copy();\n\t\t#elseif js\n\t\treturn this.slice(0);\n\t\t#elseif eval\n\t\treturn this.toArray();\n\t\t#else\n\t\tvar a = new Array();\n\t\tvar len = length;\n\t\t#if (neko)\n\t\t// prealloc good size\n\t\tif (len > 0)\n\t\t\ta[len - 1] = get(0);\n\t\t#end\n\t\tfor (i in 0...len)\n\t\t\ta[i] = get(i);\n\t\treturn a;\n\t\t#end\n\t}\n\n\t/**\n\t\tExtracts the data of `this` Vector.\n\n\t\tThis returns the internal representation type.\n\t**/\n\tpublic inline function toData():VectorData<T>\n\t\treturn cast this;\n\n\t/**\n\t\tInitializes a new Vector from `data`.\n\n\t\tSince `data` is the internal representation of Vector, this is a no-op.\n\n\t\tIf `data` is null, the corresponding Vector is also `null`.\n\t**/\n\tstatic public inline function fromData<T>(data:VectorData<T>):Vector<T>\n\t\treturn cast data;\n\n\t/**\n\t\tCreates a new Vector by copying the elements of `array`.\n\n\t\tThis always creates a copy, even on platforms where the internal\n\t\trepresentation is Array.\n\n\t\tThe elements are not copied and retain their identity, so\n\t\t`a[i] == Vector.fromArrayCopy(a).get(i)` is true for any valid i.\n\n\t\tIf `array` is null, the result is unspecified.\n\t**/\n\tstatic public inline function fromArrayCopy<T>(array:Array<T>):Vector<T> {\n\t\t#if python\n\t\treturn cast array.copy();\n\t\t#elseif flash10\n\t\treturn fromData(flash.Vector.ofArray(array));\n\t\t#elseif java\n\t\treturn fromData(jvm.NativeArray.ofArray(array));\n\t\t#elseif cpp\n\t\treturn cast array.copy();\n\t\t#elseif js\n\t\treturn fromData(array.slice(0));\n\t\t#elseif eval\n\t\treturn fromData(eval.Vector.fromArrayCopy(array));\n\t\t#else\n\t\t// TODO: Optimize this for others?\n\t\tvar vec = new Vector<T>(array.length);\n\t\tfor (i in 0...array.length)\n\t\t\tvec.set(i, array[i]);\n\t\treturn vec;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a shallow copy of `this` Vector.\n\n\t\tThe elements are not copied and retain their identity, so\n\t\t`a[i] == a.copy()[i]` is true for any valid `i`. However,\n\t\t`a == a.copy()` is always false.\n\t**/\n\textern public inline function copy<T>():Vector<T> {\n\t\t#if eval\n\t\treturn fromData(this.copy());\n\t\t#else\n\t\tvar r = new Vector<T>(length);\n\t\tVector.blit(cast this, 0, r, 0, length);\n\t\treturn r;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` Vector, with `sep` separating\n\t\teach element.\n\n\t\tThe result of this operation is equal to `Std.string(this[0]) + sep +\n\t\tStd.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`\n\n\t\tIf `this` Vector has length 0, the result is the empty String `\"\"`.\n\t\tIf `this` has exactly one element, the result is equal to a call to\n\t\t`Std.string(this[0])`.\n\n\t\tIf `sep` is null, the result is unspecified.\n\t**/\n\textern public inline function join<T>(sep:String):String {\n\t\t#if (flash10 || cpp || eval)\n\t\treturn this.join(sep);\n\t\t#else\n\t\tvar b = new StringBuf();\n\t\tvar len = length;\n\t\tfor (i in 0...len) {\n\t\t\tb.add(Std.string(get(i)));\n\t\t\tif (i < len - 1) {\n\t\t\t\tb.add(sep);\n\t\t\t}\n\t\t}\n\t\treturn b.toString();\n\t\t#end\n\t}\n\n\t/**\n\t\tCreates a new Vector by applying function `f` to all elements of `this`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\textern public inline function map<S>(f:T->S):Vector<S> {\n\t\t#if eval\n\t\treturn fromData(this.map(f));\n\t\t#else\n\t\tvar length = length;\n\t\tvar r = new Vector<S>(length);\n\t\tvar len = length;\n\t\tfor (i in 0...len) {\n\t\t\tvar v = f(get(i));\n\t\t\tr.set(i, v);\n\t\t}\n\t\treturn r;\n\t\t#end\n\t}\n\n\t/**\n\t\tSorts `this` Vector according to the comparison function `f`, where\n\t\t`f(x,y)` returns 0 if x == y, a positive Int if x > y and a\n\t\tnegative Int if x < y.\n\n\t\tThis operation modifies `this` Vector in place.\n\n\t\tThe sort operation is not guaranteed to be stable, which means that the\n\t\torder of equal elements may not be retained.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic inline function sort(f:T->T->Int):Void {\n\t\t#if (neko || java || eval)\n\t\tthrow \"not yet supported\";\n\t\t#elseif lua\n\t\thaxe.ds.ArraySort.sort(cast this, f);\n\t\t#else\n\t\tthis.sort(f);\n\t\t#end\n\t}\n}\n","package bits;\n\nimport haxe.io.BytesData;\n/**\n * A sequence of bits of any size.\n */\nabstract Bits(BitsData) from BitsData to BitsData {\n\t/**\n\t * Create a `bits.Bits` instance using values of `positions` as positions of bits, which should be set to 1.\n\t * E.g. `[0, 2, 7]` will produce `bits.Bits` instance of `10000101`.\n\t * If there is a negative value in `positions` the result is unspecified.\n\t */\n\t@:from\n\tstatic public function fromPositions(positions:Array<Int>):Bits {\n\t\tvar bits = new Bits();\n\t\tfor(pos in positions) {\n\t\t\t#if haxe4 inline #end bits.set(pos);\n\t\t}\n\t\treturn bits;\n\t}\n\n\t/**\n\t * Create a new instance.\n\t *\n\t * By default the new instance allocates a memory for 32 (on most platforms) bits.\n\t * And then grows as necessary on setting bits at positions greater than 31.\n\t *\n\t * @param capacity makes `bits.Bits` to pre-allocate the amount of memory required to store `capacity` bits.\n\t */\n\tpublic inline function new(capacity:Int = 0) {\n\t\tthis = new BitsData();\n\t\tif(capacity > 0) {\n\t\t\tthis.resize(Math.ceil(capacity / BitsData.CELL_SIZE));\n\t\t}\n\t}\n\n\t/**\n\t * Set the bit at position `pos` (zero-based) in a binary representation of `bits.BitFlags` to 1.\n\t * It's like `bits = bits | (1 << pos)`\n\t * E.g. if `pos` is 2 the third bit is set to 1 (`0000100`).\n\t * If `pos` is negative the result is unspecified.\n\t */\n\tpublic function set(pos:Int) {\n\t\tif(pos < BitsData.CELL_SIZE) {\n\t\t\tthis[0] |= (1 << pos);\n\t\t} else {\n\t\t\tvar cell = Std.int(pos / BitsData.CELL_SIZE);\n\t\t\tif(this.length <= cell) {\n\t\t\t\tthis.resize(cell + 1);\n\t\t\t}\n\t\t\tvar bit = pos - cell * BitsData.CELL_SIZE;\n\t\t\tthis[cell] |= (1 << bit);\n\t\t}\n\t}\n\n\t/**\n\t * Set the bit at position `pos` (zero-based) in a binary representation of `bits.BitFlags` to 0.\n\t * If `pos` is negative the result is unspecified.\n\t */\n\tpublic function unset(pos:Int) {\n\t\tif(pos < BitsData.CELL_SIZE) {\n\t\t\tthis[0] &= ~(1 << pos);\n\t\t} else {\n\t\t\tvar cell = Std.int(pos / BitsData.CELL_SIZE);\n\t\t\tif(this.length <= cell) {\n\t\t\t\tthis.resize(cell + 1);\n\t\t\t}\n\t\t\tvar bit = pos - cell * BitsData.CELL_SIZE;\n\t\t\tthis[cell] &= ~(1 << bit);\n\t\t}\n\t}\n\n\t/**\n\t * Add all ones of `bits` to this instance.\n\t * It's like `this = this | bits`.\n\t */\n\tpublic function add(bits:Bits) {\n\t\tvar data = (bits:BitsData);\n\t\tif(this.length < data.length) {\n\t\t\tthis.resize(data.length);\n\t\t}\n\t\tfor(cell in 0...data.length) {\n\t\t\tthis[cell] |= data[cell];\n\t\t}\n\t}\n\n\t/**\n\t * Remove all ones of `bits` from this instance.\n\t * It's like `this = this & ~bits`.\n\t */\n\tpublic function remove(bits:Bits) {\n\t\tvar data = (bits:BitsData);\n\t\tfor(cell in 0...data.length) {\n\t\t\tif(cell >= this.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis[cell] &= ~data[cell];\n\t\t}\n\t}\n\n\t/**\n\t * Check if a bit at position `pos` is set to 1.\n\t * If `pos` is negative the result is unspecified.\n\t */\n\tpublic function isSet(pos:Int):Bool {\n\t\treturn if(pos < BitsData.CELL_SIZE) {\n\t\t\t0 != this[0] & (1 << pos);\n\t\t} else {\n\t\t\tvar cell = Std.int(pos / BitsData.CELL_SIZE);\n\t\t\tvar bit = pos - cell * BitsData.CELL_SIZE;\n\t\t\tcell < this.length && 0 != this[cell] & (1 << bit);\n\t\t}\n\t}\n\n\t/**\n\t * Check if this instance has all the corresponding bits of `bits` set.\n\t * It's like `this & bits != 0`.\n\t * E.g. returns `true` if `this` is `10010010` and `bits` is `10000010`.\n\t */\n\tpublic function areSet(bits:Bits):Bool {\n\t\tvar data = (bits:BitsData);\n\t\tvar has = true;\n\t\tfor(cell in 0...data.length) {\n\t\t\tif(cell < this.length) {\n\t\t\t\thas = data[cell] == this[cell] & data[cell];\n\t\t\t} else {\n\t\t\t\thas = 0 == data[cell];\n\t\t\t}\n\t\t\tif(!has) break;\n\t\t}\n\t\treturn has;\n\t}\n\n\t/**\n\t * Invoke `callback` for each non-zero bit.\n\t * Callback will receive a position (zero-based) of each non-zero bit.\n\t */\n\tpublic inline function forEach(callback:Int->Void) {\n\t\tfor(cell in 0...this.length) {\n\t\t\tvar cellValue = this[cell];\n\t\t\tif(cellValue != 0) {\n\t\t\t\tfor(i in 0...BitsData.CELL_SIZE) {\n\t\t\t\t\tif(0 != cellValue & (1 << i)) {\n\t\t\t\t\t\tcallback(cell * BitsData.CELL_SIZE + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create a copy of this instance\n\t */\n\tpublic inline function copy():Bits {\n\t\treturn this.copy();\n\t}\n\n\t/**\n\t * Get string representation of this instance (without leading zeros).\n\t * E.g. `100010010`.\n\t */\n\tpublic function toString():String {\n\t\tvar result = '';\n\t\tfor(cell in 0...this.length) {\n\t\t\tvar cellValue = this[cell];\n\t\t\tfor(i in 0...BitsData.CELL_SIZE) {\n\t\t\t\tresult = (0 != cellValue & (1 << i) ? '1' : '0') + result;\n\t\t\t}\n\t\t}\n\t\treturn result.substr(result.indexOf('1'));\n\t}\n\n\t/**\n\t * Check if all bits are zeros\n\t */\n\tpublic function isEmpty():Bool {\n\t\tvar empty = true;\n\t\tfor(cellValue in this) {\n\t\t\tif(cellValue != 0) {\n\t\t\t\tempty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn empty;\n\t}\n\n\t/**\n\t * Count the amount of non-zero bits.\n\t */\n\tpublic function count():Int {\n\t\treturn this.countOnes();\n\t}\n\n\t/**\n\t * Set all bits to 0\n\t */\n\tpublic function clear() {\n\t\tfor(cell in 0...this.length) {\n\t\t\tthis[cell] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Merge this instance with `bits`.\n\t * E.g. merging `10010` and `10001` produces `10011`.\n\t * Creates a new `bits.Bits` instance.\n\t */\n\t@:op(A | B)\n\tpublic function merge(bits:Bits):Bits {\n\t\tinline function mergeData(a:BitsData, b:BitsData):BitsData {\n\t\t\tvar result = a.copy();\n\t\t\tfor(cell in 0...b.length) {\n\t\t\t\tresult[cell] |= b[cell];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif(this.length < (bits:BitsData).length) {\n\t\t\treturn mergeData(bits, this);\n\t\t} else {\n\t\t\treturn mergeData(this, bits);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an intersection of this instance with `bits`.\n\t * E.g. intersecting `10010` and `01010` produces `00010`.\n\t * Creates a new `bits.Bits` instance.\n\t */\n\t@:op(A & B)\n\tpublic function intersect(bits:Bits):Bits {\n\t\tinline function intersectData(a:BitsData, b:BitsData):BitsData {\n\t\t\tvar result = a.copy();\n\t\t\tfor(cell in 0...a.length) {\n\t\t\t\tresult[cell] &= b[cell];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif(this.length < (bits:BitsData).length) {\n\t\t\treturn intersectData(this, bits);\n\t\t} else {\n\t\t\treturn intersectData(bits, this);\n\t\t}\n\t}\n\n\t/**\n\t * Iterator over the positions of non-zero bits\n\t */\n\tpublic inline function iterator():BitsIterator {\n\t\treturn new BitsIterator(this);\n\t}\n}\n\nclass BitsIterator {\n\tvar data:BitsData;\n\tvar cell:Int = 0;\n\tvar i:Int = 0;\n\n\tpublic inline function new(data:BitsData) {\n\t\tthis.data = data;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\tvar has = false;\n\n\t\twhile(cell < data.length) {\n\t\t\tvar cellValue = data[cell];\n\n\t\t\tif(cellValue != 0) {\n\t\t\t\twhile(i < BitsData.CELL_SIZE) {\n\t\t\t\t\tif(cellValue & (1 << i) != 0) {\n\t\t\t\t\t\thas = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t\tif(has) break;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\t++cell;\n\t\t}\n\n\t\treturn has;\n\t}\n\n\tpublic inline function next():Int {\n\t\t++i;\n\t\treturn cell * BitsData.CELL_SIZE + i - 1;\n\t}\n}\n\n//TODO change to the most effective data structure for each target platform\n@:noCompletion\nabstract BitsData(Array<Int>) {\n\tstatic public inline var CELL_SIZE = 32;\n\n\tpublic var length(get,never):Int;\n\n\tpublic inline function new() this = [0];\n\n\tpublic inline function resize(newLength:Int) {\n\t\t#if (!haxe4 || !static)\n\t\t\tfor(i in this.length...newLength) {\n\t\t\t\tthis[i] = 0;\n\t\t\t}\n\t\t#else\n\t\t\tthis.resize(newLength);\n\t\t#end\n\t}\n\n\tpublic inline function copy():BitsData {\n\t\treturn cast this.copy();\n\t}\n\n\t/**\n\t * Count 1-bits\n\t */\n\tpublic inline function countOnes():Int {\n\t\tvar result = 0;\n\t\t#if (neko || js || java || cs || cpp || flash)\n\t\t\tfor(v in this) {\n\t\t\t\tif(v != 0) {\n\t\t\t\t\tv = v - ((v >>> 1) & 0x55555555);\n\t\t\t\t\tv = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n\t\t\t\t\tresult += (((v + (v >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n\t\t\t\t}\n\t\t\t}\n\t\t#else\n\t\t\tfor(cellValue in this) {\n\t\t\t\tif(cellValue != 0) {\n\t\t\t\t\tfor(i in 0...CELL_SIZE) {\n\t\t\t\t\t\tif(cellValue & (1 << i) != 0) {\n\t\t\t\t\t\t\t++result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t#end\n\t\treturn result;\n\t}\n\n\t@:op([])\n\tinline function get(index:Int):Int {\n\t\treturn this[index];\n\t}\n\n\t@:op([])\n\tinline function set(index:Int, value:Int):Int {\n\t\treturn this[index] = value;\n\t}\n\n\tinline function get_length() return this.length;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\t`Any` is a type that is compatible with any other in both ways.\n\n\tThis means that a value of any type can be assigned to `Any`, and\n\tvice-versa, a value of `Any` type can be assigned to any other type.\n\n\tIt's a more type-safe alternative to `Dynamic`, because it doesn't\n\tsupport field access or operators and it's bound to monomorphs. So,\n\tto work with the actual value, it needs to be explicitly promoted\n\tto another type.\n**/\n@:forward.variance\nabstract Any(Dynamic) from Dynamic {\n\t@:noCompletion @:to extern inline function __promote<T>():T\n\t\treturn this;\n\n\t@:noCompletion extern inline function toString():String\n\t\treturn Std.string(this);\n}\n","package haxe;\n\nimport haxe.iterators.RestIterator;\nimport haxe.iterators.RestKeyValueIterator;\n\nprivate typedef NativeRest<T> = Array<T>;\n\n/**\n\tA special type that represents a \"rest\" function argument.\n\n\tThe special `...` syntax can be used for convenience and improved readability:\n\n\t```haxe\n\tfunction f(...rest:Int) {\n\t\t$type(rest); // haxe.Rest<Int>\n\t}\n\n\tf(1, 2, 3);\n\n\tfinal array = [1, 2, 3];\n\tf(...array);\n\t```\n\n\tShould be used as a type for the last argument of a method, indicating that\n\tan arbitrary number of arguments of the given type can be passed to that method.\n\n\tAllows to use array access by index to get values of rest arguments.\n\tIf the index exceeds the amount of rest arguments passed, the result is unspecified.\n**/\n@:coreApi\nabstract Rest<T>(NativeRest<T>) {\n\t/** Amount of arguments passed as rest arguments */\n\tpublic var length(get,never):Int;\n\tinline function get_length():Int\n\t\treturn this.length;\n\n\t/**\n\t\tCreate rest arguments using contents of `array`.\n\n\t\tWARNING:\n\t\tDepending on a target platform modifying `array` after using this method\n\t\tmay affect the created `Rest` instance.\n\t\tUse `Rest.of(array.copy())` to avoid that.\n\t**/\n\t@:from static public inline function of<T>(array:Array<T>):Rest<T>\n\t\treturn new Rest(array);\n\n\tinline function new(array:Array<T>):Void\n\t\tthis = array;\n\n\t@:arrayAccess inline function get(index:Int):T\n\t\treturn this[index];\n\n\t/**\n\t\tCreates an array containing all the values of rest arguments.\n\t**/\n\t@:to public #if !cppia inline #end function toArray():Array<T>\n\t\treturn this.copy();\n\n\tpublic inline function iterator():RestIterator<T>\n\t\treturn new RestIterator<T>(this);\n\n\tpublic inline function keyValueIterator():RestKeyValueIterator<T>\n\t\treturn new RestKeyValueIterator<T>(this);\n\n\t/**\n\t\tCreate a new rest arguments collection by appending `item` to this one.\n\t**/\n\tpublic function append(item:T):Rest<T> {\n\t\tvar result = this.copy();\n\t\tresult.push(item);\n\t\treturn new Rest(result);\n\t}\n\n\t/**\n\t\tCreate a new rest arguments collection by prepending this one with `item`.\n\t**/\n\tpublic function prepend(item:T):Rest<T> {\n\t\tvar result = this.copy();\n\t\tresult.unshift(item);\n\t\treturn new Rest(result);\n\t}\n\n\tpublic inline function toString():String {\n\t\t#if (flash || js)\n\t\t\treturn '[${this.toString()}]';\n\t\t#else\n\t\t\treturn this.toString();\n\t\t#end\n\t}\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global scope typed with fields available only in a worker context. */\n\tpublic static var self(get, never):js.html.WorkerGlobalScope;\n\n\tstatic inline function get_self():js.html.WorkerGlobalScope {\n\t\treturn js.Lib.global;\n\t}\n\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\n\textern inline static function get_window()\n\t\treturn js.Syntax.code(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\n\textern inline static function get_document()\n\t\treturn window.document;\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\n\textern inline static function get_location()\n\t\treturn js.Lib.global.location;\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\n\textern inline static function get_navigator()\n\t\treturn js.Lib.global.navigator;\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.ConsoleInstance;\n\n\textern inline static function get_console()\n\t\treturn js.Lib.global.console;\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\n\tstatic function get_supported()\n\t\treturn\n\t\t\tjs.Syntax.typeof(window) != \"undefined\" &&\n\t\t\tjs.Syntax.typeof(window.location) != \"undefined\" &&\n\t\t\tjs.Syntax.typeof(window.location.protocol) == \"string\";\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage():Null<Storage> {\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key, key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch (e:Dynamic) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage():Storage {\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key, key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch (e:Dynamic) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest():XMLHttpRequest {\n\t\tif (js.Syntax.code(\"typeof XMLHttpRequest\") != \"undefined\") {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif (js.Syntax.code(\"typeof ActiveXObject\") != \"undefined\") {\n\t\t\treturn js.Syntax.construct(\"ActiveXObject\", \"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static inline function alert(v:Dynamic) {\n\t\twindow.alert(Std.string(v));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\nimport js.lib.Object;\nimport haxe.Constraints.IMap;\nimport haxe.DynamicAccess;\n\n#if (js_es >= 6)\n@:coreApi class StringMap<T> implements IMap<String, T> {\n\tprivate var m:js.lib.Map<String, T>;\n\n\tpublic inline function new():Void {\n\t\tm = new js.lib.Map();\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\tm.set(key, value);\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\treturn m.get(key);\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\treturn m.has(key);\n\t}\n\n\tpublic inline function remove(key:String):Bool {\n\t\treturn m.delete(key);\n\t}\n\n\tpublic inline function keys():Iterator<String> {\n\t\treturn new js.lib.HaxeIterator(m.keys());\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn m.iterator();\n\t}\n\n\tpublic inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn m.keyValueIterator();\n\t}\n\n\tpublic inline function copy():StringMap<T> {\n\t\tvar copied = new StringMap();\n\t\tcopied.m = new js.lib.Map(m);\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar it = keyValueIterator();\n\t\tfor (i in it) {\n\t\t\ts.add(i.key);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(i.value));\n\t\t\tif (it.hasNext())\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\tm.clear();\n\t}\n}\n#elseif (js_es == 5)\n@:coreApi class StringMap<T> implements IMap<String, T> {\n\tvar h:Dynamic;\n\n\tpublic inline function new() {\n\t\th = Object.create(null);\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\treturn Object.prototype.hasOwnProperty.call(h, key);\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\th[cast key] = value;\n\t}\n\n\tpublic inline function remove(key:String):Bool {\n\t\treturn if (exists(key)) {\n\t\t\tjs.Syntax.delete(h, key); true;\n\t\t} else {\n\t\t\tfalse;\n\t\t}\n\t}\n\n\tpublic inline function keys():Iterator<String> {\n\t\treturn new haxe.iterators.ArrayIterator(Object.keys(h));\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn new StringMapValueIterator(h);\n\t}\n\n\tpublic inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn new StringMapKeyValueIterator(h);\n\t}\n\n\tpublic inline function copy():StringMap<T> {\n\t\treturn createCopy(h);\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = Object.create(null);\n\t}\n\n\tpublic inline function toString():String {\n\t\treturn stringify(h);\n\t}\n\n\t// impl\n\tstatic function createCopy<T>(h:Dynamic):StringMap<T> {\n\t\tvar copy = new StringMap();\n\t\tjs.Syntax.code(\"for (var key in {0}) {1}[key] = {0}[key]\", h, copy.h);\n\t\treturn copy;\n\t}\n\n\t@:analyzer(no_optimize)\n\tstatic function stringify(h:Dynamic):String {\n\t\tvar s = \"[\", first = true;\n\t\tjs.Syntax.code(\"for (var key in {0}) {\", h);\n\t\tjs.Syntax.code(\"\\tif ({0}) {0} = false; else {1} += ',';\", first, s);\n\t\tjs.Syntax.code(\"\\t{0} += key + ' => ' + {1}({2}[key]);\", s, Std.string, h);\n\t\tjs.Syntax.code(\"}\");\n\t\treturn s + \"]\";\n\t}\n}\n\nprivate class StringMapValueIterator<T> {\n\tfinal h:Dynamic;\n\tfinal keys:Array<String>;\n\tfinal length:Int;\n\tvar current:Int;\n\n\tpublic inline function new(h:Dynamic) {\n\t\tthis.h = h;\n\t\tkeys = Object.keys(h);\n\t\tlength = keys.length;\n\t\tcurrent = 0;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn current < length;\n\t}\n\n\tpublic inline function next():T {\n\t\treturn h[cast keys[current++]];\n\t}\n}\n\nprivate class StringMapKeyValueIterator<T> {\n\tfinal h:Dynamic;\n\tfinal keys:Array<String>;\n\tfinal length:Int;\n\tvar current:Int;\n\n\tpublic inline function new(h:Dynamic) {\n\t\tthis.h = h;\n\t\tkeys = Object.keys(h);\n\t\tlength = keys.length;\n\t\tcurrent = 0;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn current < length;\n\t}\n\n\tpublic inline function next():{key:String, value:T} {\n\t\tvar key = keys[current++];\n\t\treturn {key: key, value: h[cast key]};\n\t}\n}\n#else\nprivate class StringMapIterator<T> {\n\tvar map:StringMap<T>;\n\tvar keys:Array<String>;\n\tvar index:Int;\n\tvar count:Int;\n\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String, T> {\n\tprivate var h:Dynamic;\n\tprivate var rh:Dynamic;\n\n\tpublic inline function new():Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String):Bool {\n\t\treturn js.Syntax.code(\"__map_reserved[{0}]\", key) != null;\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\tif (isReserved(key))\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\tif (isReserved(key))\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\tif (isReserved(key))\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved(key:String, value:T):Void {\n\t\tif (rh == null)\n\t\t\trh = {};\n\t\trh[cast \"$\" + key] = value;\n\t}\n\n\tfunction getReserved(key:String):Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\" + key];\n\t}\n\n\tfunction existsReserved(key:String):Bool {\n\t\tif (rh == null)\n\t\t\treturn false;\n\t\treturn (cast rh).hasOwnProperty(\"$\" + key);\n\t}\n\n\tpublic function remove(key:String):Bool {\n\t\tif (isReserved(key)) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif (rh == null || !rh.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(rh, key);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!h.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(h, key);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys():Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\n\tfunction arrayKeys():Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\tjs.Syntax.code(\"for( var key in this.h ) {\");\n\t\t\tif (h.hasOwnProperty(key))\n\t\t\t\tout.push(key);\n\t\t\tjs.Syntax.code(\"}\");\n\t\t}\n\t\tif (rh != null)\n\t\t\tuntyped {\n\t\t\t\tjs.Syntax.code(\"for( var key in this.rh ) {\");\n\t\t\t\tif (key.charCodeAt(0) == \"$\".code)\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\tpublic function copy():StringMap<T> {\n\t\tvar copied = new StringMap();\n\t\tfor (key in keys())\n\t\t\tcopied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar keys = arrayKeys();\n\t\tfor (i in 0...keys.length) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif (i < keys.length - 1)\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = {};\n\t\trh = null;\n\t}\n\n\tstatic function __init__():Void {\n\t\tjs.Syntax.code(\"var __map_reserved = {};\");\n\t}\n}\n#end\n","package sys.io;\n\nimport js.node.Fs;\n\n@:dce\n// @:coreApi\nclass File {\n\tpublic static inline function append(path:String, binary:Bool = true):FileOutput {\n\t\treturn new FileOutput(Fs.openSync(path, AppendCreate));\n\t}\n\n\tpublic static inline function write(path:String, binary:Bool = true):FileOutput {\n\t\treturn new FileOutput(Fs.openSync(path, WriteCreate));\n\t}\n\n\tpublic static inline function read(path:String, binary:Bool = true):FileInput {\n\t\treturn new FileInput(Fs.openSync(path, Read));\n\t}\n\n\tpublic static inline function getContent(path:String):String {\n\t\treturn Fs.readFileSync(path, {encoding: \"utf8\"});\n\t}\n\n\tpublic static inline function saveContent(path:String, content:String):Void {\n\t\tFs.writeFileSync(path, content);\n\t}\n\n\tpublic static inline function getBytes(path:String):haxe.io.Bytes {\n\t\treturn Fs.readFileSync(path).hxToBytes();\n\t}\n\n\tpublic static inline function saveBytes(path:String, bytes:haxe.io.Bytes):Void {\n\t\tFs.writeFileSync(path, js.node.Buffer.hxFromBytes(bytes));\n\t}\n\n\tpublic static inline function update(path:String, binary:Bool = true):FileOutput {\n\t\treturn new FileOutput(Fs.openSync(path, ReadWrite));\n\t}\n\n\tstatic inline var copyBufLen = 64 * 1024;\n\tstatic var copyBuf = js.node.Buffer.alloc(copyBufLen);\n\n\tpublic static function copy(srcPath:String, dstPath:String):Void {\n\t\tvar src = Fs.openSync(srcPath, Read);\n\t\tvar stat = Fs.fstatSync(src);\n\t\tvar dst = Fs.openSync(dstPath, WriteCreate, stat.mode);\n\t\tvar bytesRead, pos = 0;\n\t\twhile ((bytesRead = Fs.readSync(src, copyBuf, 0, copyBufLen, pos)) > 0) {\n\t\t\tFs.writeSync(dst, copyBuf, 0, bytesRead);\n\t\t\tpos += bytesRead;\n\t\t}\n\t\tFs.closeSync(src);\n\t\tFs.closeSync(dst);\n\t}\n}\n","package;\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.ExprTools;\n\nusing StringTools;\n\nenum QBinop {\n    QOpEq;\n    QOpAssign;\n    QOpBoolAnd;\n    QOpBoolOr;\n    QOpNotEq;\n    QOpGt;\n    QOpLt;\n    QOpGte;\n    QOpLte;\n    QOpIn;\n    QOpUnsupported(v:String);\n}\n\nenum QConstant {\n\tQInt(v:String);\n\tQFloat(f:String);\n\tQString(s:String);\n\tQIdent(s:String);\n}\n\nenum QueryExpr {\n    QueryBinop(op:QBinop, e1:QueryExpr, e2:QueryExpr);\n    QueryConstant(c:QConstant);\n    QueryParenthesis(e:QueryExpr);\n    #if macro\n    QueryValue(e:Expr);\n    #else\n    QueryValue(v:Any);\n    #end\n    QueryCall(name:String, params:Array<QueryExpr>);\n    QueryArrayDecl(values:Array<QueryExpr>);\n    QueryUnsupported(v:String);\n}\n\nclass Query {\n    public static macro function query(expr:Expr) {\n        var qe = exprToQueryExpr(expr);\n        return generate(qe);\n    }\n\n    public static macro function field(name:String) {\n        return macro \"%\" + $v{name};\n    }\n\n    public static function joinQueryParts(parts:Array<QueryExpr>, op:QBinop) {\n        var query:QueryExpr = null;\n        if (parts.length > 1) {\n            var last = parts.pop();\n            var beforeLast = parts.pop();\n            var qp = QueryBinop(op, beforeLast, last);\n            while (parts.length > 0) {\n                var q = parts.pop();\n                qp = QueryBinop(op, q, qp);\n            }\n            query = qp;\n        } else {\n            query = parts[0];\n        }\n        return query;\n    }\n\n    #if macro\n\n    private static function generate(qe:QueryExpr):haxe.macro.Expr {\n        return switch (qe) {\n            case QueryValue(e): macro Query.QueryExpr.QueryValue($e);\n            case QueryBinop(op, e1, e2): macro Query.QueryExpr.QueryBinop($i{haxe.EnumTools.EnumValueTools.getName(op)}, $e{generate(e1)}, $e{generate(e2)});\n            case QueryParenthesis(e): macro Query.QueryExpr.QueryParenthesis($e{generate(e)});\n            case QueryConstant(c): macro Query.QueryExpr.QueryConstant($i{haxe.EnumTools.EnumValueTools.getName(c)}($a{\n                haxe.EnumTools.EnumValueTools.getParameters(c).map(p -> macro $v{p})\n            }));\n            case QueryCall(name, params): macro Query.QueryExpr.QueryCall($v{name}, $v{params});\n            case QueryArrayDecl(values): macro Query.QueryExpr.QueryArrayDecl($v{values});\n            case QueryUnsupported(v): macro Query.QueryExpr.QueryUnsupported($v{v});\n        }\n    }\n\n    private static function exprToQueryExpr(e:Expr):QueryExpr {\n        return switch (e.expr) {\n            case EBinop(op, e1, e2):\n                var qbinop = switch (op) {\n                    case OpEq:          QBinop.QOpEq;\n                    case OpAssign:      QBinop.QOpAssign;\n                    case OpBoolAnd:     QBinop.QOpBoolAnd;\n                    case OpBoolOr:      QBinop.QOpBoolOr;\n                    case OpNotEq:       QBinop.QOpNotEq;\n                    case OpGt:          QBinop.QOpGt;\n                    case OpLt:          QBinop.QOpLt;\n                    case OpGte:         QBinop.QOpGte;\n                    case OpLte:         QBinop.QOpLte;\n                    case OpIn:          QBinop.QOpIn;\n                    case _:  \n                        trace(\"unsupported\", op, op.getName());\n                        QBinop.QOpUnsupported(op.getName());\n                }\n                QueryBinop(qbinop, exprToQueryExpr(e1), exprToQueryExpr(e2));\n            case EParenthesis(e):\n                QueryParenthesis(exprToQueryExpr(e));\n            case EConst(CIdent(s)):\n                if (s.startsWith(\"$\")) {\n                    var varName = s.substr(1);\n                    if (varName == \"distinct\") {\n                        QueryCall(varName, null);\n                    } else {\n                        QueryConstant(QIdent(varName));\n                    }\n                } else {\n                    QueryValue(macro @:pos(e.pos) $i{s});\n                }\n            case EConst(CInt(s)):\n                QueryConstant(QInt(s));\n            case EConst(CString(s, _)):    \n                QueryConstant(QString(s));\n            case EField(e, field):\n                var s = ExprTools.toString(e);\n                if (s.startsWith(\"$\")) {\n                    var varName = s.substr(1) + \".\" + field;\n                    QueryConstant(QIdent(varName));\n                } else {\n                    switch (exprToQueryExpr(e)) {\n                        case QueryValue(e):  QueryValue(macro @:pos(e.pos) $e.$field);\n                        case qe:             qe;\n                    }\n                }\n            case EArray(e1, e2):\n                switch (exprToQueryExpr(e1)) {\n                    case QueryValue(e):  QueryValue(macro @:pos(e.pos) $e[$e2]);\n                    case qe:             qe;\n                }\n            //case EArrayDecl(values):    \n\n            case ECall(e, params):\n                switch (exprToQueryExpr(e)) {\n                    case QueryValue(e):  QueryValue(macro @:pos(e.pos) $e($a{params}));\n                    case QueryCall(name, _):\n                        var a = [];\n                        for (p in params) {\n                            a.push(exprToQueryExpr(p));\n                        }\n                        QueryCall(name, a);\n                    case qe:             qe;\n                }\n\n            case EArrayDecl(values):    \n                var exprs = [];\n                for (v in values) {\n                    exprs.push(exprToQueryExpr(v));\n                }\n                QueryArrayDecl(exprs);\n            case _:\n                trace(\"unsupported:\", e.expr);\n                return QueryUnsupported(e.expr.getName());\n        }\n    }\n    #end\n\n    public static function queryExprToSql(qe:QueryExpr, values:Array<Any> = null, fieldPrefix:String = null):String {\n        if (qe == null) {\n            return null;\n        }\n        var sb = new StringBuf();\n        queryExprPartToSql(qe, sb, values, fieldPrefix, false);\n        return sb.toString();\n    }\n\n    private static function queryExprPartToSql(qe:QueryExpr, sb:StringBuf, values:Array<Any>, fieldPrefix:String, isColumn:Bool) {\n        switch (qe) {\n            case QueryBinop(op, e1, e2):\n                var isColumn2 = (op == QOpEq) || (op == QOpAssign) || (op == QOpNotEq) || (op == QOpGt) || (op == QOpLt) || (op == QOpGte) || (op == QOpLte) || (op == QOpIn);\n                queryExprPartToSql(e1, sb, values, fieldPrefix, isColumn2);\n                switch (op) {\n                    case QOpEq:                 sb.add(\" = \");\n                    case QOpAssign:             sb.add(\" = \");\n                    case QOpBoolAnd:            sb.add(\" AND \");\n                    case QOpBoolOr:             sb.add(\" OR \");\n                    case QOpNotEq:              sb.add(\" <> \");\n                    case QOpGt:                 sb.add(\" > \");\n                    case QOpLt:                 sb.add(\" < \");\n                    case QOpGte:                sb.add(\" >= \");\n                    case QOpLte:                sb.add(\" <= \");\n                    case QOpIn:                 sb.add(\" IN \");\n                    case QOpUnsupported(v):    \n                        trace(\"WARNING: unsupported binary operation encountered:\", v);\n                    case _:    \n                }\n                queryExprPartToSql(e2, sb, values, fieldPrefix, isColumn);\n            case QueryParenthesis(e):\n                sb.add(\"(\");\n                queryExprPartToSql(e, sb, values, fieldPrefix, false);\n                sb.add(\")\");\n            case QueryConstant(QIdent(s)): \n                sb.add(buildColumn(s, fieldPrefix));\n            case QueryConstant(QInt(s)):    \n                if (values == null) {\n                    sb.add(s);\n                } else {\n                    values.push(s);\n                    sb.add(\"?\");\n                }\n            case QueryConstant(QString(s)):\n                if (values == null) {\n                    sb.add(\"\\\"\" + s + \"\\\"\");\n                } else {\n                    values.push(s);\n                    sb.add(\"?\");\n                }\n            case QueryValue(v):\n                if ((v is Array)) {\n                    sb.add(\"(\");\n                    var array:Array<Any> = cast v;\n                    var newArray:Array<String> = [];\n                    for (a in array) {\n                        if (a is String) {\n                            newArray.push('\"${Std.string(a)}\"');\n                        } else {\n                            newArray.push(Std.string(a));\n                        }\n                    }\n                    sb.add(newArray.join(\", \"));\n                    sb.add(\")\");\n                } else if (values == null) {\n                    if (Std.string(v).startsWith(\"%\")) { // lets add a special case for %field, this is so we can construct query in macros (where $ means something different)\n                        sb.add(buildColumn(Std.string(v).substring(1), fieldPrefix));\n                    } else {\n                        sb.add(v);\n                    }\n                } else {\n                    if (Std.string(v).startsWith(\"%\")) { // lets add a special case for %field, this is so we can construct query in macros (where $ means something different)\n                        sb.add(buildColumn(Std.string(v).substring(1), fieldPrefix));\n                    } else {\n                        if (isColumn) {\n                            sb.add(buildColumn(Std.string(v), fieldPrefix));\n                        } else {\n                            if ((v is Date)) {\n                                var date:Date = cast v;\n                                var dateString = date.toString().replace(\" \", \"T\") + \"Z\";\n                                values.push(dateString);\n                            } else {\n                                values.push(v);\n                            }\n                            sb.add(\"?\");\n                        }\n                    }\n                }\n            case QueryCall(name, params):\n                sb.add(name);\n                sb.add(\"(\");\n                var paramStrings = [];\n                for (p in params) {\n                    var temp = new StringBuf();\n                    queryExprPartToSql(p, temp, values, fieldPrefix, false);\n                    paramStrings.push(temp.toString());\n                }\n                sb.add(paramStrings.join(\", \"));\n                sb.add(\")\");\n            case QueryArrayDecl(arrayValues):    \n                sb.add(\"(\");\n                var paramStrings = [];\n                for (av in arrayValues) {\n                    var temp = new StringBuf();\n                    queryExprPartToSql(av, temp, values, fieldPrefix, false);\n                    paramStrings.push(temp.toString());\n                }\n                sb.add(paramStrings.join(\", \"));\n                sb.add(\")\");\n            case QueryUnsupported(v):\n                trace(\"WARNING: unsupported query expression encountered:\", v);\n            case _:    \n        }\n    }\n\n    private static function buildColumn(s:String, fieldPrefix:String):String {\n        var full = s;\n        if (fieldPrefix != null) {\n            full = fieldPrefix + \".\" + s;\n        }\n        var sb:StringBuf = new StringBuf();\n        if (full.contains(\".\")) {\n            var parts = full.split(\".\");\n            var field = parts.pop();\n            sb.add(\"`\");\n            sb.add(parts.join(\".\"));\n            sb.add(\"`.`\");\n            sb.add(field);\n            sb.add(\"`\");\n        } else {\n            sb.add(full);\n        }\n        return sb.toString();\n    }\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.StringIterator;\nimport haxe.iterators.StringKeyValueIterator;\n\n#if cpp\nusing cpp.NativeString;\n#end\n\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function(c) {\n\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static function postProcessUrlEncode(s:String):String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0, len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch (_charAt(s, i++)) {\n\t\t\t\tcase '+'.code:\n\t\t\t\t\tret.add('%20');\n\t\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\t\tvar c1 = _charAt(s, i++), c2 = _charAt(s, i++);\n\t\t\t\t\tswitch [c1, c2] {\n\t\t\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\t\t\tret.addChar('('.code);\n\t\t\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t\t}\n\t\t\t\tcase var chr:\n\t\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n\t#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\ttry\n\t\t\treturn java.net.URLDecoder.decode(s, \"UTF-8\")\n\t\tcatch (e:Dynamic)\n\t\t\tthrow e;\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"+\", \" \");\n\t\ts = lua.NativeStringTools.gsub(s, \"%%(%x%x)\", function(h) {\n\t\t\treturn lua.NativeStringTools.char(lua.Lua.tonumber(h, 16));\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \"\\r\\n\", \"\\n\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape(s:String, ?quotes:Bool):String {\n\t\tvar buf = new StringBuf();\n\t\tfor (code in #if neko iterator(s) #else new haxe.iterators.StringIteratorUnicode(s) #end) {\n\t\t\tswitch (code) {\n\t\t\t\tcase '&'.code:\n\t\t\t\t\tbuf.add(\"&amp;\");\n\t\t\t\tcase '<'.code:\n\t\t\t\t\tbuf.add(\"&lt;\");\n\t\t\t\tcase '>'.code:\n\t\t\t\t\tbuf.add(\"&gt;\");\n\t\t\t\tcase '\"'.code if (quotes):\n\t\t\t\t\tbuf.add(\"&quot;\");\n\t\t\t\tcase '\\''.code if (quotes):\n\t\t\t\t\tbuf.add(\"&#039;\");\n\t\t\t\tcase _:\n\t\t\t\t\tbuf.addChar(code);\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape(s:String):String {\n\t\treturn s.split(\"&gt;\")\n\t\t\t.join(\">\")\n\t\t\t.split(\"&lt;\")\n\t\t\t.join(\"<\")\n\t\t\t.split(\"&quot;\")\n\t\t\t.join('\"')\n\t\t\t.split(\"&#039;\")\n\t\t\t.join(\"'\")\n\t\t\t.split(\"&amp;\")\n\t\t\t.join(\"&\");\n\t}\n\n\t/**\n\t\tReturns `true` if `s` contains `value` and  `false` otherwise.\n\n\t\tWhen `value` is `null`, the result is unspecified.\n\t**/\n\tpublic static inline function contains(s:String, value:String):Bool {\n\t\t#if (js && js_es >= 6)\n\t\treturn (cast s).includes(value);\n\t\t#else\n\t\treturn s.indexOf(value) != -1;\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (java || python || (js && js_es >= 6)) inline #end function startsWith(s:String, start:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).startsWith(start);\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0, start.bytes, 0, start.length << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.startswith(s, start);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).startsWith(start);\n\t\t#elseif lua\n\t\treturn untyped __lua__(\"{0}:sub(1, #{1}) == {1}\", s, start);\n\t\t#else\n\t\treturn (s.length >= start.length && s.lastIndexOf(start, 0) == 0);\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (java || python || (js && js_es >= 6)) inline #end function endsWith(s:String, end:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).endsWith(end);\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.endswith(s, end);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).endsWith(end);\n\t\t#elseif lua\n\t\treturn end == \"\" || untyped __lua__(\"{0}:sub(-#{1}) == {1}\", s, end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn (slen >= elen && s.indexOf(end, (slen - elen)) == (slen - elen));\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace(s:String, pos:Int):Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length)\n\t\t\treturn false;\n\t\t#end\n\t\tvar c = s.charCodeAt(pos);\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic inline static function ltrim(s:String):String {\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, r)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0)\n\t\t\treturn s.substr(r, l - r);\n\t\telse\n\t\t\treturn s;\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic inline static function rtrim(s:String):String {\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, l - r - 1)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0) {\n\t\t\treturn s.substr(0, l - r);\n\t\t} else {\n\t\t\treturn s;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if java inline #end static function trim(s:String):String {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tl -= s.length;\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\tbuf.add(s);\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tbuf.add(s);\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s` except the last one. If `by` is also the empty String `\"\"`, `s`\n\t\tremains unchanged.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace(s:String, sub:String, by:String):String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn (cast s : java.NativeString).replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex(n:Int, ?digits:Int) {\n\t\t#if flash\n\t\tvar n:UInt = n;\n\t\tvar s:String = untyped n.toString(16);\n\t\ts = s.toUpperCase();\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\tdo {\n\t\t\ts = hexChars.charAt(n & 15) + s;\n\t\t\tn >>>= 4;\n\t\t} while (n > 0);\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif (digits != null)\n\t\t\twhile (s.length < digits)\n\t\t\t\ts = \"0\" + s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function fastCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn (index < s.length) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function unsafeCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn cast(_charAt(s, index), Int);\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an iterator of the char codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringIteratorUnicode`.\n\t**/\n\tpublic static inline function iterator(s:String):StringIterator {\n\t\treturn new StringIterator(s);\n\t}\n\n\t/**\n\t\tReturns an iterator of the char indexes and codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different of runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringKeyValueIteratorUnicode`.\n\t**/\n\tpublic static inline function keyValueIterator(s:String):StringKeyValueIterator {\n\t\treturn new StringKeyValueIterator(s);\n\t}\n\n\t/**\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t**/\n\t@:noUsing public static inline function isEof(c:Int):Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua || eval)\n\t\treturn c == null;\n\t\t#elseif (java || python)\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteUnixArg() is deprecated. Use haxe.SysTools.quoteUnixArg() instead.')\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\treturn inline haxe.SysTools.quoteUnixArg(argument);\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.winMetaCharacters is deprecated. Use haxe.SysTools.winMetaCharacters instead.')\n\tpublic static var winMetaCharacters:Array<Int> = cast haxe.SysTools.winMetaCharacters;\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```haxe\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteWinArg() is deprecated. Use haxe.SysTools.quoteWinArg() instead.')\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\treturn inline haxe.SysTools.quoteWinArg(argument, escapeMetaCharacters);\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):jvm.Char16\n\t\treturn (cast str : java.NativeString).charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\", \"url_encode\", 1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\", \"url_decode\", 1);\n\t#end\n\n\t#if utf16\n\tstatic inline var MIN_SURROGATE_CODE_POINT = 65536;\n\n\tstatic inline function utf16CodePointAt(s:String, index:Int):Int {\n\t\tvar c = StringTools.fastCodeAt(s, index);\n\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n\t\t\tc = ((c - 0xD7C0) << 10) | (StringTools.fastCodeAt(s, index + 1) & 0x3FF);\n\t\t}\n\t\treturn c;\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\t@:pure\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\n\t}\n\n\t@:pure\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\n\t\ttry\n\t\t\treturn o[cast field]\n\t\tcatch (e:Dynamic)\n\t\t\treturn null;\n\t}\n\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\n\t\to[cast field] = value;\n\t}\n\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\n\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\n\t}\n\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void untyped {\n\t\tvar tmp;\n\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\n\t\t\to[tmp](value)\n\t\telse\n\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\n\t}\n\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\n\t\treturn (cast func : js.lib.Function).apply(o, args);\n\t}\n\n\tpublic static function fields(o:Dynamic):Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\n\t\t\tjs.Syntax.code(\"for( var f in o ) {\");\n\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\n\t\t\t\ta.push(f);\n\t\t\tjs.Syntax.code(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isFunction(f:Dynamic):Bool {\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>(a:T, b:T):Int {\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static inline function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\n\t\treturn f1 == f2;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isObject(v:Dynamic):Bool {\n\t\tif (v == null)\n\t\t\treturn false;\n\t\tvar t = js.Syntax.typeof(v);\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue(v:Dynamic):Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\n\t\tif (!hasField(o, field))\n\t\t\treturn false;\n\t\tjs.Syntax.delete(o, field);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\n\t\tif (o == null)\n\t\t\treturn null;\n\t\tvar o2:Dynamic = {};\n\t\tfor (f in Reflect.fields(o))\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\n\t\treturn o2;\n\t}\n\n\tpublic static function makeVarArgs<T>(f:Array<Dynamic>->T):Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(js.Syntax.code(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n}\n","package haxe;\n\nimport js.Syntax;\nimport js.lib.Error;\nimport haxe.CallStack.StackItem;\n\n// https://v8.dev/docs/stack-trace-api\n@:native(\"Error\")\nprivate extern class V8Error {\n\tstatic var prepareStackTrace:(error:Error, structuredStackTrace:Array<V8CallSite>)->Any;\n}\n\ntypedef V8CallSite = {\n\tfunction getFunctionName():String;\n\tfunction getFileName():String;\n\tfunction getLineNumber():Int;\n\tfunction getColumnNumber():Int;\n}\n\n/**\n\tDo not use manually.\n**/\n@:dox(hide)\n@:noCompletion\n@:allow(haxe.Exception)\nclass NativeStackTrace {\n\tstatic var lastError:Error;\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:V8CallSite->V8CallSite;\n\n\t@:ifFeature('haxe.NativeStackTrace.exceptionStack')\n\tstatic public inline function saveStack(e:Error):Void {\n\t\tlastError = e;\n\t}\n\n\tstatic public function callStack():Any {\n\t\tvar e:Null<Error> = new Error('');\n\t\tvar stack = tryHaxeStack(e);\n\t\t//Internet Explorer provides call stack only if error was thrown\n\t\tif(Syntax.typeof(stack) == \"undefined\") {\n\t\t\ttry throw e catch(e:Exception) {}\n\t\t\tstack = e.stack;\n\t\t}\n\t\treturn normalize(stack, 2);\n\t}\n\n\tstatic public function exceptionStack():Any {\n\t\treturn normalize(tryHaxeStack(lastError));\n\t}\n\n\tstatic public function toHaxe(s:Null<Any>, skip:Int = 0):Array<StackItem> {\n\t\tif (s == null) {\n\t\t\treturn [];\n\t\t} else if (Syntax.typeof(s) == \"string\") {\n\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\tvar stack:Array<String> = (s:String).split(\"\\n\");\n\t\t\tif (stack[0] == \"Error\")\n\t\t\t\tstack.shift();\n\t\t\tvar m = [];\n\t\t\tfor (i in 0...stack.length) {\n\t\t\t\tif(skip > i) continue;\n\t\t\t\tvar line = stack[i];\n\t\t\t\tvar matched:Null<Array<String>> = Syntax.code(\"{0}.match(/^    at ([$A-Za-z0-9_. ]+) \\\\(([^)]+):([0-9]+):([0-9]+)\\\\)$/)\", line);\n\t\t\t\tif (matched != null) {\n\t\t\t\t\tvar path = matched[1].split(\".\");\n\t\t\t\t\tif(path[0] == \"$hxClasses\") {\n\t\t\t\t\t\tpath.shift();\n\t\t\t\t\t}\n\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\tvar file = matched[2];\n\t\t\t\t\tvar line = Std.parseInt(matched[3]);\n\t\t\t\t\tvar column = Std.parseInt(matched[4]);\n\t\t\t\t\tm.push(FilePos(meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"), meth), file, line,\n\t\t\t\t\t\tcolumn));\n\t\t\t\t} else {\n\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t} else if(skip > 0 && Syntax.code('Array.isArray({0})', s)) {\n\t\t\treturn (s:Array<StackItem>).slice(skip);\n\t\t} else {\n\t\t\treturn cast s;\n\t\t}\n\t}\n\n\tstatic function tryHaxeStack(e:Null<Error>):Any {\n\t\tif (e == null) {\n\t\t\treturn [];\n\t\t}\n\t\t// https://v8.dev/docs/stack-trace-api\n\t\tvar oldValue = V8Error.prepareStackTrace;\n\t\tV8Error.prepareStackTrace = prepareHxStackTrace;\n\t\tvar stack = e.stack;\n\t\tV8Error.prepareStackTrace = oldValue;\n\t\treturn stack;\n\t}\n\n\tstatic function prepareHxStackTrace(e:Error, callsites:Array<V8CallSite>):Any {\n\t\tvar stack = [];\n\t\tfor (site in callsites) {\n\t\t\tif (wrapCallSite != null)\n\t\t\t\tsite = wrapCallSite(site);\n\t\t\tvar method = null;\n\t\t\tvar fullName = site.getFunctionName();\n\t\t\tif (fullName != null) {\n\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tvar className = fullName.substring(0, idx);\n\t\t\t\t\tvar methodName = fullName.substring(idx + 1);\n\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t} else {\n\t\t\t\t\tmethod = Method(null, fullName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fileName = site.getFileName();\n\t\t\tvar fileAddr = fileName == null ? -1 : fileName.indexOf(\"file:\");\n\t\t\tif (wrapCallSite != null && fileAddr > 0)\n\t\t\t\tfileName = fileName.substring(fileAddr + 6);\n\t\t\tstack.push(FilePos(method, fileName, site.getLineNumber(), site.getColumnNumber()));\n\t\t}\n\t\treturn stack;\n\t}\n\n\tstatic function normalize(stack:Any, skipItems:Int = 0):Any {\n\t\tif(Syntax.code('Array.isArray({0})', stack) && skipItems > 0) {\n\t\t\treturn (stack:Array<StackItem>).slice(skipItems);\n\t\t} else if(Syntax.typeof(stack) == \"string\") {\n\t\t\tswitch (stack:String).substring(0, 6) {\n\t\t\t\tcase 'Error:' | 'Error\\n': skipItems += 1;\n\t\t\t\tcase _:\n\t\t\t}\n\t\t\treturn skipLines(stack, skipItems);\n\t\t} else {\n\t\t\t//nothing we can do\n\t\t\treturn stack;\n\t\t}\n\t}\n\n\tstatic function skipLines(stack:String, skip:Int, pos:Int = 0):String {\n\t\treturn if(skip > 0) {\n\t\t\tpos = stack.indexOf('\\n', pos);\n\t\t\treturn pos < 0 ? '' : skipLines(stack, --skip, pos + 1);\n\t\t} else {\n\t\t\treturn stack.substring(pos);\n\t\t}\n\t}\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport js.Syntax; // import it here so it's always available in the compiler\n\n@:dox(hide)\nclass Boot {\n\tstatic inline function isClass(o:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isInterface(o:Class<Dynamic>):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isInterface\", o.__isInterface__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\t@:pure static function getClass(o:Null<Dynamic>):Null<Dynamic> {\n\t\tif (o == null) {\n\t\t\treturn null;\n\t\t} else if (Std.isOfType(o, Array)) {\n\t\t\treturn Array;\n\t\t} else {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o, s:String) {\n\t\tuntyped {\n\t\t\tif (o == null)\n\t\t\t\treturn \"null\";\n\t\t\tif (s.length >= 5)\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = js.Syntax.typeof(o);\n\t\t\tif (t == \"function\" && (isClass(o) || isEnum(o)))\n\t\t\t\tt = \"object\";\n\t\t\tswitch (t) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\t#if !js_enums_as_arrays\n\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\n\t\t\t\t\t\tvar con = e.__constructs__[o._hx_index];\n\t\t\t\t\t\tvar n = con._hx_name;\n\t\t\t\t\t\tif (o.__params__) {\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\tvar params:Array<Any> = o.__params__();\n\t\t\t\t\t\t\tfor (i in 0...params.length)\n\t\t\t\t\t\t\t\tparams[i] = __string_rec(params[i], s);\n\t\t\t\t\t\t\treturn n + \"(\" + params.join(\",\") + \")\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t#end\n\t\t\t\t\tif (js.Syntax.instanceof(o, Array)) {\n\t\t\t\t\t\t#if js_enums_as_arrays\n\t\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\t\tif (o.length == 2)\n\t\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\t\tvar str = o[0] + \"(\";\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\tfor (i in 2...o.length) {\n\t\t\t\t\t\t\t\tif (i != 2)\n\t\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i], s);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstr += __string_rec(o[i], s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t\t});\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor (i in 0...o.length)\n\t\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\") + __string_rec(o[i], s);\n\t\t\t\t\t\tstr += \"]\";\n\t\t\t\t\t\treturn str;\n\t\t\t\t\t}\n\t\t\t\t\tvar tostr;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t// strange error on IE\n\t\t\t\t\t\treturn \"???\";\n\t\t\t\t\t}\n\t\t\t\t\tif (tostr != null && tostr != js.Syntax.code(\"Object.toString\") && js.Syntax.typeof(tostr) == \"function\") {\n\t\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\t\tif (s2 != \"[object Object]\")\n\t\t\t\t\t\t\treturn s2;\n\t\t\t\t\t}\n\t\t\t\t\tvar str = \"{\\n\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t\tvar k:String = null;\n\t\t\t\t\tjs.Syntax.code(\"for( {0} in {1} ) {\", k, o);\n\t\t\t\t\tif (hasp && !o.hasOwnProperty(k))\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\n\t\t\t\t\tif (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\")\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\n\t\t\t\t\tif (str.length != 2)\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \" + __string_rec(o[k], s);\n\t\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t\t\ts = s.substring(1);\n\t\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\t\treturn str;\n\t\t\t\tcase \"function\":\n\t\t\t\t\treturn \"<function>\";\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn o;\n\t\t\t\tdefault:\n\t\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\t@:pure private static function __interfLoop(cc:Dynamic, cl:Dynamic) {\n\t\tif (cc == null)\n\t\t\treturn false;\n\t\tif (cc == cl)\n\t\t\treturn true;\n\t\tvar intf:Dynamic = cc.__interfaces__;\n\t\tif (intf != null\n\t\t\t// ES6 classes inherit statics, so we want to avoid accessing inherited `__interfaces__`\n\t\t\t#if (js_es >= 6) && (cc.__super__ == null || cc.__super__.__interfaces__ != intf) #end\n\t\t) {\n\t\t\tfor (i in 0...intf.length) {\n\t\t\t\tvar i:Dynamic = intf[i];\n\t\t\t\tif (i == cl || __interfLoop(i, cl))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn __interfLoop(cc.__super__, cl);\n\t}\n\n\t@:pure private static function __instanceof(o:Dynamic, cl:Dynamic) {\n\t\tif (cl == null)\n\t\t\treturn false;\n\t\tswitch (cl) {\n\t\t\tcase Int:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\" && js.Syntax.strictEq(o | 0, o);\n\t\t\tcase Float:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\";\n\t\t\tcase Bool:\n\t\t\t\treturn js.Syntax.typeof(o) == \"boolean\";\n\t\t\tcase String:\n\t\t\t\treturn js.Syntax.typeof(o) == \"string\";\n\t\t\tcase Array:\n\t\t\t\treturn js.Syntax.instanceof(o, Array) #if js_enums_as_arrays && o.__enum__ == null #end;\n\t\t\tcase Dynamic:\n\t\t\t\treturn o != null;\n\t\t\tdefault:\n\t\t\t\tif (o != null) {\n\t\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\t\tif (js.Syntax.typeof(cl) == \"function\") {\n\t\t\t\t\t\tif (__downcastCheck(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (js.Syntax.typeof(cl) == \"object\" && __isNativeObj(cl)) {\n\t\t\t\t\t\tif (js.Syntax.instanceof(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// do not use isClass/isEnum here\n\t\t\t\tuntyped __feature__(\"Class.*\", if (cl == Class && o.__name__ != null) return true);\n\t\t\t\tuntyped __feature__(\"Enum.*\", if (cl == Enum && o.__ename__ != null) return true);\n\t\t\t\t#if js_enums_as_arrays\n\t\t\t\treturn o.__enum__ == cl;\n\t\t\t\t#else\n\t\t\t\treturn untyped __feature__(\n\t\t\t\t\t\"has_enum\",\n\t\t\t\t\tif (o.__enum__ != null) ($hxEnums[o.__enum__]) == cl else false,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\t#end\n\t\t}\n\t}\n\n\tstatic function __downcastCheck(o:Dynamic, cl:Class<Dynamic>):Bool {\n\t\treturn js.Syntax.instanceof(o, cl) || (isInterface(cl) && inline __implements(o, cl));\n\t}\n\n\tstatic function __implements(o:Dynamic, iface:Class<Dynamic>):Bool {\n\t\treturn __interfLoop(getClass(o), iface);\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o:Dynamic, t:Dynamic) {\n\t\tif (o == null || __instanceof(o, t))\n\t\t\treturn o;\n\t\telse\n\t\t\tthrow \"Cannot cast \" + Std.string(o) + \" to \" + Std.string(t);\n\t}\n\n\tstatic var __toStr:js.lib.Function;\n\n\tstatic function __init__() {\n\t\tBoot.__toStr = (cast {}).toString;\n\t}\n\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name:String = __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn js.Lib.global[cast name];\n\t}\n}\n","#if macro\nimport haxe.macro.Context;\nimport safety.macro.SafeAst;\n#end\n\nclass Safety {\n\n\t/**\n\t *  Returns `value` if it is not `null`. Otherwise returns `defaultValue`.\n\t */\n\tstatic public inline function or<T>(value:Null<T>, defaultValue:T):T {\n\t\treturn value == null ? defaultValue : @:nullSafety(Off) (value:T);\n\t}\n\n\t/**\n\t *  Returns `value` if it is not `null`. Otherwise calls `getter` and returns the result.\n\t */\n\tstatic public inline function orGet<T>(value:Null<T>, getter:Void->T):T {\n\t\treturn value == null ? getter() : @:nullSafety(Off) (value:T);\n\t}\n\n\t/**\n\t *  Returns `value` if it is not `null`. Otherwise throws an exception.\n\t *  @throws NullPointerException if `value` is `null`.\n\t */\n\tstatic public inline function sure<T>(value:Null<T>):T {\n\t\treturn value == null ? throw new safety.NullPointerException('Null pointer in .sure() call') : @:nullSafety(Off) (value:T);\n\t}\n\n\t/**\n\t *  Just returns `value` without any checks, but typed as not-nullable. Use at your own risk.\n\t */\n\tstatic public inline function unsafe<T>(value:Null<T>):T {\n\t\treturn @:nullSafety(Off) (value:T);\n\t}\n\n\t/**\n\t *  Returns `true` if value is not null and `callback(value)` is evaluated to `true`.\n\t *  Returns `false` otherwise.\n\t */\n\tstatic public inline function check<T>(value:Null<T>, callback:T->Bool):Bool {\n\t\treturn value != null && callback(@:nullSafety(Off) (value:T));\n\t}\n\n\t/**\n\t *  Applies `callback` to `value` and returns the result if `value` is not `null`.\n\t *  Returns `null` otherwise.\n\t */\n\tstatic public inline function let<T,V>(value:Null<T>, callback:T->V):Null<V> {\n\t\treturn value == null ? null : callback(@:nullSafety(Off) (value:T));\n\t}\n\n\t/**\n\t *  Passes `value` to `callback` if `value` is not null.\n\t */\n\tstatic public inline function run<T>(value:Null<T>, callback:T->Void) {\n\t\tif(value != null) callback(@:nullSafety(Off) (value:T));\n\t}\n\n\t/**\n\t *  Applies `callback` to `value` if `value` is not `null`.\n\t *  Returns `value`.\n\t */\n\tstatic public inline function apply<T>(value:Null<T>, callback:T->Void):Null<T> {\n\t\tswitch(value) {\n\t\t\tcase null:\n\t\t\tcase _: callback(@:nullSafety(Off) (value:T));\n\t\t}\n\t\treturn value;\n\t}\n\n#if macro\n\n\t/**\n\t *  Add this call to hxml to make public methods in specified `path` to throw `NullPointerException`\n\t *  if someone passes `null` as an argument value and that argument is not nullable.\n\t *  ```\n\t *  public function job(str:String) {...}\n\t *  <...>\n\t *  job(null); //throws safety.NullPointerException\n\t *  ```\n\t *  Example for hxml:\n\t *  ```\n\t *  --macro Safety.safeApi('my.pack', true)\n\t *  ```\n\t *  @param path - Dot-path of a package or a fully qualified type name.\n\t *  @param recursive - Should we also apply to all sub-packages of `path`?\n\t */\n\tstatic public function safeApi(path:String, recursive:Bool = true) {\n\t\tSafeAst.addSafeApi(path, recursive);\n\t}\n\n\t/**\n\t *  Add this call to hxml to enable safe navigation operator `!.`:\n\t *  ```\n\t *  var s:Null<String> = null;\n\t *  trace(s!.length); //null\n\t *  s = 'wow';\n\t *  trace(s!.length); //3\n\t *  ```\n\t *  Example for hxml:\n\t *  ```\n\t *  --macro Safety.safeNavigation('my.pack', true)\n\t *  ```\n\t *  @param path - Dot-path of a package or a fully qualified type name.\n\t *  @param recursive - Should we also apply to all sub-packages/sub-types of `path`?\n\t */\n\tstatic public function safeNavigation(path:String, recursive:Bool = true) {\n\t\tSafeAst.addSafeNavigation(path, recursive);\n\t}\n\n\t/**\n\t *  Add this call to hxml to enable auto-casting all array declarations to `SafeArray`:\n\t *  Example for hxml:\n\t *  ```\n\t *  --macro Safety.safeArray('my.pack', true)\n\t *  ```\n\t *  @param path - Dot-path of a package or a fully qualified type name.\n\t *  @param recursive - Should we also apply to all sub-packages/sub-types of `path`?\n\t */\n\tstatic public function safeArray(path:String, recursive:Bool = true) {\n\t\tSafeAst.addSafeArray(path, recursive);\n\t}\n\n\t/**\n\t * Check if compilation is running in display mode.\n\t */\n\t@:allow(safety)\n\tstatic function isDisplay():Bool {\n\t\t#if display\n\t\t\treturn true;\n\t\t#end\n\t\treturn Context.defined('display');\n\t}\n#end\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Syntax.code;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math {\n\tstatic var PI(default, null):Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null):Float;\n\t@:pure private static inline function get_NEGATIVE_INFINITY():Float {\n\t\treturn -code(\"Infinity\");\n\t}\n\n\tstatic var POSITIVE_INFINITY(get, null):Float;\n\t@:pure private static inline function get_POSITIVE_INFINITY():Float {\n\t\treturn code(\"Infinity\");\n\t}\n\n\tstatic var NaN(get, null):Float;\n\t@:pure private static inline function get_NaN():Float {\n\t\treturn code(\"NaN\");\n\t}\n\n\t@:pure static function abs(v:Float):Float;\n\t@:pure static function acos(v:Float):Float;\n\t@:pure static function asin(v:Float):Float;\n\t@:pure static function atan(v:Float):Float;\n\t@:pure static function atan2(y:Float, x:Float):Float;\n\t@:pure static function ceil(v:Float):Int;\n\t@:pure static function cos(v:Float):Float;\n\t@:pure static function exp(v:Float):Float;\n\t@:pure static function floor(v:Float):Int;\n\t@:pure static function log(v:Float):Float;\n\t@:pure static function max(a:Float, b:Float):Float;\n\t@:pure static function min(a:Float, b:Float):Float;\n\t@:pure static function pow(v:Float, exp:Float):Float;\n\tstatic function random():Float;\n\t@:pure static function round(v:Float):Int;\n\t@:pure static function sin(v:Float):Float;\n\t@:pure static function sqrt(v:Float):Float;\n\t@:pure static function tan(v:Float):Float;\n\n\t@:pure static inline function ffloor(v:Float):Float {\n\t\treturn floor(v);\n\t}\n\n\t@:pure static inline function fceil(v:Float):Float {\n\t\treturn ceil(v);\n\t}\n\n\t@:pure static inline function fround(v:Float):Float {\n\t\treturn round(v);\n\t}\n\n\t@:pure static inline function isFinite(f:Float):Bool {\n\t\treturn code(\"isFinite\")(f);\n\t}\n\n\t@:pure static inline function isNaN(f:Float):Bool {\n\t\treturn code(\"isNaN\")(f);\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package haxe;\n\nimport haxe.ds.ReadOnlyArray;\n\nclass SysTools {\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t**/\n\tpublic static final winMetaCharacters:ReadOnlyArray<Int> = [\n\t\t\" \".code, \"(\".code, \")\".code, \"%\".code, \"!\".code, \"^\".code, \"\\\"\".code, \"<\".code, \">\".code, \"&\".code, \"|\".code, \"\\n\".code, \"\\r\".code, \",\".code, \";\".code\n\t];\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t**/\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\t// Based on cpython's shlex.quote().\n\t\t// https://hg.python.org/cpython/file/a3f076d4f54f/Lib/shlex.py#l278\n\n\t\tif (argument == \"\")\n\t\t\treturn \"''\";\n\n\t\tif (!~/[^a-zA-Z0-9_@%+=:,.\\/-]/.match(argument))\n\t\t\treturn argument;\n\n\t\t// use single quotes, and put single quotes into double quotes\n\t\t// the string $'b is then quoted as '$'\"'\"'b'\n\t\treturn \"'\" + StringTools.replace(argument, \"'\", \"'\\\"'\\\"'\") + \"'\";\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```haxe\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t**/\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\t// If there is no space, tab, back-slash, or double-quotes, and it is not an empty string.\n\t\tif (!~/^(\\/)?[^ \\t\\/\\\\\"]+$/.match(argument)) {\n\t\t\t// Based on cpython's subprocess.list2cmdline().\n\t\t\t// https://hg.python.org/cpython/file/50741316dd3a/Lib/subprocess.py#l620\n\n\t\t\tvar result = new StringBuf();\n\t\t\tvar needquote = argument.indexOf(\" \") != -1 || argument.indexOf(\"\\t\") != -1 || argument == \"\" || argument.indexOf(\"/\") > 0;\n\n\t\t\tif (needquote)\n\t\t\t\tresult.add('\"');\n\n\t\t\tvar bs_buf = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tswitch (argument.charCodeAt(i)) {\n\t\t\t\t\tcase \"\\\\\".code:\n\t\t\t\t\t\t// Don't know if we need to double yet.\n\t\t\t\t\t\tbs_buf.add(\"\\\\\");\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t// Double backslashes.\n\t\t\t\t\t\tvar bs = bs_buf.toString();\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\tresult.add('\\\\\"');\n\t\t\t\t\tcase var c:\n\t\t\t\t\t\t// Normal char\n\t\t\t\t\t\tif (bs_buf.length > 0) {\n\t\t\t\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.addChar(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add remaining backslashes, if any.\n\t\t\tresult.add(bs_buf.toString());\n\n\t\t\tif (needquote) {\n\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\tresult.add('\"');\n\t\t\t}\n\n\t\t\targument = result.toString();\n\t\t}\n\n\t\tif (escapeMetaCharacters) {\n\t\t\tvar result = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tvar c = argument.charCodeAt(i);\n\t\t\t\tif (winMetaCharacters.indexOf(c) >= 0) {\n\t\t\t\t\tresult.addChar(\"^\".code);\n\t\t\t\t}\n\t\t\t\tresult.addChar(c);\n\t\t\t}\n\t\t\treturn result.toString();\n\t\t} else {\n\t\t\treturn argument;\n\t\t}\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator can be used to iterate across strings in a cross-platform\n\tway. It handles surrogate pairs on platforms that require it. On each\n\titeration, it returns the next character code.\n\n\tNote that this has different semantics than a standard for-loop over the\n\tString's length due to the fact that it deals with surrogate pairs.\n**/\nclass StringIteratorUnicode {\n\tvar offset = 0;\n\tvar s:String;\n\n\t/**\n\t\tCreate a new `StringIteratorUnicode` over String `s`.\n\t**/\n\tpublic inline function new(s:String) {\n\t\tthis.s = s;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\tpublic inline function hasNext() {\n\t\treturn offset < s.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t@:access(StringTools)\n\tpublic inline function next() {\n\t\t#if utf16\n\t\tvar c = StringTools.utf16CodePointAt(s, offset++);\n\t\tif (c >= StringTools.MIN_SURROGATE_CODE_POINT) {\n\t\t\toffset++;\n\t\t}\n\t\treturn c;\n\t\t#else\n\t\treturn StringTools.unsafeCodeAt(s, offset++);\n\t\t#end\n\t}\n\n\t/**\n\t\tConvenience function which can be used as a static extension.\n\t**/\n\tstatic public inline function unicodeIterator(s:String) {\n\t\treturn new StringIteratorUnicode(s);\n\t}\n}\n","import haxe.io.Bytes;\nimport haxe.io.Eof;\nimport haxe.io.Error;\nimport haxe.io.Output;\nimport js.Node.process;\nimport js.node.Buffer;\nimport js.node.ChildProcess;\nimport js.node.Fs;\n\n@:dce\n@:coreApi\nclass Sys {\n\tpublic static inline function print(v:Dynamic):Void {\n\t\tprocess.stdout.write(Std.string(v));\n\t}\n\n\tpublic static inline function println(v:Dynamic):Void {\n\t\tprocess.stdout.write(Std.string(v));\n\t\tprocess.stdout.write(\"\\n\");\n\t}\n\n\tpublic static inline function args():Array<String> {\n\t\treturn process.argv.slice(2);\n\t}\n\n\tpublic static inline function getEnv(s:String):String {\n\t\treturn process.env[s];\n\t}\n\n\tpublic static inline function putEnv(s:String, v:Null<String>):Void {\n\t\tif (v == null)\n\t\t\tprocess.env.remove(s);\n\t\telse\n\t\t\tprocess.env[s] = v;\n\t}\n\n\tpublic static function environment():Map<String, String> {\n\t\tvar m = new Map();\n\t\tfor (key in process.env.keys())\n\t\t\tm[key] = process.env[key];\n\t\treturn m;\n\t}\n\n\tpublic inline static function setTimeLocale(loc:String):Bool {\n\t\treturn false;\n\t}\n\n\tpublic inline static function getCwd():String {\n\t\treturn haxe.io.Path.addTrailingSlash(process.cwd());\n\t}\n\n\tpublic static inline function setCwd(s:String):Void {\n\t\tprocess.chdir(s);\n\t}\n\n\tpublic static function systemName():String {\n\t\treturn switch (process.platform) {\n\t\t\tcase \"darwin\": \"Mac\";\n\t\t\tcase \"freebsd\": \"BSD\";\n\t\t\tcase \"linux\": \"Linux\";\n\t\t\tcase \"win32\": \"Windows\";\n\t\t\tcase other: other; // throw?\n\t\t}\n\t}\n\n\tpublic static inline function command(cmd:String, ?args:Array<String>):Int {\n\t\tif (args == null)\n\t\t\treturn ChildProcess.spawnSync(cmd, {shell: true, stdio: \"inherit\"}).status;\n\t\telse\n\t\t\treturn ChildProcess.spawnSync(cmd, args, {stdio: \"inherit\"}).status;\n\t}\n\n\tpublic static inline function exit(code:Int):Void {\n\t\tprocess.exit(code);\n\t}\n\n\tpublic static inline function time():Float {\n\t\treturn (cast Date).now() / 1000;\n\t}\n\n\tpublic static inline function cpuTime():Float {\n\t\treturn process.uptime();\n\t}\n\n\t#if (haxe_ver >= 3.3)\n\t@:deprecated(\"Use programPath instead\")\n\t#end\n\tpublic static inline function executablePath():String {\n\t\treturn process.argv[0];\n\t}\n\n\t#if (haxe_ver >= 3.3)\n\tpublic static inline function programPath():String {\n\t\treturn js.Node.__filename;\n\t}\n\t#end\n\n\tpublic static function getChar(echo:Bool):Int {\n\t\tthrow \"Sys.getChar is currently not implemented on node.js\";\n\t}\n\n\tpublic static function sleep(seconds:Float):Void {\n\t\tvar end = (cast Date).now() + seconds * 1000;\n\t\twhile ((cast Date).now() <= end) {}\n\t}\n\n\tpublic static inline function stdin():haxe.io.Input {\n\t\treturn new FileInput(0);\n\t}\n\n\tpublic static inline function stdout():haxe.io.Output {\n\t\treturn new FileOutput(1);\n\t}\n\n\tpublic static inline function stderr():haxe.io.Output {\n\t\treturn new FileOutput(2);\n\t}\n}\n\nprivate class FileOutput extends haxe.io.Output {\n\tvar fd:Int;\n\n\tpublic function new(fd:Int) {\n\t\tthis.fd = fd;\n\t}\n\n\toverride public function writeByte(c:Int) {\n\t\tFs.writeSync(fd, String.fromCharCode(c));\n\t}\n\n\toverride public function writeBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\treturn Fs.writeSync(fd, Buffer.hxFromBytes(s), pos, len);\n\t}\n\n\toverride public function writeString(s:String #if (haxe_ver >= 4), ?encoding:haxe.io.Encoding #end) {\n\t\tFs.writeSync(fd, s);\n\t}\n\n\toverride public function flush() {\n\t\tFs.fsyncSync(fd);\n\t}\n\n\toverride public function close() {\n\t\tFs.closeSync(fd);\n\t}\n}\n\nprivate class FileInput extends haxe.io.Input {\n\tvar fd:Int;\n\n\tpublic function new(fd:Int) {\n\t\tthis.fd = fd;\n\t}\n\n\toverride public function readByte():Int {\n\t\tvar buf = Buffer.alloc(1);\n\t\ttry {\n\t\t\tFs.readSync(fd, buf, 0, 1, null);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"EOF\")\n\t\t\t\tthrow new Eof();\n\t\t\telse\n\t\t\t\tthrow Error.Custom(e);\n\t\t}\n\t\treturn buf[0];\n\t}\n\n\toverride public function readBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\tvar buf = Buffer.hxFromBytes(s);\n\t\ttry {\n\t\t\treturn Fs.readSync(fd, buf, pos, len, null);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"EOF\")\n\t\t\t\tthrow new Eof();\n\t\t\telse\n\t\t\t\tthrow Error.Custom(e);\n\t\t}\n\t}\n\n\toverride public function close():Void {\n\t\tFs.closeSync(fd);\n\t}\n}\n","/*\n * Copyright (C)2014-2020 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport haxe.Constraints.Function;\nimport haxe.extern.Rest;\nimport js.node.Module;\nimport js.node.Process;\nimport js.node.Timers.Immediate;\nimport js.node.Timers.Timeout;\nimport js.node.console.Console;\n#if haxe4\nimport js.Syntax.code;\n#end\n\n/**\n\tNode.js globals\n**/\n@:native(\"global\")\nextern class Node {\n\t/**\n\t\tThis variable may appear to be global but is not. See [__dirname](https://nodejs.org/api/modules.html#modules_dirname).\n\t**/\n\tstatic var __dirname(get, never):String;\n\n\tprivate static inline function get___dirname():String {\n\t\t#if haxe4\n\t\treturn code(\"__dirname\");\n\t\t#else\n\t\treturn untyped __js__(\"__dirname\");\n\t\t#end\n\t}\n\n\t/**\n\t\tThis variable may appear to be global but is not. See [__filename](https://nodejs.org/api/modules.html#modules_filename).\n\t**/\n\tstatic var __filename(get, never):String;\n\n\tprivate static inline function get___filename():String {\n\t\t#if haxe4\n\t\treturn code(\"__filename\");\n\t\t#else\n\t\treturn untyped __js__(\"__filename\");\n\t\t#end\n\t}\n\n\t/**\n\t\t`clearImmediate` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function clearImmediate(immediate:Immediate):Void;\n\n\t/**\n\t\t`clearInterval` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function clearInterval(timeout:Timeout):Void;\n\n\t/**\n\t\t`clearTimeout` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function clearTimeout(timeout:Timeout):Void;\n\n\t/**\n\t\tUsed to print to stdout and stderr. See the [console](https://nodejs.org/api/console.html) section.\n\t**/\n\tstatic var console(get, never):Console;\n\n\tprivate static inline function get_console():Console {\n\t\t#if haxe4\n\t\treturn code(\"console\");\n\t\t#else\n\t\treturn untyped __js__(\"console\");\n\t\t#end\n\t}\n\n\t/**\n\t\tThis variable may appear to be global but is not. See [exports](https://nodejs.org/api/modules.html#modules_exports).\n\t**/\n\tstatic var exports(get, never):Dynamic<Dynamic>;\n\n\tprivate static inline function get_exports():Dynamic<Dynamic> {\n\t\t#if haxe4\n\t\treturn code(\"exports\");\n\t\t#else\n\t\treturn untyped __js__(\"exports\");\n\t\t#end\n\t}\n\n\t/**\n\t\tIn browsers, the top-level scope is the global scope.\n\t\tThis means that within the browser `var something` will define a new global variable.\n\t\tIn Node.js this is different. The top-level scope is not the global scope; `var something` inside a Node.js module\n\t\twill be local to that module.\n\t**/\n\tstatic inline var global:Dynamic<Dynamic> = cast Node;\n\n\t/**\n\t\tThis variable may appear to be global but is not. See [module](https://nodejs.org/api/modules.html#modules_module).\n\t**/\n\tstatic var module(get, never):Module;\n\n\tprivate static inline function get_module():Module {\n\t\t#if haxe4\n\t\treturn code(\"module\");\n\t\t#else\n\t\treturn untyped __js__(\"module\");\n\t\t#end\n\t}\n\n\t/**\n\t\tThe process object. See the [process object](https://nodejs.org/api/process.html#process_process) section.\n\t**/\n\tstatic var process(get, never):Process;\n\n\tprivate static inline function get_process():Process {\n\t\t#if haxe4\n\t\treturn code(\"process\");\n\t\t#else\n\t\treturn untyped __js__(\"process\");\n\t\t#end\n\t}\n\n\t/**\n\t\tThe `queueMicrotask()` method queues a microtask to invoke `callback`.\n\t\tIf `callback` throws an exception, the [process object](https://nodejs.org/api/process.html#process_process) 'uncaughtException' event will be emitted.\n\n\t\tThe microtask queue is managed by V8 and may be used in a similar manner to the `Process.nextTick()` queue,\n\t\twhich is managed by Node.js.\n\t\tThe `Process.nextTick()` queue is always processed before the microtask queue within each turn of the Node.js event loop.\n\t**/\n\tstatic function queueMicrotask(callback:Void->Void):Void;\n\n\t/**\n\t\tThis variable may appear to be global but is not. See [require()](https://nodejs.org/api/modules.html#modules_require_id).\n\t**/\n\tstatic inline function require(module:String):Dynamic {\n\t\t#if haxe4\n\t\treturn code(\"require({0})\", module);\n\t\t#else\n\t\treturn untyped __js__(\"require({0})\", module);\n\t\t#end\n\t}\n\n\t/**\n\t\t`setImmediate` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function setImmediate(callback:Function, args:Rest<Dynamic>):Immediate;\n\n\t/**\n\t\t`setInterval` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function setInterval(callback:Function, delay:Int, args:Rest<Dynamic>):Timeout;\n\n\t/**\n\t\t`setTimeout` is described in the [timers](https://nodejs.org/api/timers.html) section.\n\t**/\n\tstatic function setTimeout(callback:Function, delay:Int, args:Rest<Dynamic>):Timeout;\n}\n\n@:deprecated typedef TimeoutObject = js.node.Timers.Timeout;\n@:deprecated typedef IntervalObject = js.node.Timers.Timeout;\n@:deprecated typedef ImmediateObject = js.node.Timers.Immediate;\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\nimport haxe.iterators.DynamicAccessIterator;\nimport haxe.iterators.DynamicAccessKeyValueIterator;\n\n/**\n\tDynamicAccess is an abstract type for working with anonymous structures\n\tthat are intended to hold collections of objects by the string key.\n\n\tFor example, these types of structures are often created from JSON.\n\n\tBasically, it wraps `Reflect` calls in a `Map`-like interface.\n**/\nabstract DynamicAccess<T>(Dynamic<T>) from Dynamic<T> to Dynamic<T> {\n\t/**\n\t\tCreates a new structure.\n\t**/\n\tpublic inline function new()\n\t\tthis = {};\n\n\t/**\n\t\tReturns a value by specified `key`.\n\n\t\tIf the structure does not contain the given key, `null` is returned.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\t@:arrayAccess\n\tpublic inline function get(key:String):Null<T> {\n\t\t#if js\n\t\treturn untyped this[key]; // we know it's an object, so we don't need a check\n\t\t#else\n\t\treturn Reflect.field(this, key);\n\t\t#end\n\t}\n\n\t/**\n\t\tSets a `value` for a specified `key`.\n\n\t\tIf the structure contains the given key, its value will be overwritten.\n\n\t\tReturns the given value.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\t@:arrayAccess\n\tpublic inline function set(key:String, value:T):T {\n\t\t#if js\n\t\treturn untyped this[key] = value;\n\t\t#else\n\t\tReflect.setField(this, key, value);\n\t\treturn value;\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the structure contains a specified `key`.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function exists(key:String):Bool\n\t\treturn Reflect.hasField(this, key);\n\n\t/**\n\t\tRemoves a specified `key` from the structure.\n\n\t\tReturns true, if `key` was present in structure, or false otherwise.\n\n\t\tIf `key` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function remove(key:String):Bool\n\t\treturn Reflect.deleteField(this, key);\n\n\t/**\n\t\tReturns an array of `keys` in a structure.\n\t**/\n\tpublic inline function keys():Array<String>\n\t\treturn Reflect.fields(this);\n\n\t/**\n\t\tReturns a shallow copy of the structure\n\t**/\n\tpublic inline function copy():DynamicAccess<T>\n\t\treturn Reflect.copy(this);\n\n\t/**\n\t\tReturns an Iterator over the values of this `DynamicAccess`.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function iterator():DynamicAccessIterator<T> {\n\t\treturn new DynamicAccessIterator(this);\n\t}\n\n\t/**\n\t\tReturns an Iterator over the keys and values of this `DynamicAccess`.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function keyValueIterator():DynamicAccessKeyValueIterator<T> {\n\t\treturn new DynamicAccessKeyValueIterator(this);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tAn Output is an abstract write. A specific output implementation will only\n\thave to override the `writeByte` and maybe the `write`, `flush` and `close`\n\tmethods. See `File.write` and `String.write` for two ways of creating an\n\tOutput.\n**/\nclass Output {\n\t/**\n\t\tEndianness (word byte order) used when writing numbers.\n\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\n\t**/\n\tpublic var bigEndian(default, set):Bool;\n\n\t#if java\n\tprivate var helper:java.nio.ByteBuffer;\n\t#end\n\n\t/**\n\t\tWrite one byte.\n\t**/\n\tpublic function writeByte(c:Int):Void {\n\t\tthrow new haxe.exceptions.NotImplementedException();\n\t}\n\n\t/**\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\n\n\t\tReturns the actual length of written data that can differ from `len`.\n\n\t\tSee `writeFullBytes` that tries to write the exact amount of specified bytes.\n\t**/\n\tpublic function writeBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\t#if !neko\n\t\tif (pos < 0 || len < 0 || pos + len > s.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\t#end\n\t\tvar b = #if js @:privateAccess s.b #else s.getData() #end;\n\t\tvar k = len;\n\t\twhile (k > 0) {\n\t\t\t#if neko\n\t\t\twriteByte(untyped __dollar__sget(b, pos));\n\t\t\t#elseif php\n\t\t\twriteByte(b.get(pos));\n\t\t\t#elseif cpp\n\t\t\twriteByte(untyped b[pos]);\n\t\t\t#elseif hl\n\t\t\twriteByte(b[pos]);\n\t\t\t#else\n\t\t\twriteByte(untyped b[pos]);\n\t\t\t#end\n\t\t\tpos++;\n\t\t\tk--;\n\t\t}\n\t\treturn len;\n\t}\n\n\t/**\n\t\tFlush any buffered data.\n\t**/\n\tpublic function flush() {}\n\n\t/**\n\t\tClose the output.\n\n\t\tBehaviour while writing after calling this method is unspecified.\n\t**/\n\tpublic function close() {}\n\n\tfunction set_bigEndian(b) {\n\t\tbigEndian = b;\n\t\treturn b;\n\t}\n\n\t/* ------------------ API ------------------ */\n\t/**\n\t\tWrite all bytes stored in `s`.\n\t**/\n\tpublic function write(s:Bytes):Void {\n\t\tvar l = s.length;\n\t\tvar p = 0;\n\t\twhile (l > 0) {\n\t\t\tvar k = writeBytes(s, p, l);\n\t\t\tif (k == 0)\n\t\t\t\tthrow Error.Blocked;\n\t\t\tp += k;\n\t\t\tl -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\n\n\t\tUnlike `writeBytes`, this method tries to write the exact `len` amount of bytes.\n\t**/\n\tpublic function writeFullBytes(s:Bytes, pos:Int, len:Int) {\n\t\twhile (len > 0) {\n\t\t\tvar k = writeBytes(s, pos, len);\n\t\t\tpos += k;\n\t\t\tlen -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 32-bit floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeFloat(x:Float) {\n\t\twriteInt32(FPHelper.floatToI32(x));\n\t}\n\n\t/**\n\t\tWrite `x` as 64-bit double-precision floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeDouble(x:Float) {\n\t\tvar i64 = FPHelper.doubleToI64(x);\n\t\tif (bigEndian) {\n\t\t\twriteInt32(i64.high);\n\t\t\twriteInt32(i64.low);\n\t\t} else {\n\t\t\twriteInt32(i64.low);\n\t\t\twriteInt32(i64.high);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 8-bit signed integer.\n\t**/\n\tpublic function writeInt8(x:Int) {\n\t\tif (x < -0x80 || x >= 0x80)\n\t\t\tthrow Error.Overflow;\n\t\twriteByte(x & 0xFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 16-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt16(x:Int) {\n\t\tif (x < -0x8000 || x >= 0x8000)\n\t\t\tthrow Error.Overflow;\n\t\twriteUInt16(x & 0xFFFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 16-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeUInt16(x:Int) {\n\t\tif (x < 0 || x >= 0x10000)\n\t\t\tthrow Error.Overflow;\n\t\tif (bigEndian) {\n\t\t\twriteByte(x >> 8);\n\t\t\twriteByte(x & 0xFF);\n\t\t} else {\n\t\t\twriteByte(x & 0xFF);\n\t\t\twriteByte(x >> 8);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 24-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt24(x:Int) {\n\t\tif (x < -0x800000 || x >= 0x800000)\n\t\t\tthrow Error.Overflow;\n\t\twriteUInt24(x & 0xFFFFFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 24-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeUInt24(x:Int) {\n\t\tif (x < 0 || x >= 0x1000000)\n\t\t\tthrow Error.Overflow;\n\t\tif (bigEndian) {\n\t\t\twriteByte(x >> 16);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte(x & 0xFF);\n\t\t} else {\n\t\t\twriteByte(x & 0xFF);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte(x >> 16);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 32-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt32(x:Int) {\n\t\tif (bigEndian) {\n\t\t\twriteByte(x >>> 24);\n\t\t\twriteByte((x >> 16) & 0xFF);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte(x & 0xFF);\n\t\t} else {\n\t\t\twriteByte(x & 0xFF);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte((x >> 16) & 0xFF);\n\t\t\twriteByte(x >>> 24);\n\t\t}\n\t}\n\n\t/**\n\t\tInform that we are about to write at least `nbytes` bytes.\n\n\t\tThe underlying implementation can allocate proper working space depending\n\t\ton this information, or simply ignore it. This is not a mandatory call\n\t\tbut a tip and is only used in some specific cases.\n\t**/\n\tpublic function prepare(nbytes:Int) {}\n\n\t/**\n\t\tRead all available data from `i` and write it.\n\n\t\tThe `bufsize` optional argument specifies the size of chunks by\n\t\twhich data is read and written. Its default value is 4096.\n\t**/\n\tpublic function writeInput(i:Input, ?bufsize:Int) {\n\t\tif (bufsize == null)\n\t\t\tbufsize = 4096;\n\t\tvar buf = Bytes.alloc(bufsize);\n\t\ttry {\n\t\t\twhile (true) {\n\t\t\t\tvar len = i.readBytes(buf, 0, bufsize);\n\t\t\t\tif (len == 0)\n\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\tvar p = 0;\n\t\t\t\twhile (len > 0) {\n\t\t\t\t\tvar k = writeBytes(buf, p, len);\n\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\t\tp += k;\n\t\t\t\t\tlen -= k;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e:Eof) {}\n\t}\n\n\t/**\n\t\tWrite `s` string.\n\t**/\n\tpublic function writeString(s:String, ?encoding:Encoding) {\n\t\t#if neko\n\t\tvar b = untyped new Bytes(s.length, s.__s);\n\t\t#else\n\t\tvar b = Bytes.ofString(s, encoding);\n\t\t#end\n\t\twriteFullBytes(b, 0, b.length);\n\t}\n\n\t#if neko\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\tOutput.prototype.bigEndian = false;\n\t\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\nusing haxe.Int64;\n\n/**\n\tA cross-platform signed 64-bit integer.\n\tInt64 instances can be created from two 32-bit words using `Int64.make()`.\n**/\n#if flash\n@:notNull\n#end\n@:transitive\nabstract Int64(__Int64) from __Int64 to __Int64 {\n\tprivate inline function new(x:__Int64)\n\t\tthis = x;\n\n\t/**\n\t\tMakes a copy of `this` Int64.\n\t**/\n\tpublic inline function copy():Int64\n\t\treturn make(high, low);\n\n\t/**\n\t\tConstruct an Int64 from two 32-bit words `high` and `low`.\n\t**/\n\tpublic static inline function make(high:Int32, low:Int32):Int64\n\t\treturn new Int64(new __Int64(high, low));\n\n\t/**\n\t\tReturns an Int64 with the value of the Int `x`.\n\t\t`x` is sign-extended to fill 64 bits.\n\t**/\n\t@:from public static inline function ofInt(x:Int):Int64\n\t\t#if lua return make((x : Int32) >> 31, (x : Int32)); #else return make(x >> 31, x); #end\n\n\t/**\n\t\tReturns an Int with the value of the Int64 `x`.\n\t\tThrows an exception  if `x` cannot be represented in 32 bits.\n\t**/\n\tpublic static inline function toInt(x:Int64):Int {\n\t\tif (x.high != x.low >> 31)\n\t\t\tthrow \"Overflow\";\n\n\t\treturn x.low;\n\t}\n\n\t@:deprecated('haxe.Int64.is() is deprecated. Use haxe.Int64.isInt64() instead')\n\tinline public static function is(val:Dynamic):Bool {\n\t\treturn isInt64(val);\n\t}\n\n\t/**\n\t\tReturns whether the value `val` is of type `haxe.Int64`\n\t**/\n\tinline public static function isInt64(val:Dynamic):Bool\n\t\treturn Std.isOfType(val, __Int64);\n\n\t/**\n\t\tReturns the high 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use high instead\")\n\tpublic static inline function getHigh(x:Int64):Int32\n\t\treturn x.high;\n\n\t/**\n\t\tReturns the low 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use low instead\")\n\tpublic static inline function getLow(x:Int64):Int32\n\t\treturn x.low;\n\n\t/**\n\t\tReturns `true` if `x` is less than zero.\n\t**/\n\tpublic static inline function isNeg(x:Int64):Bool\n\t\treturn x.high < 0;\n\n\t/**\n\t\tReturns `true` if `x` is exactly zero.\n\t**/\n\tpublic static inline function isZero(x:Int64):Bool\n\t\treturn x == 0;\n\n\t/**\n\t\tCompares `a` and `b` in signed mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function compare(a:Int64, b:Int64):Int {\n\t\tvar v = a.high - b.high;\n\t\tv = if (v != 0) v else Int32.ucompare(a.low, b.low);\n\t\treturn a.high < 0 ? (b.high < 0 ? v : -1) : (b.high >= 0 ? v : 1);\n\t}\n\n\t/**\n\t\tCompares `a` and `b` in unsigned mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function ucompare(a:Int64, b:Int64):Int {\n\t\tvar v = Int32.ucompare(a.high, b.high);\n\t\treturn if (v != 0) v else Int32.ucompare(a.low, b.low);\n\t}\n\n\t/**\n\t\tReturns a signed decimal `String` representation of `x`.\n\t**/\n\tpublic static inline function toStr(x:Int64):String\n\t\treturn x.toString();\n\n\tfunction toString():String {\n\t\tvar i:Int64 = cast this;\n\t\tif (i == 0)\n\t\t\treturn \"0\";\n\t\tvar str = \"\";\n\t\tvar neg = false;\n\t\tif (i.isNeg()) {\n\t\t\tneg = true;\n\t\t\t// i = -i; cannot negate here as --9223372036854775808 = -9223372036854775808\n\t\t}\n\t\tvar ten:Int64 = 10;\n\t\twhile (i != 0) {\n\t\t\tvar r = i.divMod(ten);\n\t\t\tif (r.modulus.isNeg()) {\n\t\t\t\tstr = Int64.neg(r.modulus).low + str;\n\t\t\t\ti = Int64.neg(r.quotient);\n\t\t\t} else {\n\t\t\t\tstr = r.modulus.low + str;\n\t\t\t\ti = r.quotient;\n\t\t\t}\n\t\t}\n\t\tif (neg)\n\t\t\tstr = \"-\" + str;\n\t\treturn str;\n\t}\n\n\tpublic static inline function parseString(sParam:String):Int64 {\n\t\treturn Int64Helper.parseString(sParam);\n\t}\n\n\tpublic static inline function fromFloat(f:Float):Int64 {\n\t\treturn Int64Helper.fromFloat(f);\n\t}\n\n\t/**\n\t\tPerforms signed integer division of `dividend` by `divisor`.\n\t\tReturns `{ quotient : Int64, modulus : Int64 }`.\n\t**/\n\tpublic static function divMod(dividend:Int64, divisor:Int64):{quotient:Int64, modulus:Int64} {\n\t\t// Handle special cases of 0 and 1\n\t\tif (divisor.high == 0) {\n\t\t\tswitch (divisor.low) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthrow \"divide by zero\";\n\t\t\t\tcase 1:\n\t\t\t\t\treturn {quotient: dividend.copy(), modulus: 0};\n\t\t\t}\n\t\t}\n\n\t\tvar divSign = dividend.isNeg() != divisor.isNeg();\n\n\t\tvar modulus = dividend.isNeg() ? -dividend : dividend.copy();\n\t\tdivisor = divisor.isNeg() ? -divisor : divisor;\n\n\t\tvar quotient:Int64 = 0;\n\t\tvar mask:Int64 = 1;\n\n\t\twhile (!divisor.isNeg()) {\n\t\t\tvar cmp = ucompare(divisor, modulus);\n\t\t\tdivisor <<= 1;\n\t\t\tmask <<= 1;\n\t\t\tif (cmp >= 0)\n\t\t\t\tbreak;\n\t\t}\n\n\t\twhile (mask != 0) {\n\t\t\tif (ucompare(modulus, divisor) >= 0) {\n\t\t\t\tquotient |= mask;\n\t\t\t\tmodulus -= divisor;\n\t\t\t}\n\t\t\tmask >>>= 1;\n\t\t\tdivisor >>>= 1;\n\t\t}\n\n\t\tif (divSign)\n\t\t\tquotient = -quotient;\n\t\tif (dividend.isNeg())\n\t\t\tmodulus = -modulus;\n\n\t\treturn {\n\t\t\tquotient: quotient,\n\t\t\tmodulus: modulus\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the negative of `x`.\n\t**/\n\t@:op(-A) public static inline function neg(x:Int64):Int64 {\n\t\tvar high = ~x.high;\n\t\tvar low = -x.low;\n\t\tif (low == 0)\n\t\t\thigh++;\n\t\treturn make(high, low);\n\t}\n\n\t@:op(++A) private inline function preIncrement():Int64 {\n\t\tthis = copy();\n\t\tthis.low++;\n\t\tif (this.low == 0)\n\t\t\tthis.high++;\n\t\treturn cast this;\n\t}\n\n\t@:op(A++) private inline function postIncrement():Int64 {\n\t\tvar ret = this;\n\t\tpreIncrement();\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement():Int64 {\n\t\tthis = copy();\n\t\tif (this.low == 0)\n\t\t\tthis.high--;\n\t\tthis.low--;\n\t\treturn cast this;\n\t}\n\n\t@:op(A--) private inline function postDecrement():Int64 {\n\t\tvar ret = this;\n\t\tpreDecrement();\n\t\treturn ret;\n\t}\n\n\t/**\n\t\tReturns the sum of `a` and `b`.\n\t**/\n\t@:op(A + B) public static inline function add(a:Int64, b:Int64):Int64 {\n\t\tvar high = a.high + b.high;\n\t\tvar low = a.low + b.low;\n\t\tif (Int32.ucompare(low, a.low) < 0)\n\t\t\thigh++;\n\t\treturn make(high, low);\n\t}\n\n\t@:op(A + B) @:commutative private static inline function addInt(a:Int64, b:Int):Int64\n\t\treturn add(a, b);\n\n\t/**\n\t\tReturns `a` minus `b`.\n\t**/\n\t@:op(A - B) public static inline function sub(a:Int64, b:Int64):Int64 {\n\t\tvar high = a.high - b.high;\n\t\tvar low = a.low - b.low;\n\t\tif (Int32.ucompare(a.low, b.low) < 0)\n\t\t\thigh--;\n\t\treturn make(high, low);\n\t}\n\n\t@:op(A - B) private static inline function subInt(a:Int64, b:Int):Int64\n\t\treturn sub(a, b);\n\n\t@:op(A - B) private static inline function intSub(a:Int, b:Int64):Int64\n\t\treturn sub(a, b);\n\n\t/**\n\t\tReturns the product of `a` and `b`.\n\t**/\n\t@:op(A * B)\n\tpublic static #if !lua inline #end function mul(a:Int64, b:Int64):Int64 {\n\t\tvar mask = 0xFFFF;\n\t\tvar al = a.low & mask, ah = a.low >>> 16;\n\t\tvar bl = b.low & mask, bh = b.low >>> 16;\n\t\tvar p00 = al * bl;\n\t\tvar p10 = ah * bl;\n\t\tvar p01 = al * bh;\n\t\tvar p11 = ah * bh;\n\t\tvar low = p00;\n\t\tvar high = p11 + (p01 >>> 16) + (p10 >>> 16);\n\t\tp01 <<= 16;\n\t\tlow += p01;\n\t\tif (Int32.ucompare(low, p01) < 0)\n\t\t\thigh++;\n\t\tp10 <<= 16;\n\t\tlow += p10;\n\t\tif (Int32.ucompare(low, p10) < 0)\n\t\t\thigh++;\n\t\thigh += a.low * b.high + a.high * b.low;\n\t\treturn make(high, low);\n\t}\n\n\t@:op(A * B) @:commutative private static inline function mulInt(a:Int64, b:Int):Int64\n\t\treturn mul(a, b);\n\n\t/**\n\t\tReturns the quotient of `a` divided by `b`.\n\t**/\n\t@:op(A / B) public static inline function div(a:Int64, b:Int64):Int64\n\t\treturn divMod(a, b).quotient;\n\n\t@:op(A / B) private static inline function divInt(a:Int64, b:Int):Int64\n\t\treturn div(a, b);\n\n\t@:op(A / B) private static inline function intDiv(a:Int, b:Int64):Int64\n\t\treturn div(a, b).toInt();\n\n\t/**\n\t\tReturns the modulus of `a` divided by `b`.\n\t**/\n\t@:op(A % B) public static inline function mod(a:Int64, b:Int64):Int64\n\t\treturn divMod(a, b).modulus;\n\n\t@:op(A % B) private static inline function modInt(a:Int64, b:Int):Int64\n\t\treturn mod(a, b).toInt();\n\n\t@:op(A % B) private static inline function intMod(a:Int, b:Int64):Int64\n\t\treturn mod(a, b).toInt();\n\n\t/**\n\t\tReturns `true` if `a` is equal to `b`.\n\t**/\n\t@:op(A == B) public static inline function eq(a:Int64, b:Int64):Bool\n\t\treturn a.high == b.high && a.low == b.low;\n\n\t@:op(A == B) @:commutative private static inline function eqInt(a:Int64, b:Int):Bool\n\t\treturn eq(a, b);\n\n\t/**\n\t\tReturns `true` if `a` is not equal to `b`.\n\t**/\n\t@:op(A != B) public static inline function neq(a:Int64, b:Int64):Bool\n\t\treturn a.high != b.high || a.low != b.low;\n\n\t@:op(A != B) @:commutative private static inline function neqInt(a:Int64, b:Int):Bool\n\t\treturn neq(a, b);\n\n\t@:op(A < B) private static inline function lt(a:Int64, b:Int64):Bool\n\t\treturn compare(a, b) < 0;\n\n\t@:op(A < B) private static inline function ltInt(a:Int64, b:Int):Bool\n\t\treturn lt(a, b);\n\n\t@:op(A < B) private static inline function intLt(a:Int, b:Int64):Bool\n\t\treturn lt(a, b);\n\n\t@:op(A <= B) private static inline function lte(a:Int64, b:Int64):Bool\n\t\treturn compare(a, b) <= 0;\n\n\t@:op(A <= B) private static inline function lteInt(a:Int64, b:Int):Bool\n\t\treturn lte(a, b);\n\n\t@:op(A <= B) private static inline function intLte(a:Int, b:Int64):Bool\n\t\treturn lte(a, b);\n\n\t@:op(A > B) private static inline function gt(a:Int64, b:Int64):Bool\n\t\treturn compare(a, b) > 0;\n\n\t@:op(A > B) private static inline function gtInt(a:Int64, b:Int):Bool\n\t\treturn gt(a, b);\n\n\t@:op(A > B) private static inline function intGt(a:Int, b:Int64):Bool\n\t\treturn gt(a, b);\n\n\t@:op(A >= B) private static inline function gte(a:Int64, b:Int64):Bool\n\t\treturn compare(a, b) >= 0;\n\n\t@:op(A >= B) private static inline function gteInt(a:Int64, b:Int):Bool\n\t\treturn gte(a, b);\n\n\t@:op(A >= B) private static inline function intGte(a:Int, b:Int64):Bool\n\t\treturn gte(a, b);\n\n\t/**\n\t\tReturns the bitwise NOT of `a`.\n\t**/\n\t@:op(~A) private static inline function complement(a:Int64):Int64\n\t\treturn make(~a.high, ~a.low);\n\n\t/**\n\t\tReturns the bitwise AND of `a` and `b`.\n\t**/\n\t@:op(A & B) public static inline function and(a:Int64, b:Int64):Int64\n\t\treturn make(a.high & b.high, a.low & b.low);\n\n\t/**\n\t\tReturns the bitwise OR of `a` and `b`.\n\t**/\n\t@:op(A | B) public static inline function or(a:Int64, b:Int64):Int64\n\t\treturn make(a.high | b.high, a.low | b.low);\n\n\t/**\n\t\tReturns the bitwise XOR of `a` and `b`.\n\t**/\n\t@:op(A ^ B) public static inline function xor(a:Int64, b:Int64):Int64\n\t\treturn make(a.high ^ b.high, a.low ^ b.low);\n\n\t/**\n\t\tReturns `a` left-shifted by `b` bits.\n\t**/\n\t@:op(A << B) public static inline function shl(a:Int64, b:Int):Int64 {\n\t\tb &= 63;\n\t\treturn if (b == 0) a.copy() else if (b < 32) make((a.high << b) | (a.low >>> (32 - b)), a.low << b) else make(a.low << (b - 32), 0);\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in signed mode.\n\t\t`a` is sign-extended.\n\t**/\n\t@:op(A >> B) public static inline function shr(a:Int64, b:Int):Int64 {\n\t\tb &= 63;\n\t\treturn if (b == 0) a.copy() else if (b < 32) make(a.high >> b, (a.high << (32 - b)) | (a.low >>> b)); else make(a.high >> 31, a.high >> (b - 32));\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in unsigned mode.\n\t\t`a` is padded with zeroes.\n\t**/\n\t@:op(A >>> B) public static inline function ushr(a:Int64, b:Int):Int64 {\n\t\tb &= 63;\n\t\treturn if (b == 0) a.copy() else if (b < 32) make(a.high >>> b, (a.high << (32 - b)) | (a.low >>> b)); else make(0, clamp(a.high >>> (b - 32)));\n\t}\n\n\tpublic var high(get, never):Int32;\n\n\tprivate inline function get_high()\n\t\treturn this.high;\n\n\tprivate inline function set_high(x)\n\t\treturn this.high = x;\n\n\tpublic var low(get, never):Int32;\n\n\tprivate inline function get_low()\n\t\treturn this.low;\n\n\tprivate inline function set_low(x)\n\t\treturn this.low = x;\n\t\t\n\t#if php\n\tstatic var extraBits:Int = php.Const.PHP_INT_SIZE * 8 - 32;\n\t#end\n\n\t#if !lua\n\tinline\n\t#end\n\tstatic function clamp(x:Int):Int {\n\t\t// force to-int conversion on platforms that require it\n\t\t#if js\n\t\treturn x | 0;\n\t\t#elseif php\n\t\t// we might be on 64-bit php, so sign extend from 32-bit\n\t\treturn (x << extraBits) >> extraBits;\n\t\t#elseif python\n\t\treturn (python.Syntax.code(\"{0} % {1}\", (x + python.Syntax.opPow(2, 31)), python.Syntax.opPow(2, 32)) : Int) - python.Syntax.opPow(2, 31);\n\t\t#elseif lua\n\t\treturn lua.Boot.clampInt32(x);\n\t\t#else\n\t\treturn x;\n\t\t#end\n\t}\n}\n\n/**\n\tThis typedef will fool `@:coreApi` into thinking that we are using\n\tthe same underlying type, even though it might be different on\n\tspecific platforms.\n**/\nprivate typedef __Int64 = ___Int64;\n\nprivate class ___Int64 {\n\tpublic var high:Int32;\n\tpublic var low:Int32;\n\n\tpublic inline function new(high, low) {\n\t\tthis.high = high;\n\t\tthis.low = low;\n\t}\n\n\t/**\n\t\tWe also define toString here to ensure we always get a pretty string\n\t\twhen tracing or calling `Std.string`. This tends not to happen when\n\t\t`toString` is only in the abstract.\n\t**/\n\tpublic function toString():String\n\t\treturn Int64.toStr(cast this);\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n@:coreApi\nclass Bytes {\n\tpublic var length(default, null):Int;\n\n\tvar b:js.lib.Uint8Array;\n\tvar data:js.lib.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.lib.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get(pos:Int):Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set(pos:Int, v:Int):Void {\n\t\tb[pos] = v;\n\t}\n\n\tpublic function blit(pos:Int, src:Bytes, srcpos:Int, len:Int):Void {\n\t\tif (pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\tif (srcpos == 0 && len == src.b.byteLength)\n\t\t\tb.set(src.b, pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos, srcpos + len), pos);\n\t}\n\n\tpublic function fill(pos:Int, len:Int, value:Int):Void {\n\t\tfor (i in 0...len)\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub(pos:Int, len:Int):Bytes {\n\t\tif (pos < 0 || len < 0 || pos + len > length)\n\t\t\tthrow Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos + b.byteOffset, pos + b.byteOffset + len));\n\t}\n\n\tpublic function compare(other:Bytes):Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor (i in 0...len)\n\t\t\tif (b1[i] != b2[i])\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData():Void {\n\t\tif (data == null)\n\t\t\tdata = new js.lib.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble(pos:Int):Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat(pos:Int):Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble(pos:Int, v:Float):Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat(pos:Int, v:Float):Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16(pos:Int):Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16(pos:Int, v:Int):Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32(pos:Int):Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32(pos:Int, v:Int):Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64(pos:Int):haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4), getInt32(pos));\n\t}\n\n\tpublic function setInt64(pos:Int, v:haxe.Int64):Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString(pos:Int, len:Int, ?encoding:Encoding):String {\n\t\tif (pos < 0 || len < 0 || pos + len > length)\n\t\t\tthrow Error.OutsideBounds;\n\t\tif (encoding == null)\n\t\t\tencoding = UTF8;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar i = pos;\n\t\tvar max = pos + len;\n\t\tswitch (encoding) {\n\t\t\tcase UTF8:\n\t\t\t\tvar debug = pos > 0;\n\t\t\t\t// utf8-decode and utf16-encode\n\t\t\t\twhile (i < max) {\n\t\t\t\t\tvar c = b[i++];\n\t\t\t\t\tif (c < 0x80) {\n\t\t\t\t\t\tif (c == 0)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\ts += String.fromCharCode(c);\n\t\t\t\t\t} else if (c < 0xE0)\n\t\t\t\t\t\ts += String.fromCharCode(((c & 0x3F) << 6) | (b[i++] & 0x7F));\n\t\t\t\t\telse if (c < 0xF0) {\n\t\t\t\t\t\tvar c2 = b[i++];\n\t\t\t\t\t\ts += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c2 = b[i++];\n\t\t\t\t\t\tvar c3 = b[i++];\n\t\t\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t\t\ts += String.fromCharCode(u);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase RawNative:\n\t\t\t\twhile (i < max) {\n\t\t\t\t\tvar c = b[i++] | (b[i++] << 8);\n\t\t\t\t\ts += String.fromCharCode(c);\n\t\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString():String {\n\t\treturn getString(0, length);\n\t}\n\n\tpublic function toHex():String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor (i in 0...str.length)\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor (i in 0...length) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData():BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static inline function alloc(length:Int):Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString(s:String, ?encoding:Encoding):Bytes {\n\t\tif (encoding == RawNative) {\n\t\t\tvar buf = new js.lib.Uint8Array(s.length << 1);\n\t\t\tfor (i in 0...s.length) {\n\t\t\t\tvar c:Int = StringTools.fastCodeAt(s, i);\n\t\t\t\tbuf[i << 1] = c & 0xFF;\n\t\t\t\tbuf[(i << 1) | 1] = c >> 8;\n\t\t\t}\n\t\t\treturn new Bytes(buf.buffer);\n\t\t}\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile (i < s.length) {\n\t\t\tvar c:Int = StringTools.fastCodeAt(s, i++);\n\t\t\t// surrogate pair\n\t\t\tif (0xD800 <= c && c <= 0xDBFF)\n\t\t\t\tc = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s, i++) & 0x3FF);\n\t\t\tif (c <= 0x7F)\n\t\t\t\ta.push(c);\n\t\t\telse if (c <= 0x7FF) {\n\t\t\t\ta.push(0xC0 | (c >> 6));\n\t\t\t\ta.push(0x80 | (c & 63));\n\t\t\t} else if (c <= 0xFFFF) {\n\t\t\t\ta.push(0xE0 | (c >> 12));\n\t\t\t\ta.push(0x80 | ((c >> 6) & 63));\n\t\t\t\ta.push(0x80 | (c & 63));\n\t\t\t} else {\n\t\t\t\ta.push(0xF0 | (c >> 18));\n\t\t\t\ta.push(0x80 | ((c >> 12) & 63));\n\t\t\t\ta.push(0x80 | ((c >> 6) & 63));\n\t\t\t\ta.push(0x80 | (c & 63));\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.lib.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData(b:BytesData):Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif (hb != null)\n\t\t\treturn hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic static function ofHex(s:String):Bytes {\n\t\tif ((s.length & 1) != 0)\n\t\t\tthrow \"Not a hex string (odd number of digits)\";\n\t\tvar a = new Array();\n\t\tvar i = 0;\n\t\tvar len = s.length >> 1;\n\t\twhile (i < len) {\n\t\t\tvar high = StringTools.fastCodeAt(s, i * 2);\n\t\t\tvar low = StringTools.fastCodeAt(s, i * 2 + 1);\n\t\t\thigh = (high & 0xF) + ((high & 0x40) >> 6) * 9;\n\t\t\tlow = (low & 0xF) + ((low & 0x40) >> 6) * 9;\n\t\t\ta.push(((high << 4) | low) & 0xFF);\n\t\t\ti++;\n\t\t}\n\n\t\treturn new Bytes(new js.lib.Uint8Array(a).buffer);\n\t}\n\n\tpublic inline static function fastGet(b:BytesData, pos:Int):Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n}\n","/*\n * Copyright (C)2014-2020 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.node.buffer;\n\nimport haxe.io.Bytes;\nimport haxe.io.UInt8Array;\n#if haxe4\nimport js.lib.ArrayBuffer;\nimport js.lib.ArrayBufferView;\nimport js.lib.Object;\nimport js.lib.Uint8Array;\n#else\nimport js.html.ArrayBuffer;\nimport js.html.ArrayBufferView;\nimport js.html.Uint8Array;\n#end\n\n/**\n\tThe `Buffer` class is a global type for dealing with binary data directly. It can be constructed in a variety of ways.\n\n\t@see https://nodejs.org/api/buffer.html#buffer_class_buffer\n**/\n@:jsRequire(\"buffer\", \"Buffer\")\nextern class Buffer extends Uint8Array {\n\t/**\n\t\tAllocates a new buffer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_new_buffer_array\n\t\t@see https://nodejs.org/api/buffer.html#buffer_new_buffer_arraybuffer_byteoffset_length\n\t\t@see https://nodejs.org/api/buffer.html#buffer_new_buffer_buffer\n\t\t@see https://nodejs.org/api/buffer.html#buffer_new_buffer_size\n\t\t@see https://nodejs.org/api/buffer.html#buffer_new_buffer_string_encoding\n\t**/\n\t@:deprecated\n\t@:overload(function(array:Array<Int>):Void {})\n\t@:overload(function(arrayBuffer:ArrayBuffer, ?byteOffset:Int, ?length:Int):Void {})\n\t@:overload(function(buffer:UInt8Array):Void {})\n\t@:overload(function(size:Int):Void {})\n\tfunction new(string:String, ?encoding:String):Void;\n\n\t/**\n\t\tAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the `Buffer` will be zero-filled.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding\n\t**/\n\t@:overload(function(size:Int, fill:String, ?encoding:String):Buffer {})\n\t@:overload(function(size:Int, fill:Uint8Array):Buffer {})\n\t@:overload(function(size:Int, fill:Int):Buffer {})\n\tstatic function alloc(size:Int):Buffer;\n\n\t/**\n\t\tAllocates a new `Buffer` of `size` bytes. If `size` is larger than\n\t\t`buffer.constants.MAX_LENGTH` or smaller than 0, `ERR_INVALID_OPT_VALUE`\n\t\tis thrown. A zero-length `Buffer` is created if `size` is 0.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size\n\t**/\n\tstatic function allocUnsafe(size:Int):Buffer;\n\n\t/**\n\t\tAllocates a new `Buffer` of `size` bytes. If `size` is larger than\n\t\t`buffer.constants.MAX_LENGTH` or smaller than 0, `ERR_INVALID_OPT_VALUE`\n\t\tis thrown. A zero-length `Buffer` is created if `size` is 0.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafeslow_size\n\t**/\n\tstatic function allocUnsafeSlow(size:Int):Buffer;\n\n\t/**\n\t\tReturns the actual byte length of a string. This is not the same as\n\t\t`String.prototype.length` since that returns the number of characters in\n\t\ta string.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_bytelength_string_encoding\n\t**/\n\t#if (haxe_ver >= 3.3)\n\t// it need extern SharedArrayBuffer for Node\n\t// @:overload(function(string:SharedArrayBuffer):Int {})\n\t@:overload(function(string:String, ?encoding:String):Int {})\n\t@:overload(function(string:ArrayBufferView):Int {})\n\t@:overload(function(string:ArrayBuffer):Int {})\n\tstatic function byteLength(string:Buffer):Int;\n\t#end\n\n\t#if (haxe_ver >= 3.3)\n\t@:deprecated(\"In haxe 3.3+, use Buffer.byteLength instead!\")\n\t#end\n\tinline static function _byteLength(string:String, ?encoding:String):Int\n\t\treturn untyped Buffer['byteLength'](string, encoding);\n\n\t/**\n\t\tCompares `buf1` to `buf2` typically for the purpose of sorting arrays of\n\t\t`Buffer` instances. This is equivalent to calling `buf1.compare(buf2)`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_compare_buf1_buf2\n\t**/\n\t@:native(\"compare\")\n\tstatic function compareBuffers(buf1:Uint8Array, buf2:Uint8Array):Int;\n\n\t/**\n\t\tReturns a new `Buffer` which is the result of concatenating all the `Buffer` instances in the `list` together.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_concat_list_totallength\n\t**/\n\tstatic function concat<T:Uint8Array>(list:Array<T>, ?totalLength:Int):Buffer;\n\n\t/**\n\t\tAllocates a new `Buffer`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_object_offsetorencoding_length\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding\n\t**/\n\t// it need extern SharedArrayBuffer for node\n\t// @:overload(function(arrayBuffer:SharedArrayBuffer, ?byteOffset:Int, ?length:Int):Buffer {})\n\t@:overload(function(array:Array<Int>):Buffer {})\n\t@:overload(function(arrayBuffer:ArrayBuffer, ?byteOffset:Int, ?length:Int):Buffer {})\n\t@:overload(function(buffer:Uint8Array):Buffer {})\n\t@:overload(function(object:{}, ?offset:Int, ?length:Int):Buffer {})\n\t@:overload(function(object:{}, ?encoding:String, ?length:Int):Buffer {})\n\tstatic function from(string:String, ?encoding:String):Buffer;\n\n\t/**\n\t\tReturns `true` if `obj` is a `Buffer`, `false` otherwise.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_isbuffer_obj\n\t**/\n\tstatic function isBuffer(obj:Dynamic):Bool;\n\n\t/**\n\t\tReturns `true` if `encoding` contains a supported character encoding, or `false` otherwise.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_method_buffer_isencoding_encoding\n\t**/\n\tstatic function isEncoding(encoding:String):Bool;\n\n\t/**\n\t\tThis is the size (in bytes) of pre-allocated internal `Buffer` instances used for pooling. This value may be modified.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_class_property_buffer_poolsize\n\t**/\n\tstatic var poolSize:Int;\n\n\t// buf[index]\n\t// var buffer:ArrayBuffer;\n\n\t/**\n\t\tWhen setting `byteOffset` in `Buffer.from(ArrayBuffer, byteOffset, length)`\n\t\tor sometimes when allocating a buffer smaller than `Buffer.poolSize` the\n\t\tbuffer doesn't start from a zero offset on the underlying `ArrayBuffer`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_byteoffset\n\t**/\n\tstatic var byteOffset(default, null):Int;\n\n\t/**\n\t\tCompares `buf` with `target` and returns a number indicating whether `buf` comes before, after,\n\t\tor is the same as `target` in sort order. Comparison is based on the actual sequence of bytes in each `Buffer`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend\n\t**/\n\t@:overload(function(target:Uint8Array):Int {})\n\tfunction compare(target:Uint8Array, ?targetStart:Int, ?targetEnd:Int, ?sourceStart:Int, ?sourceEnd:Int):Int;\n\n\t/**\n\t\tCopies data from a region of `buf` to a region in `target` even if the `target` memory region overlaps with `buf`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_copy_target_targetstart_sourcestart_sourceend\n\t**/\n\t@:overload(function(target:Uint8Array):Void {})\n\tfunction copy(target:Uint8Array, ?targetStart:Int, ?sourceStart:Int, ?sourceEnd:Int):Void;\n\n\t/**\n\t\tCreates and returns an iterator of `[index, byte]` pairs from the contents of `buf`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_entries\n\t**/\n\tfunction entries():js.node.Iterator<js.node.KeyValue<Int, Int>>;\n\n\t/**\n\t\tReturns `true` if both `buf` and `otherBuffer` have exactly the same bytes, `false` otherwise.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_equals_otherbuffer\n\t**/\n\tfunction equals(otherBuffer:Uint8Array):Bool;\n\n\t/**\n\t\tFills `buf` with the specified `value`. If the `offset` and `end` are not given, the entire `buf` will be filled:\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_fill_value_offset_end_encoding\n\t**/\n\t@:overload(function(value:Uint8Array, ?offset:Int, ?end:Int):Buffer {})\n\t@:overload(function(value:Int, ?offset:Int, ?end:Int):Buffer {})\n\tfunction fill(value:String, ?offset:Int, ?end:Int, ?encoding:String):Buffer;\n\n\t/**\n\t\tEquivalent to `buf.indexOf() !== -1`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_includes_value_byteoffset_encoding\n\t**/\n\t@:overload(function(value:Uint8Array, ?byteOffset:Int):Bool {})\n\t@:overload(function(value:Int, ?byteOffset:Int):Bool {})\n\tfunction includes(value:String, ?byteOffset:Int, ?encoding:String):Bool;\n\n\t/**\n\t\tIf `value` is:\n\n\t\t- a string, `value` is interpreted according to the character encoding in `encoding`.\n\t\t- a `Buffer` or Uint8Array, `value` will be used in its entirety. To compare a partial `Buffer`, use buf.slice().\n\t\t- a number, `value` will be interpreted as an unsigned 8-bit integer value between `0` and `255`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_indexof_value_byteoffset_encoding\n\t**/\n\t@:overload(function(value:Uint8Array, ?byteOffset:Int):Int {})\n\t@:overload(function(value:Int, ?byteOffset:Int):Int {})\n\tfunction indexOf(value:String, ?byteOffset:Int, ?encoding:String):Int;\n\n\t/**\n\t\tCreates and returns an iterator of `buf` keys (indices).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_keys\n\t**/\n\tfunction keys():js.node.Iterator<Int>;\n\n\t/**\n\t\tIdentical to `buf.indexOf()`, except the last occurrence of `value` is found\n\t\trather than the first occurrence.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_lastindexof_value_byteoffset_encoding\n\t**/\n\t@:overload(function(value:Uint8Array, ?byteOffset:Int):Int {})\n\t@:overload(function(value:Int, ?byteOffset:Int):Int {})\n\tfunction lastIndexOf(value:String, ?byteOffset:Int, ?encoding:String):Int;\n\n\t// var length(default, null):Int;\n\t// these functions need BigInt implementation.\n\t// /**\n\t// \tReads a signed 64-bit integer from `buf` at the specified `offset` with the specified endian format\n\t// \t(`readBigInt64BE()` returns big endian, `readBigInt64LE()` returns little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_readbigint64be_offset\n\t// **/\n\t// function readBigInt64BE(?offset:Int):BigInt;\n\t// /**\n\t// \tReads a signed 64-bit integer from `buf` at the specified `offset` with the specified endian format\n\t// \t(`readBigInt64BE()` returns big endian, `readBigInt64LE()` returns little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_readbigint64le_offset\n\t// **/\n\t// function readBigInt64LE(?offset:Int):BigInt;\n\t// /**\n\t// \tReads an unsigned 64-bit integer from `buf` at the specified `offset` with specified endian format\n\t// \t(`readBigUInt64BE()` returns big endian, `readBigUInt64LE()` returns little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_readbiguint64be_offset\n\t// **/\n\t// function readBigUInt64BE(?offset:Int):BigInt;\n\t// /**\n\t// \tReads an unsigned 64-bit integer from `buf` at the specified `offset` with specified endian format\n\t// \t(`readBigUInt64BE()` returns big endian, `readBigUInt64LE()` returns little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_readbiguint64le_offset\n\t// **/\n\t// function readBigUInt64LE(?offset:Int):BigInt;\n\n\t/**\n\t\tReads a 64-bit double from `buf` at the specified `offset` with specified endian format\n\t\t(`readDoubleBE()` returns big endian, `readDoubleLE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readdoublebe_offset\n\t**/\n\tfunction readDoubleBE(?offset:Int):Float;\n\n\t/**\n\t\tReads a 64-bit double from `buf` at the specified `offset` with specified endian format\n\t\t(`readDoubleBE()` returns big endian, `readDoubleLE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readdoublele_offset\n\t**/\n\tfunction readDoubleLE(?offset:Int):Float;\n\n\t/**\n\t\tReads a 32-bit float from `buf` at the specified `offset` with specified endian format\n\t\t(`readFloatBE()` returns big endian, `readFloatLE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readfloatbe_offset\n\t**/\n\tfunction readFloatBE(?offset:Int):Float;\n\n\t/**\n\t\tReads a 32-bit float from `buf` at the specified `offset` with specified endian format\n\t\t(`readFloatBE()` returns big endian, `readFloatLE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readfloatle_offset\n\t**/\n\tfunction readFloatLE(?offset:Int):Float;\n\n\t/**\n\t\tReads a signed 8-bit integer from `buf` at the specified `offset`.\n\n\t\thttps://nodejs.org/api/buffer.html#buffer_buf_readint8_offset\n\t**/\n\tfunction readInt8(?offset:Int):Int;\n\n\t/**\n\t\tReads a signed 16-bit integer from `buf` at the specified `offset` with the specified endian format\n\t\t(`readInt16BE()` returns big endian, `readInt16LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readint16be_offset\n\t**/\n\tfunction readInt16BE(?offset:Int):Int;\n\n\t/**\n\t\tReads a signed 16-bit integer from `buf` at the specified `offset` with the specified endian format\n\t\t(`readInt16BE()` returns big endian, `readInt16LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readint16le_offset\n\t**/\n\tfunction readInt16LE(?offset:Int):Int;\n\n\t/**\n\t\tReads a signed 32-bit integer from buf at the specified offset with the specified endian format\n\t\t(`readInt32BE()` returns big endian, `readInt32LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readint32be_offset\n\t**/\n\tfunction readInt32BE(?offset:Int):Int;\n\n\t/**\n\t\tReads a signed 32-bit integer from buf at the specified offset with the specified endian format\n\t\t(`readInt32BE()` returns big endian, `readInt32LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readint32be_offset\n\t**/\n\tfunction readInt32LE(?offset:Int):Int;\n\n\t/**\n\t\tReads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result\n\t\tas a two's complement signed value. Supports up to 48 bits of accuracy.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readintbe_offset_bytelength\n\t**/\n\tfunction readIntBE(offset:Int, byteLength:Int):Int;\n\n\t/**\n\t\tReads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result\n\t\tas a two's complement signed value. Supports up to 48 bits of accuracy.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readintle_offset_bytelength\n\t**/\n\tfunction readIntLE(offset:Int, byteLength:Int):Int;\n\n\t/**\n\t\tReads an unsigned 8-bit integer from `buf` at the specified `offset`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readuint8_offset\n\t**/\n\tfunction readUInt8(?offset:Int):Int;\n\n\t/**\n\t\tReads an unsigned 16-bit integer from `buf` at the specified `offset` with specified endian format\n\t\t`readUInt16BE()` returns big endian, `readUInt16LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readuint16be_offset\n\t**/\n\tfunction readUInt16BE(?offset:Int):Int;\n\n\t/**\n\t\tReads an unsigned 16-bit integer from `buf` at the specified `offset` with specified endian format\n\t\t(`readUInt16BE()` returns big endian, `readUInt16LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readuint16le_offset\n\t**/\n\tfunction readUInt16LE(?offset:Int):Int;\n\n\t/**\n\t\tReads an unsigned 32-bit integer from `buf` at the specified `offset` with specified endian format\n\t\t(`readUInt32BE()` returns big endian, `readUInt32LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readuint32be_offset\n\t**/\n\tfunction readUInt32BE(?offset:Int):Int;\n\n\t/**\n\t\tReads an unsigned 32-bit integer from `buf` at the specified `offset` with specified endian format\n\t\t(`readUInt32BE()` returns big endian, `readUInt32LE()` returns little endian).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_readuint32be_offset\n\t**/\n\tfunction readUInt32LE(?offset:Int):Int;\n\n\t/**\n\t\tReturns a new `Buffer` that references the same memory as the original,\n\t\tbut offset and cropped by the `start` and `end` indices.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_subarray_start_end\n\t**/\n\t#if haxe4\n\tfunction subarray(?start:Int, ?end:Int):Buffer;\n\t#else\n\toverride function subarray(start:Int, ?end:Int):Buffer;\n\t#end\n\n\t/**\n\t\tReturns a new `Buffer` that references the same memory as the original,\n\t\tbut offset and cropped by the `start` and `end` indices.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_slice_start_end\n\t**/\n\tfunction slice(?start:Int, ?end:Int):Buffer;\n\n\t/**\n\t\tInterprets `buf` as an array of unsigned 16-bit integers and swaps the\n\t\tbyte order in-place. Throws `ERR_INVALID_BUFFER_SIZE` if `buf.length`\n\t\tis not a multiple of 2.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_swap16\n\t**/\n\tfunction swap16():Buffer;\n\n\t/**\n\t\tInterprets `buf` as an array of unsigned 32-bit integers and swaps the\n\t\tbyte order in-place. Throws `ERR_INVALID_BUFFER_SIZE` if `buf.length`\n\t\tis not a multiple of 4.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_swap32\n\t**/\n\tfunction swap32():Buffer;\n\n\t/**\n\t\tInterprets `buf` as an array of 64-bit numbers and swaps byte order in-place.\n\t\tThrows `ERR_INVALID_BUFFER_SIZE` if `buf.length` is not a multiple of 8.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_swap64\n\t**/\n\tfunction swap64():Buffer;\n\n\t/**\n\t\tReturns a JSON representation of `buf`. `JSON.stringify()` implicitly calls\n\t\tthis function when stringifying a `Buffer` instance.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_tojson\n\t**/\n\tfunction toJSON():Dynamic;\n\n\t/**\n\t\tDecodes `buf` to a string according to the specified character encoding in `encoding`.\n\t\t`start` and `end` may be passed to decode only a subset of `buf`.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_tostring_encoding_start_end\n\t**/\n\t@:overload(function(?encoding:String, ?start:Int, ?end:Int):String {})\n\tfunction toString():String;\n\n\t/**\n\t\tCreates and returns an iterator for `buf` values (bytes). This function is called automatically\n\t\twhen a `Buffer` is used in a `for..of` statement.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_values\n\t**/\n\tfunction values():js.node.Iterator<Int>;\n\n\t/**\n\t\tWrites `string` to `buf` at `offset` according to the character encoding in `encoding`.\n\t\tThe `length` parameter is the number of bytes to write.\n\t\tIf `buf` did not contain enough space to fit the entire `string`, only part of string will be written.\n\t\tHowever, partially encoded characters will not be written.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_write_string_offset_length_encoding\n\t**/\n\tfunction write(string:String, ?offset:Int, ?length:Int, ?encoding:String):Int;\n\n\t// these functions need BigInt Implementation.\n\t// /**\n\t// \tWrites `value` to `buf` at the specified `offset` with specified endian format (`writeBigInt64BE()` writes big endian, `writeBigInt64LE()` writes little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_writebigint64be_value_offset\n\t// **/\n\t// function writeBigInt64BE(value:Int, ?offset:Int):BigInt;\n\t// /**\n\t// \tWrites `value` to `buf` at the specified `offset` with specified endian format (`writeBigInt64BE()` writes big endian, `writeBigInt64LE()` writes little endian).\n\t// \t@see https://nodejs.org/api/buffer.html#buffer_buf_writebigint64le_value_offset\n\t// **/\n\t// function writeBigInt64LE(value:Int, ?offset:Int):BigInt;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeDoubleBE()` writes big endian, `writeDoubleLE()` writes little endian).\n\t\t`value` should be a valid 64-bit double. Behavior is undefined when `value` is anything other than a 64-bit double.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writedoublebe_value_offset\n\t**/\n\tfunction writeDoubleBE(value:Float, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeDoubleBE()` writes big endian, `writeDoubleLE()` writes little endian).\n\t\t`value` should be a valid 64-bit double. Behavior is undefined when `value` is anything other than a 64-bit double.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writedoublele_value_offset\n\t**/\n\tfunction writeDoubleLE(value:Float, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeFloatBE()` writes big endian, `writeFloatLE()` writes little endian).\n\t\t`value` should be a valid 32-bit float. Behavior is undefined when `value` is anything other than a 32-bit float.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writefloatbe_value_offset\n\t**/\n\tfunction writeFloatBE(value:Float, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeFloatBE()` writes big endian, `writeFloatLE()` writes little endian).\n\t\t`value` should be a valid 32-bit float. Behavior is undefined when `value` is anything other than a 32-bit float.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writefloatle_value_offset\n\t**/\n\tfunction writeFloatLE(value:Float, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset`. `value` should be a valid signed 8-bit integer.\n\t\tBehavior is undefined when `value` is anything other than a signed 8-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeint8_value_offset\n\t**/\n\tfunction writeInt8(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeInt16BE()` writes big endian, `writeInt16LE()` writes little endian).\n\t\t`value` should be a valid signed 16-bit integer.\n\t\tBehavior is undefined when value is anything other than a signed 16-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeint16be_value_offset\n\t**/\n\tfunction writeInt16BE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeInt16BE()` writes big endian, `writeInt16LE()` writes little endian).\n\t\t`value` should be a valid signed 16-bit integer.\n\t\tBehavior is undefined when value is anything other than a signed 16-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeint16le_value_offset\n\t**/\n\tfunction writeInt16LE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeInt32BE()` writes big endian, `writeInt32LE()` writes little endian).\n\t\t`value` should be a valid signed 32-bit integer.\n\t\tBehavior is undefined when `value` is anything other than a signed 32-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeint32be_value_offset\n\t**/\n\tfunction writeInt32BE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeInt32BE()` writes big endian, `writeInt32LE()` writes little endian).\n\t\t`value` should be a valid signed 32-bit integer.\n\t\tBehavior is undefined when `value` is anything other than a signed 32-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeint32le_value_offset\n\t**/\n\tfunction writeInt32LE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `byteLength` bytes of `value` to `buf` at the specified `offset`.\n\t\tSupports up to 48 bits of accuracy. Behavior is undefined when `value` is anything other than a signed integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeintbe_value_offset_bytelength\n\t**/\n\tfunction writeIntBE(value:Int, offset:Int, byteLength:Int):Int;\n\n\t/**\n\t\tWrites `byteLength` bytes of `value` to `buf` at the specified `offset`.\n\t\tSupports up to 48 bits of accuracy. Behavior is undefined when `value` is anything other than a signed integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeintle_value_offset_bytelength\n\t**/\n\tfunction writeIntLE(value:Int, offset:Int, byteLength:Int):Int;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset`. `value` should be a valid unsigned 8-bit integer.\n\t\tBehavior is undefined when `value` is anything other than an unsigned 8-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeuint8_value_offset\n\t**/\n\tfunction writeUInt8(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeUInt16BE()` writes big endian, `writeUInt16LE()` writes little endian).\n\t\t`value` should be a valid unsigned 16-bit integer.\n\t\tBehavior is undefined when `value` is anything other than an unsigned 16-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeuint16be_value_offset\n\t**/\n\tfunction writeUInt16BE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeUInt16BE()` writes big endian, `writeUInt16LE()` writes little endian).\n\t\t`value` should be a valid unsigned 16-bit integer.\n\t\tBehavior is undefined when `value` is anything other than an unsigned 16-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeuint16le_value_offset\n\t**/\n\tfunction writeUInt16LE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeUInt32BE()` writes big endian, `writeUInt32LE()` writes little endian).\n\t\t`value` should be a valid unsigned 32-bit integer.\n\t\tBehavior is undefined when `value` is anything other than an unsigned 32-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeuint32be_value_offset\n\t**/\n\tfunction writeUInt32BE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tWrites `value` to `buf` at the specified `offset` with specified endian format\n\t\t(`writeUInt32BE()` writes big endian, `writeUInt32LE()` writes little endian).\n\t\t`value` should be a valid unsigned 32-bit integer.\n\t\tBehavior is undefined when `value` is anything other than an unsigned 32-bit integer.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buf_writeuint32le_value_offset\n\t**/\n\tfunction writeUInt32LE(value:Int, ?offset:Int):Void;\n\n\t/**\n\t\tDefault: `50`\n\n\t\tReturns the maximum number of bytes that will be returned when `buf.inspect()` is called.\n\t\tThis can be overridden by user modules.\n\t\tSee `util.inspect()` for more details on `buf.inspect()` behavior.\n\n\t\tThis is a property on the `buffer` module returned by `require('buffer')`, not on the `Buffer` global or a `Buffer` instance.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_inspect_max_bytes\n\t**/\n\tstatic var INSPECT_MAX_BYTES(get, set):Int;\n\n\tprivate static inline function get_INSPECT_MAX_BYTES():Int {\n\t\treturn BufferModule.INSPECT_MAX_BYTES;\n\t}\n\tprivate static inline function set_INSPECT_MAX_BYTES(bytes:Int):Int {\n\t\treturn BufferModule.INSPECT_MAX_BYTES = bytes;\n\t}\n\n\t/**\n\t\tAn alias for `buffer.constants.MAX_LENGTH`.\n\n\t\tThis is a property on the `buffer` module returned by `require('buffer')`, not on the `Buffer` global or a `Buffer` instance.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_kmaxlength\n\t**/\n\tstatic var kMaxLength(get, never):Int;\n\n\tprivate static inline function get_kMaxLength():Int {\n\t\treturn BufferModule.kMaxLength;\n\t}\n\n\t/**\n\t\tRe-encodes the given `Buffer` or `Uint8Array` instance from one character encoding to another.\n\t\tReturns a new `Buffer` instance.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_transcode_source_fromenc_toenc\n\t**/\n\tstatic inline function transcode(source:Uint8Array, fromEnc:String, toEnc:String):Buffer {\n\t\treturn BufferModule.transcode(source, fromEnc, toEnc);\n\t};\n\n\t/**\n\t\t`buffer.constants` is a property on the `buffer` module returned by `require('buffer')`,\n\t\tnot on the `Buffer` global or a `Buffer` instance.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_constants\n\t**/\n\tstatic var constants(default, never):BufferConstants;\n\n\tprivate static inline function get_constants():BufferConstants {\n\t\treturn BufferModule.constants;\n\t}\n\n\t/**\n\t\tCreate `haxe.io.Bytes` object that uses the same underlying data storage as `this` buffer.\n\t\tAny modifications done using the returned object will be reflected in the `this` buffer.\n\t**/\n\tinline function hxToBytes():Bytes {\n\t\treturn Helper.bytesOfBuffer(this);\n\t}\n\n\t/**\n\t\tCreate `Buffer` object from `haxe.io.Bytes` using the same underlying data storage.\n\t\tAny modifications done using the returned object will be reflected in given `haxe.io.Bytes` object.\n\t**/\n\tstatic inline function hxFromBytes(b:Bytes):Buffer {\n\t\tvar data = @:privateAccess b.b;\n\t\treturn Buffer.from(data.buffer, data.byteOffset, b.length);\n\t}\n}\n\n@:dce\nprivate class Helper {\n\tpublic static function bytesOfBuffer(b:Buffer):haxe.io.Bytes untyped {\n\t\tvar o = Object.create(haxe.io.Bytes.prototype);\n\t\t// the following is basically a haxe.io.Bytes constructor,\n\t\t// but using given buffer instead of creating new Uint8Array\n\t\to.length = b.byteLength;\n\t\to.b = b;\n\t\tb.bufferValue = b;\n\t\tb.hxBytes = o;\n\t\tb.bytes = b;\n\t\treturn o;\n\t}\n}\n\n@:jsRequire(\"buffer\")\nprivate extern class BufferModule {\n\tstatic var INSPECT_MAX_BYTES:Int;\n\tstatic var kMaxLength(default, never):Int;\n\tstatic function transcode(source:Uint8Array, fromEnc:String, toEnc:String):Buffer;\n\tstatic var constants(default, never):BufferConstants;\n}\n\ntypedef BufferConstants = {\n\t/**\n\t\tOn 32-bit architectures, this value is `(2^30)-1` (`~1GB`).\n\t\tOn 64-bit architectures, this value is `(2^31)-1` (`~2GB`).\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_constants_max_length\n\t**/\n\tvar MAX_LENGTH(default, never):Int;\n\n\t/**\n\t\tRepresents the largest `length` that a `string` primitive can have, counted\n\t\tin UTF-16 code units.\n\n\t\t@see https://nodejs.org/api/buffer.html#buffer_buffer_constants_max_string_length\n\t**/\n\tvar MAX_STRING_LENGTH(default, never):Int;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tAn Input is an abstract reader. See other classes in the `haxe.io` package\n\tfor several possible implementations.\n\n\tAll functions which read data throw `Eof` when the end of the stream\n\tis reached.\n**/\nclass Input {\n\t/**\n\t\tEndianness (word byte order) used when reading numbers.\n\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\n\t**/\n\tpublic var bigEndian(default, set):Bool;\n\n\t#if java\n\tprivate var helper:java.nio.ByteBuffer;\n\t#end\n\n\t/**\n\t\tRead and return one byte.\n\t**/\n\tpublic function readByte():Int {\n\t\t#if cpp\n\t\tthrow new haxe.exceptions.NotImplementedException();\n\t\t#else\n\t\treturn throw new haxe.exceptions.NotImplementedException();\n\t\t#end\n\t}\n\n\t/**\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\n\n\t\tReturns the actual length of read data that can be smaller than `len`.\n\n\t\tSee `readFullBytes` that tries to read the exact amount of specified bytes.\n\t**/\n\tpublic function readBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\tvar k = len;\n\t\tvar b = #if (js || hl) @:privateAccess s.b #else s.getData() #end;\n\t\tif (pos < 0 || len < 0 || pos + len > s.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\ttry {\n\t\t\twhile (k > 0) {\n\t\t\t\t#if neko\n\t\t\t\tuntyped __dollar__sset(b, pos, readByte());\n\t\t\t\t#elseif php\n\t\t\t\tb.set(pos, readByte());\n\t\t\t\t#elseif cpp\n\t\t\t\tb[pos] = untyped readByte();\n\t\t\t\t#else\n\t\t\t\tb[pos] = cast readByte();\n\t\t\t\t#end\n\t\t\t\tpos++;\n\t\t\t\tk--;\n\t\t\t}\n\t\t} catch (eof:haxe.io.Eof) {}\n\t\treturn len - k;\n\t}\n\n\t/**\n\t\tClose the input source.\n\n\t\tBehaviour while reading after calling this method is unspecified.\n\t**/\n\tpublic function close():Void {}\n\n\tfunction set_bigEndian(b:Bool):Bool {\n\t\tbigEndian = b;\n\t\treturn b;\n\t}\n\n\t/* ------------------ API ------------------ */\n\t/**\n\t\tRead and return all available data.\n\n\t\tThe `bufsize` optional argument specifies the size of chunks by\n\t\twhich data is read. Its default value is target-specific.\n\t**/\n\tpublic function readAll(?bufsize:Int):Bytes {\n\t\tif (bufsize == null)\n\t\t\t#if php\n\t\t\tbufsize = 8192; // default value for PHP and max under certain circumstances\n\t\t\t#else\n\t\t\tbufsize = (1 << 14); // 16 Ko\n\t\t\t#end\n\n\t\tvar buf = Bytes.alloc(bufsize);\n\t\tvar total = new haxe.io.BytesBuffer();\n\t\ttry {\n\t\t\twhile (true) {\n\t\t\t\tvar len = readBytes(buf, 0, bufsize);\n\t\t\t\tif (len == 0)\n\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\ttotal.addBytes(buf, 0, len);\n\t\t\t}\n\t\t} catch (e:Eof) {}\n\t\treturn total.getBytes();\n\t}\n\n\t/**\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\n\n\t\tUnlike `readBytes`, this method tries to read the exact `len` amount of bytes.\n\t**/\n\tpublic function readFullBytes(s:Bytes, pos:Int, len:Int):Void {\n\t\twhile (len > 0) {\n\t\t\tvar k = readBytes(s, pos, len);\n\t\t\tif (k == 0)\n\t\t\t\tthrow Error.Blocked;\n\t\t\tpos += k;\n\t\t\tlen -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tRead and return `nbytes` bytes.\n\t**/\n\tpublic function read(nbytes:Int):Bytes {\n\t\tvar s = Bytes.alloc(nbytes);\n\t\tvar p = 0;\n\t\twhile (nbytes > 0) {\n\t\t\tvar k = readBytes(s, p, nbytes);\n\t\t\tif (k == 0)\n\t\t\t\tthrow Error.Blocked;\n\t\t\tp += k;\n\t\t\tnbytes -= k;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tRead a string until a character code specified by `end` is occurred.\n\n\t\tThe final character is not included in the resulting string.\n\t**/\n\tpublic function readUntil(end:Int):String {\n\t\tvar buf = new BytesBuffer();\n\t\tvar last:Int;\n\t\twhile ((last = readByte()) != end)\n\t\t\tbuf.addByte(last);\n\t\treturn buf.getBytes().toString();\n\t}\n\n\t/**\n\t\tRead a line of text separated by CR and/or LF bytes.\n\n\t\tThe CR/LF characters are not included in the resulting string.\n\t**/\n\tpublic function readLine():String {\n\t\tvar buf = new BytesBuffer();\n\t\tvar last:Int;\n\t\tvar s;\n\t\ttry {\n\t\t\twhile ((last = readByte()) != 10)\n\t\t\t\tbuf.addByte(last);\n\t\t\ts = buf.getBytes().toString();\n\t\t\tif (s.charCodeAt(s.length - 1) == 13)\n\t\t\t\ts = s.substr(0, -1);\n\t\t} catch (e:Eof) {\n\t\t\ts = buf.getBytes().toString();\n\t\t\tif (s.length == 0)\n\t\t\t\t#if neko neko.Lib.rethrow #else throw #end (e);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tRead a 32-bit floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readFloat():Float {\n\t\treturn FPHelper.i32ToFloat(readInt32());\n\t}\n\n\t/**\n\t\tRead a 64-bit double-precision floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readDouble():Float {\n\t\tvar i1 = readInt32();\n\t\tvar i2 = readInt32();\n\t\treturn bigEndian ? FPHelper.i64ToDouble(i2, i1) : FPHelper.i64ToDouble(i1, i2);\n\t}\n\n\t/**\n\t\tRead a 8-bit signed integer.\n\t**/\n\tpublic function readInt8():Int {\n\t\tvar n = readByte();\n\t\tif (n >= 128)\n\t\t\treturn n - 256;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 16-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt16():Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar n = bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\n\t\tif (n & 0x8000 != 0)\n\t\t\treturn n - 0x10000;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 16-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readUInt16():Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\treturn bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\n\t}\n\n\t/**\n\t\tRead a 24-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt24():Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\tvar n = bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\n\t\tif (n & 0x800000 != 0)\n\t\t\treturn n - 0x1000000;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 24-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readUInt24():Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\treturn bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\n\t}\n\n\t/**\n\t\tRead a 32-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt32():Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\tvar ch4 = readByte();\n\t\t#if (php || python)\n\t\t// php will overflow integers.  Convert them back to signed 32-bit ints.\n\t\tvar n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\n\t\tif (n & 0x80000000 != 0)\n\t\t\treturn (n | 0x80000000);\n\t\telse\n\t\t\treturn n;\n\t\t#elseif lua\n\t\tvar n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\n\t\treturn lua.Boot.clampInt32(n);\n\t\t#else\n\t\treturn bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\n\t\t#end\n\t}\n\n\t/**\n\t\tRead and `len` bytes as a string.\n\t**/\n\tpublic function readString(len:Int, ?encoding:Encoding):String {\n\t\tvar b = Bytes.alloc(len);\n\t\treadFullBytes(b, 0, len);\n\t\t#if neko\n\t\treturn neko.Lib.stringReference(b);\n\t\t#else\n\t\treturn b.getString(0, len, encoding);\n\t\t#end\n\t}\n\n\t#if neko\n\tstatic var _float_of_bytes = neko.Lib.load(\"std\", \"float_of_bytes\", 2);\n\tstatic var _double_of_bytes = neko.Lib.load(\"std\", \"double_of_bytes\", 2);\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\tInput.prototype.bigEndian = false;\n\t\t}\n\t#end\n\n\t#if (flash || js || python)\n\tfunction getDoubleSig(bytes:Array<Int>) {\n\t\treturn (((bytes[1] & 0xF) << 16) | (bytes[2] << 8) | bytes[3]) * 4294967296.\n\t\t\t+ (bytes[4] >> 7) * 2147483648\n\t\t\t+ (((bytes[4] & 0x7F) << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7]);\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass(c:Class<Dynamic>);\n\tTEnum(e:Enum<Dynamic>);\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\tpublic static inline function getClass<T>(o:T):Null<Class<T>> {\n\t\treturn @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum(o:EnumValue):Enum<Dynamic>\n\t\tuntyped {\n\t\t\tif (o == null)\n\t\t\t\treturn null;\n\t\t\t#if js_enums_as_arrays\n\t\t\treturn o.__enum__;\n\t\t\t#else\n\t\t\treturn $hxEnums[o.__enum__];\n\t\t\t#end\n\t\t}\n\n\tpublic static inline function getSuperClass(c:Class<Dynamic>):Class<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.getSuperClass\", c.__super__);\n\t}\n\n\tpublic static inline function getClassName(c:Class<Dynamic>):String {\n\t\treturn untyped __define_feature__(\"Type.getClassName\", c.__name__);\n\t}\n\n\tpublic static inline function getEnumName(e:Enum<Dynamic>):String {\n\t\treturn untyped __define_feature__(\"Type.getEnumName\", e.__ename__);\n\t}\n\n\t#if js_enums_as_arrays\n\tpublic static function resolveClass(name:String):Class<Dynamic>\n\t\tuntyped {\n\t\t\tvar cl:Class<Dynamic> = $hxClasses[name];\n\t\t\t// ensure that this is a class\n\t\t\tif (cl == null || !js.Boot.isClass(cl))\n\t\t\t\treturn null;\n\t\t\treturn cl;\n\t\t}\n\n\tpublic static function resolveEnum(name:String):Enum<Dynamic>\n\t\tuntyped {\n\t\t\tvar e:Dynamic = $hxClasses[name];\n\t\t\t// ensure that this is an enum\n\t\t\tif (e == null || !js.Boot.isEnum(e))\n\t\t\t\treturn null;\n\t\t\treturn e;\n\t\t}\n\t#else\n\tpublic static inline function resolveClass(name:String):Class<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.resolveClass\", $hxClasses[name]);\n\t}\n\n\tpublic static inline function resolveEnum(name:String):Enum<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.resolveEnum\", $hxEnums[name]);\n\t}\n\t#end\n\n\t#if (js_es < 5)\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\n\t\tswitch (args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn js.Syntax.construct(cl);\n\t\t\tcase 1:\n\t\t\t\treturn js.Syntax.construct(cl, args[0]);\n\t\t\tcase 2:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1]);\n\t\t\tcase 3:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2]);\n\t\t\tcase 4:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3]);\n\t\t\tcase 5:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 6:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5]);\n\t\t\tcase 7:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t\t\tcase 8:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n\t\t\tcase 9:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\n\t\t\tcase 10:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\n\t\t\tcase 11:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10]);\n\t\t\tcase 12:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11]);\n\t\t\tcase 13:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\n\t\t\t\t\targs[12]);\n\t\t\tcase 14:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\n\t\t\t\t\targs[12], args[13]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\tpublic static function createEmptyInstance<T>(cl:Class<T>):T\n\t\tuntyped {\n\t\t\tjs.Syntax.code(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\t\treturn js.Syntax.code(\"new empty()\");\n\t\t}\n\t#else\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\n\t\tvar ctor = ((cast js.lib.Function).prototype.bind : js.lib.Function).apply(cl, [null].concat(args));\n\t\treturn js.Syntax.code(\"new ({0})\", ctor); // cannot use `js.Syntax.construct` because we need parens if `ctor` is fused in\n\t}\n\n\tpublic static inline function createEmptyInstance<T>(cl:Class<T>):T {\n\t\treturn js.lib.Object.create((cast cl).prototype);\n\t}\n\t#end\n\n\tpublic static function createEnum<T>(e:Enum<T>, constr:String, ?params:Array<Dynamic>):T {\n\t\tvar f:Dynamic = Reflect.field(e, constr);\n\t\tif (f == null)\n\t\t\tthrow \"No such constructor \" + constr;\n\t\tif (Reflect.isFunction(f)) {\n\t\t\tif (params == null)\n\t\t\t\tthrow \"Constructor \" + constr + \" need parameters\";\n\t\t\treturn Reflect.callMethod(e, f, params);\n\t\t}\n\t\tif (params != null && params.length != 0)\n\t\t\tthrow \"Constructor \" + constr + \" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>(e:Enum<T>, index:Int, ?params:Array<Dynamic>):T {\n\t\t#if js_enums_as_arrays\n\t\tvar c:String = (untyped e.__constructs__)[index];\n\t\t#else\n\t\tvar c:String = switch (untyped e.__constructs__)[index] {\n\t\t\tcase null: null;\n\t\t\tcase ctor: ctor._hx_name;\n\t\t}\n\t\t#end\n\t\tif (c == null)\n\t\t\tthrow index + \" is not a valid enum constructor index\";\n\t\treturn createEnum(e, c, params);\n\t}\n\n\t#if (js_es >= 6)\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\n\t\tvar result = [];\n\t\twhile (c != null) {\n\t\t\tfor (name in js.lib.Object.getOwnPropertyNames((cast c).prototype)) {\n\t\t\t\tswitch name {\n\t\t\t\t\tcase \"constructor\" | \"__class__\" | \"__properties__\":\n\t\t\t\t\t// skip special names\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tif (result.indexOf(name) == -1)\n\t\t\t\t\t\t\tresult.push(name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc = getSuperClass(c);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = js.lib.Object.getOwnPropertyNames(cast c);\n\t\ta.remove(\"__id__\");\n\t\ta.remove(\"hx__closures__\");\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__isInterface__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__instanceFields__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\ta.remove(\"name\");\n\t\ta.remove(\"length\");\n\t\treturn a;\n\t}\n\t#else\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = [];\n\t\tjs.Syntax.code(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\t#end\n\n\tpublic static inline function getEnumConstructs(e:Enum<Dynamic>):Array<String> {\n\t\t#if js_enums_as_arrays\n\t\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t\t#else\n\t\t\treturn ((cast e).__constructs__ : Array<{_hx_name:String}>).map(c -> c._hx_name);\n\t\t#end\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function typeof(v:Dynamic):ValueType {\n\t\tswitch (js.Syntax.typeof(v)) {\n\t\t\tcase \"boolean\":\n\t\t\t\treturn TBool;\n\t\t\tcase \"string\":\n\t\t\t\treturn TClass(String);\n\t\t\tcase \"number\":\n\t\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\t\tif (Math.ceil(v) == v % 2147483648.0)\n\t\t\t\t\treturn TInt;\n\t\t\t\treturn TFloat;\n\t\t\tcase \"object\":\n\t\t\t\tif (v == null)\n\t\t\t\t\treturn TNull;\n\t\t\t\tvar e = v.__enum__;\n\t\t\t\tif (e != null) {\n\t\t\t\t\t#if js_enums_as_arrays\n\t\t\t\t\treturn TEnum(e);\n\t\t\t\t\t#else\n\t\t\t\t\treturn TEnum(untyped $hxEnums[e]);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t\tvar c = js.Boot.getClass(v);\n\t\t\t\tif (c != null)\n\t\t\t\t\treturn TClass(c);\n\t\t\t\treturn TObject;\n\t\t\tcase \"function\":\n\t\t\t\tif (js.Boot.isClass(v) || js.Boot.isEnum(v))\n\t\t\t\t\treturn TObject;\n\t\t\t\treturn TFunction;\n\t\t\tcase \"undefined\":\n\t\t\t\treturn TNull;\n\t\t\tdefault:\n\t\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T:EnumValue>(a:T, b:T):Bool\n\t\tuntyped {\n\t\t\tif (a == b)\n\t\t\t\treturn true;\n\t\t\ttry {\n\t\t\t\tvar e = a.__enum__;\n\t\t\t\tif (e == null || e != b.__enum__)\n\t\t\t\t\treturn false;\n\t\t\t\t#if js_enums_as_arrays\n\t\t\t\tif (a[0] != b[0])\n\t\t\t\t\treturn false;\n\t\t\t\tfor (i in 2...a.length)\n\t\t\t\t\tif (!enumEq(a[i], b[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t#else\n\t\t\t\tif (a._hx_index != b._hx_index)\n\t\t\t\t\treturn false;\n\t\t\t\tvar aparams:Array<Any> = a.__params__();\n\t\t\t\tvar bparams:Array<Any> = b.__params__();\n\t\t\t\tfor (i in 0...aparams.length) {\n\t\t\t\t\tif (!enumEq(aparams[i], bparams[i])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\tpublic inline static function enumConstructor(e:EnumValue):String {\n\t\t#if js_enums_as_arrays\n\t\treturn untyped e[0];\n\t\t#else\n\t\treturn untyped $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;\n\t\t#end\n\t}\n\n\t#if js_enums_as_arrays\n\tpublic inline static function enumParameters(e:EnumValue):Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\t#else\n\tpublic static function enumParameters(e:EnumValue):Array<Dynamic>\n\t\tuntyped {\n\t\t\treturn e.__params__ != null ? e.__params__() : [];\n\t\t}\n\t#end\n\n\tpublic inline static function enumIndex(e:EnumValue):Int {\n\t\t#if !js_enums_as_arrays\n\t\treturn untyped e._hx_index;\n\t\t#else\n\t\treturn untyped e[1];\n\t\t#end\n\t}\n\n\tpublic inline static function allEnums<T>(e:Enum<T>):Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__.slice());\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.ArrayKeyValueIterator;\n\n@:coreApi\nextern class Array<T> {\n\tvar length(default, null):Int;\n\n\tfunction new():Void;\n\tfunction concat(a:Array<T>):Array<T>;\n\tfunction join(sep:String):String;\n\tfunction pop():Null<T>;\n\tfunction push(x:T):Int;\n\tfunction reverse():Void;\n\tfunction shift():Null<T>;\n\tfunction slice(pos:Int, ?end:Int):Array<T>;\n\tfunction sort(f:T->T->Int):Void;\n\tfunction splice(pos:Int, len:Int):Array<T>;\n\tfunction toString():String;\n\tfunction unshift(x:T):Void;\n\n\tinline function insert(pos:Int, x:T):Void {\n\t\t(cast this).splice(pos, 0, x);\n\t}\n\n\tinline function remove(x:T):Bool {\n\t\treturn @:privateAccess HxOverrides.remove(this, x);\n\t}\n\n\tinline function contains(x:T):Bool {\n\t\t#if (js_es >= 6)\n\t\treturn (cast this).includes(x);\n\t\t#else\n\t\treturn this.indexOf(x) != -1;\n\t\t#end\n\t}\n\n\t#if (js_es >= 5)\n\t@:pure function indexOf(x:T, ?fromIndex:Int):Int;\n\t@:pure function lastIndexOf(x:T, ?fromIndex:Int):Int;\n\t#else\n\tinline function indexOf(x:T, ?fromIndex:Int):Int {\n\t\treturn @:privateAccess HxOverrides.indexOf(this, x, (fromIndex != null) ? fromIndex : 0);\n\t}\n\n\tinline function lastIndexOf(x:T, ?fromIndex:Int):Int {\n\t\treturn @:privateAccess HxOverrides.lastIndexOf(this, x, (fromIndex != null) ? fromIndex : length - 1);\n\t}\n\t#end\n\n\t@:pure\n\tinline function copy():Array<T> {\n\t\treturn (cast this).slice();\n\t}\n\n\t@:runtime inline function map<S>(f:T->S):Array<S> {\n\t\tvar result:Array<S> = js.Syntax.construct(Array, length);\n\t\tfor(i in 0...length) {\n\t\t\tresult[i] = f(this[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t@:runtime inline function filter(f:T->Bool):Array<T> {\n\t\treturn [for (v in this) if (f(v)) v];\n\t}\n\n\t@:runtime inline function iterator():haxe.iterators.ArrayIterator<T> {\n\t\treturn new haxe.iterators.ArrayIterator(this);\n\t}\n\n\t@:runtime inline function keyValueIterator():ArrayKeyValueIterator<T> {\n\t\treturn new ArrayKeyValueIterator(this);\n\t}\n\n\tinline function resize(len:Int):Void {\n\t\tthis.length = len;\n\t}\n}\n","import js.Browser;\nimport haxe.Log;\nimport firebase.web.firestore.Timestamp;\nimport discord_builder.BaseCommandInteraction;\nimport discord_js.Message;\nimport sys.io.File;\nimport haxe.Json;\nimport haxe.PosInfos;\n\nfunction loadFile(filename:String, ?pos:PosInfos):Dynamic {\n\tvar data = null;\n\ttry {\n\t\tdata = Json.parse(File.getContent('./commands/$filename.json'));\n\t} catch (e) {\n\t\ttrace(e);\n\t\ttrace('Failed to load file or parse json', pos);\n\t}\n\treturn data;\n}\n\nfunction hasRole(role:String, interaction:BaseCommandInteraction) {\n\tvar guild = interaction.member.roles.cache.get(role);\n\treturn (interaction.guild.available && guild != null && guild.members != null && guild.members.has(interaction.user.id));\n}\n\nfunction withinTime(time:Float, timeout:Float) {\n\tvar now = Date.now().getTime();\n\treturn now - time < timeout;\n}\n\nfunction dateWithinTimeout(a:Date, b:Date, timeout:Float) {\n\tif (a == null || b == null) {\n\t\treturn false;\n\t}\n\n\treturn a.getTime() - b.getTime() < timeout;\n}\n\nfunction fbDateWithinTimeout(a:Timestamp, b:Timestamp, timeout:Float) {\n\tif (a == null || b == null) {\n\t\treturn false;\n\t}\n\n\treturn a.toDate().getTime() - b.toDate().getTime() < timeout;\n}\n\n// inline function err(err:Dynamic) {\n// \tBrowser.console.dir(err);\n// \ttrace(err.message);\n// }\n","package commands;\n\nimport js.Browser;\nimport externs.FuzzySort;\nimport sys.io.File;\nimport haxe.Http;\nimport discord_builder.BaseCommandInteraction;\nimport discord_js.MessageEmbed;\nimport components.Command;\nimport systems.CommandBase;\n\ntypedef Data = {\n\tvar type:String;\n\tvar name:String;\n\tvar path:String;\n\tvar link:String;\n\tvar description:String;\n}\n\ntypedef TField = {\n\tvar id:String;\n\tvar code:String;\n\tvar doc:String;\n}\n\ntypedef TFieldCache = {\n\tvar size:Int;\n\tvar fields:Map<String, TField>;\n}\n\n@:forward\nabstract FieldCache(TFieldCache) from TFieldCache {\n\tpublic function new() {\n\t\tthis = {\n\t\t\tsize: 0,\n\t\t\tfields: []\n\t\t}\n\t}\n\n\tpublic function exists(pkg:String, key:String) {\n\t\tvar path = pkg + '.' + key;\n\t\treturn this.fields.exists(path);\n\t}\n\n\tpublic function set(pkg:String, value:TField) {\n\t\tvar path = pkg + '.' + value.id;\n\t\tif (!this.fields.exists(path)) {\n\t\t\tthis.size++;\n\t\t}\n\n\t\tthis.fields.set(path, value);\n\t}\n\n\tpublic function get(pkg:String, id:String) {\n\t\tvar path = pkg + '.' + id;\n\t\tif (!this.fields.exists(path)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.fields.get(path);\n\t}\n}\n\ntypedef TAutoComplete = {\n\tvar name:String;\n\tvar value:String;\n}\n\nclass Api extends CommandBase {\n\tvar api:Map<String, Map<String, Data>> = [];\n\tvar sapi:Map<String, Array<Data>> = [];\n\tvar packages:Map<String, String> = [];\n\tvar npackages:Array<TAutoComplete> = [];\n\tvar cache:FieldCache;\n\tvar save_time:Float;\n\tvar save_frequency:Float = 3600000;\n\n\toverride function onEnabled() {\n\t\tthis.api.set('haxe', loadFile('api/haxe'));\n\t\tthis.api.set('flixel', loadFile('api/flixel'));\n\t\tthis.api.set('heaps', loadFile('api/heaps'));\n\t\tthis.api.set('ceramic', loadFile('api/ceramic'));\n\t\tthis.api.set('openfl', loadFile('api/openfl'));\n\t\tthis.api.set('godot', loadFile('api/hxgodot'));\n\t\tthis.cache = loadFile('api/cache/0');\n\n\t\tif (this.cache == null) {\n\t\t\tthis.cache = new FieldCache();\n\t\t}\n\n\t\tfor (type => index in api) {\n\t\t\tvar arr = [];\n\t\t\tfor (k => v in index) {\n\t\t\t\tpackages.set(k, type);\n\t\t\t\tarr.push(v);\n\t\t\t\tthis.npackages.push({\n\t\t\t\t\tname: k,\n\t\t\t\t\tvalue: v.path\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.sapi.set(type, arr);\n\t\t}\n\n\t\ttrace('loaded');\n\t}\n\n\toverride function update(_) {\n\t\tsuper.update(_);\n\t\tvar time = Date.now().getTime();\n\t\tif (time - this.save_time > this.save_frequency) {\n\t\t\tthis.saveCache();\n\t\t}\n\t}\n\n\tinline function saveCache() {\n\t\tFile.saveContent('./commands/api/cache/0.json', this.cache.stringify());\n\t\tthis.save_time = Date.now().getTime();\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tif (command.content == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (command.content) {\n\t\t\tcase Api(path, field):\n\t\t\t\tvar type = this.packages.get(path);\n\t\t\t\tvar cls = null;\n\n\t\t\t\tif (this.packages.exists(path)) {\n\t\t\t\t\tcls = this.api.get(type).get(path);\n\t\t\t\t}\n\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tvar focused = null;\n\t\t\t\t\tfor (item in interaction.options._hoistedOptions) {\n\t\t\t\t\t\tif (item.focused) {\n\t\t\t\t\t\t\tfocused = item;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (focused.name) {\n\t\t\t\t\t\tcase 'package':\n\t\t\t\t\t\t\tthis.search(path, interaction);\n\t\t\t\t\t\tcase 'field':\n\t\t\t\t\t\t\tvar ac = [];\n\t\t\t\t\t\t\tfor (key => value in this.cache.fields) {\n\t\t\t\t\t\t\t\tvar path = path + '.' + field;\n\t\t\t\t\t\t\t\tif (key == path) {\n\t\t\t\t\t\t\t\t\tac.push({\n\t\t\t\t\t\t\t\t\t\tname: value.id,\n\t\t\t\t\t\t\t\t\t\tvalue: value.id\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tinteraction.respond(ac);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.getFieldPage(cls, field, interaction);\n\t\t\t\t\t\t\t} catch (e ) {\n\t\t\t\t\t\t\t\ttrace(e);\n\t\t\t\t\t\t\t\ttrace(cls);\n\t\t\t\t\t\t\t\ttrace(field);\n\t\t\t\t\t\t\t\ttrace(path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = this.cache.get(path, field);\n\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\tvar title = '';\n\t\t\t\tvar link = '';\n\t\t\t\tvar cls_desc = '';\n\t\t\t\tvar field_desc = '';\n\n\t\t\t\tif (this.packages.exists(path)) {\n\t\t\t\t\ttitle = cls.path;\n\t\t\t\t\tlink = cls.link;\n\t\t\t\t\tcls_desc = cls.description;\n\t\t\t\t}\n\n\t\t\t\tif (this.cache.exists(path, field)) {\n\t\t\t\t\ttitle += '#' + f.id;\n\t\t\t\t\tlink += '#' + f.id;\n\t\t\t\t\tfield_desc = f.doc;\n\t\t\t\t}\n\n\t\t\t\tvar desc = '$cls_desc';\n\n\t\t\t\tif (f != null) {\n\t\t\t\t\tdesc += '```hx\\n${f.code}\\n```${f.doc}';\n\t\t\t\t}\n\n\t\t\t\tif (cls_desc == '' && field_desc == '') {\n\t\t\t\t\tdesc = '*No description found*';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (title != '') {\n\t\t\t\t\tembed.setTitle(title);\n\t\t\t\t}\n\n\t\t\t\tif (link != '') {\n\t\t\t\t\tembed.setURL(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (link == '' && title == '') {\n\t\t\t\t\tinteraction.reply({content: \"Couldn't find the package\"}).then(null, (err) -> trace(err));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tembed.setDescription(desc);\n\t\t\t\tinteraction.reply({embeds: [embed]});\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction getFieldPage(cls:Data, find:String, interaction:BaseCommandInteraction,\n\t\t\t?ac:Array<{name:String, value:String}>) {\n\t\tif (cls == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar http = new Http(cls.link);\n\t\tif (ac == null) {\n\t\t\tac = [];\n\t\t}\n\n\t\tvar headers = [\n\t\t\t'static_vars' => '<h3 class=\"section\">Static variables</h3>',\n\t\t\t'static_methods' => '<h3 class=\"section\">Static methods</h3>',\n\t\t\t'constructor' => '<h3 class=\"section\">Constructor</h3>',\n\t\t\t'variables' => '<h3 class=\"section\">Variables</h3>',\n\t\t\t'methods' => '<h3 class=\"section\">Methods</h3>',\n\t\t\t'last' => '<footer'\n\t\t];\n\n\t\tvar header_arr = ['static_vars', 'static_methods', 'constructor', 'variables', 'methods', 'last'];\n\n\t\thttp.onData = (res) -> {\n\t\t\theader_arr.sort(function(a, b) {\n\t\t\t\tvar index_a = res.indexOf(headers.get(a));\n\t\t\t\tvar index_b = res.indexOf(headers.get(b));\n\t\t\t\tif (index_a > index_b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (index_a < index_b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tvar a = null;\n\t\t\tvar b = null;\n\t\t\tvar last = 0;\n\t\t\tvar response = [];\n\t\t\tvar results = [];\n\n\t\t\t// trace(header_arr);\n\n\t\t\twhile (true) {\n\t\t\t\tfor (k => v in header_arr) {\n\t\t\t\t\tif (a != null && b != null) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (res.contains(headers.get(v))) {\n\t\t\t\t\t\tif (a != null && b == null && k > last) {\n\t\t\t\t\t\t\tb = v;\n\t\t\t\t\t\t\tlast = k;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (a == null) {\n\t\t\t\t\t\t\ta = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar pos_a = res.indexOf(headers.get(a)) + headers.get(a).length;\n\t\t\t\tvar pos_b = res.indexOf(headers.get(b));\n\t\t\t\tvar fields = res.substring(pos_a, pos_b);\n\n\t\t\t\tvar arr = switch (a) {\n\t\t\t\t\tcase 'static_vars':\n\t\t\t\t\t\tsearchVars(find, fields);\n\t\t\t\t\tcase 'static_methods':\n\t\t\t\t\t\tsearchMethods(find, fields);\n\t\t\t\t\tcase 'constructor':\n\t\t\t\t\t\tsearchMethods(find, fields);\n\t\t\t\t\tcase 'variables':\n\t\t\t\t\t\tsearchVars(find, fields);\n\t\t\t\t\tcase 'methods':\n\t\t\t\t\t\tsearchMethods(find, fields);\n\t\t\t\t\tcase 'last': [];\n\t\t\t\t\tdefault: [];\n\t\t\t\t}\n\n\t\t\t\tresponse = response.concat(arr);\n\t\t\t\tvar algo = FuzzySort.go(find, response, {key: 'id', limit: 10, threshold: -10000});\n\n\t\t\t\tfor (a in algo) {\n\t\t\t\t\tresults.push(a.obj);\n\t\t\t\t}\n\n\t\t\t\ta = b;\n\t\t\t\tb = null;\n\n\t\t\t\tif (a == 'last') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (r in results) {\n\t\t\t\tthis.cache.set(cls.path, r);\n\t\t\t\tvar name = 'var ${r.id}';\n\t\t\t\tif (r.code.contains('(')) {\n\t\t\t\t\tname = 'fun ${r.id}';\n\t\t\t\t}\n\n\t\t\t\tac.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: r.id\n\t\t\t\t});\n\t\t\t}\n\t\t\tac.sort((a, b) -> a.name.length - b.name.length);\n\t\t\tthis.saveCache();\n\t\t\tif (ac.length > 24) {\n\t\t\t\tac = ac.slice(0, 24);\n\t\t\t}\n\t\t\tinteraction.respond(ac);\n\t\t}\n\t\thttp.request();\n\t}\n\n\tfunction searchVars(find:String, fields:String) {\n\t\tvar parse = NodeHtmlParser.parse(fields);\n\t\t// grabs things like \"static\" or \"read only\" and the field identifier\n\t\tvar arr = [];\n\t\tfor (f in parse.querySelectorAll('.field')) {\n\t\t\tvar labels = [];\n\t\t\tvar identifier = '';\n\t\t\tvar type = '';\n\t\t\tvar doc = '';\n\t\t\tvar value = '';\n\n\t\t\tfor (m in f.querySelectorAll('span')) {\n\t\t\t\tif (m.classNames.contains('label') && !m.text.contains(\"@:\")) {\n\t\t\t\t\tlabels.push(m.text);\n\t\t\t\t\t// trace(m.text);\n\t\t\t\t}\n\n\t\t\t\tif (m.classNames.contains('identifier')) {\n\t\t\t\t\tidentifier = m.text;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalue = f.querySelector('code').text.split('=')[2];\n\n\t\t\tvar split = f.querySelector('code').text.split(':');\n\t\t\tif (split.length == 2) {\n\t\t\t\ttype = split[1];\n\t\t\t}\n\n\t\t\tif (split.length == 3) {\n\t\t\t\ttype = split[2];\n\t\t\t}\n\n\t\t\tfor (p in f.querySelectorAll('p')) {\n\t\t\t\tif (p.classNames.contains('javadoc')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar line = p.text.replace('\\n', '').replace('\\t', '');\n\t\t\t\tif (line.length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tdoc += '$line ';\n\t\t\t}\n\n\t\t\tvar result = '';\n\t\t\tfor (l in labels) {\n\t\t\t\tresult += '$l ';\n\t\t\t}\n\n\t\t\tresult += '$identifier:$type';\n\t\t\tif (value != null) {\n\t\t\t\tresult += ' = $value';\n\t\t\t}\n\n\t\t\tarr.push({\n\t\t\t\tid: identifier,\n\t\t\t\tcode: result,\n\t\t\t\tdoc: doc\n\t\t\t});\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tfunction searchMethods(find:String, fields:String) {\n\t\tvar parse = NodeHtmlParser.parse(fields);\n\t\t// grabs things like \"static\" or \"read only\" and the field identifier\n\t\tvar arr = [];\n\t\tfor (f in parse.querySelectorAll('.field')) {\n\t\t\tvar labels = [];\n\t\t\tvar identifier = '';\n\t\t\tvar parameters = '';\n\t\t\tvar type = '';\n\t\t\tvar doc = '';\n\t\t\tfor (m in f.querySelectorAll('span')) {\n\t\t\t\tif (m.classNames.contains('label') && !m.text.contains(\"@:\")) {\n\t\t\t\t\tlabels.push(m.text.trim());\n\t\t\t\t}\n\n\t\t\t\tif (m.classNames.contains('identifier')) {\n\t\t\t\t\tidentifier = m.text.trim();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparameters = f.querySelector('code').text.split(identifier)[1].trim();\n\n\t\t\tvar split = f.querySelector('code').text.split(':');\n\t\t\tif (split.length == 2) {\n\t\t\t\ttype = split[1].trim();\n\t\t\t}\n\n\t\t\tif (split.length == 3) {\n\t\t\t\ttype = split[2].trim();\n\t\t\t}\n\n\t\t\tfor (p in f.querySelectorAll('p')) {\n\t\t\t\tif (p.classNames.contains('javadoc')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar line = p.text.replace('\\n', '').replace('\\t', '').trim();\n\t\t\t\tif (line.length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tdoc += '$line ';\n\t\t\t}\n\n\t\t\tvar result = '';\n\t\t\tfor (l in labels) {\n\t\t\t\tresult += '$l ';\n\t\t\t}\n\n\t\t\tresult += '$identifier$parameters';\n\n\t\t\tarr.push({\n\t\t\t\tid: identifier,\n\t\t\t\tcode: result,\n\t\t\t\tdoc: doc\n\t\t\t});\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction search(string:String, interaction:BaseCommandInteraction) {\n\t\tvar results = [];\n\t\tvar narrow = new Array<Data>();\n\t\tvar keywords = [\n\t\t\t\"flixel\" => ['flx', 'flixel'],\n\t\t\t\"heaps\" => ['h2d', 'hxd', 'hxsl', 'h3d'],\n\t\t\t\"ceramic\" => ['ceramic', 'clay', 'spine'],\n\t\t\t\"openfl\" => ['openfl'],\n\t\t\t\"haxe\" => ['haxe'],\n\t\t\t\"godot\" => ['godot'],\n\t\t];\n\n\t\tfor (k => v in keywords) {\n\t\t\tfor (i in v) {\n\t\t\t\tif (string.contains(i)) {\n\t\t\t\t\tnarrow = this.sapi.get(k);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (narrow.length == 0) {\n\t\t\tvar algo = FuzzySort.go(string, this.npackages,\n\t\t\t\t{key: 'name', limit: 10, threshold: -10000});\n\t\t\tfor (a in algo) {\n\t\t\t\tresults.push(a.obj);\n\t\t\t}\n\t\t} else {\n\t\t\tvar algo = FuzzySort.go(string, narrow, {key: 'path', limit: 10, threshold: -10000});\n\t\t\tfor (a in algo) {\n\t\t\t\tresults.push({\n\t\t\t\t\tname: a.obj.path,\n\t\t\t\t\tvalue: a.obj.path\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tinteraction.respond(results).then(null, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'api';\n\t}\n}\n","package ecs;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\nimport ecs.macros.Utils;\nimport ecs.macros.FamilyCache;\nimport ecs.macros.ResourceCache;\nimport ecs.macros.UniverseMacros;\n\nusing haxe.macro.Tools;\n#end\n\nusing Safety;\n\n@:autoBuild(ecs.macros.SystemMacros.familyConstruction()) class System\n{\n\tfinal universe : Universe;\n\n\tpublic function new(_universe)\n\t{\n\t\tuniverse = _universe;\n\t}\n\n\tpublic function onEnabled()\n\t{\n\t\t//\n\t}\n\n\tpublic function update(_dt : Float)\n\t{\n\t\t//\n\t}\n\n\tpublic function onDisabled()\n\t{\n\t\t//\n\t}\n\n\t/**\n\t * The setup macro function checks if all the resources requested by the provided families are available,\n\t * if they are it creates local variables for each resource with the specified name and runs the provided code block.\n\t * \n\t * ```\n\t * setup(someFamily, {\n\t *     // code will only be ran if all of the resources requested by `someFamily` are available.\n\t * });\n\t * ```\n\t * \n\t * This macro function cannot be used when importing the `UniverseMacros` module for static extension use.\n\t * @param _families Either a family definition variable or an array of family definition variables. \n\t * @param _function Code to execute if all the families are active.\n\t */\n\t@:ignoreInstrument macro function setup(_this : Expr, _families : ExprOf<Family>, _function : Expr)\n\t{\n\t\tfinal familiesToSetup = switch _families.expr\n\t\t{\n\t\t\tcase EConst(CIdent(s)): [ s ];\n\t\t\tcase EArrayDecl(values): [ for (e in values) switch e.expr {\n\t\t\t\tcase EConst(CIdent(s)): s;\n\t\t\t\tcase _: Context.error('Family should be an identifier', e.pos);\n\t\t\t} ];\n\t\t\tcase _: Context.error('Families to setup must be an identifier or an array of identifiers', _families.pos);\n\t\t}\n\t\tfinal extracted = switch _function.expr\n\t\t{\n\t\t\tcase EFunction(_, f):\n\t\t\t\tswitch extractFunctionBlock(f.expr)\n\t\t\t\t{\n\t\t\t\t\tcase Some(v): v;\n\t\t\t\t\tcase None: Context.error('Unable to extract EBlock from function', f.expr.pos);\n\t\t\t\t}\n\t\t\tcase EBlock(exprs):\n\t\t\t\texprs;\n\t\t\tcase other:\n\t\t\t\tContext.error('Unsupported iterate expression $other', _function.pos);\n\t\t};\n\t\t\n\t\t// Add a final 0 expr to make non exhaustive if checks acceptable as the last expr in the block.\n\t\textracted.push(macro 0);\n\t\t\n\t\t// Insert variable declarations to the top of the extracted function block.\n\t\t// TODO : should probably check to make sure there are no type or name collisions.\n\t\tfor (ident in familiesToSetup)\n\t\t{\n\t\t\tfinal clsKey = '${ signature(Context.getLocalType()) }-${ ident }';\n\t\t\tswitch getFamilyByKey(clsKey)\n\t\t\t{\n\t\t\t\tcase Some(family):\n\t\n\t\t\t\t\tfor (resource in family.resources)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (resource.name != '_')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfinal signature = signature(resource.type);\n\t\t\t\t\t\t\tfinal ct        = resource.type.toComplexType();\n\t\t\t\t\t\t\tfinal varName   = resource.name;\n\t\n\t\t\t\t\t\t\tswitch getResourceID(signature)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase Some(id):\n\t\t\t\t\t\t\t\t\textracted.insert(0, macro final $varName = (universe.resources.get($v{ id }) : $ct));\n\t\t\t\t\t\t\t\tcase None:\n\t\t\t\t\t\t\t\t\tContext.error('Resource ${ resource.type } has not been requested by any families', _families.pos);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcase None: Context.error('Unable to find a family with the key $clsKey', _families.pos);\n\t\t\t}\n\t\t}\n\t\n\t\t// Build up the if check for all the of families\n\t\tvar idx  = familiesToSetup.length - 1;\n\t\tvar expr = macro $i{ familiesToSetup[idx] }.isActive();\n\t\n\t\twhile (idx > 0)\n\t\t{\n\t\t\tidx--;\n\t\n\t\t\texpr = macro $e{ expr } && $i{ familiesToSetup[idx] }.isActive();\n\t\t}\n\t\n\t\treturn macro if ($e{ expr }) $b{ extracted };\n\t}\n\t\n\t/**\n\t * The iterate macro is the main way to execute code with each entities components in a given family,\n\t * it automates the process of getting the components using the names provided when defining the family.\n\t * In situations where you don't actually care about the entity itself you can use it in the following way.\n\t * \n\t * ```\n\t * iterate(someFamily, {\n\t *     // code here is ran for each entity found in `someFamily`.\n\t * });\n\t * ```\n\t * Alternatively lambda function syntax can be used.\n\t * ```\n\t * iterate(someFamily, () -> {\n\t *     // code here is ran for each entity found in `someFamily`.\n\t * });\n\t * ```\n\t * If you do need to access the entity whos components are currently being accessed then you can use lambda function\n\t * syntax with a single parameter which will then be accessible in the block and contain the current entity.\n\t * ```\n\t * iterate(someFamily, entity -> {\n\t *     // `entity` is the entity which has the components currently being accessed.\n\t * });\n\t * ```\n\t * It is perfectly valid to nest iterate calls as long as there are no component identifier collisions in any of the\n\t * nested function iterations.\n\t * \n\t * This macro function cannot be used when importing the `UniverseMacros` module for static extension use.\n\t * @param _family Family to iterate over.\n\t * @param _function Code to run for each entity in the family.\n\t */\n\t@:ignoreInstrument macro function iterate(_this : Expr, _family : ExprOf<Family>, _function : Expr)\n\t{\n\t\t// Get the name of the family to iterate over.\n\t\tfinal familyIdent = switch _family.expr\n\t\t{\n\t\t\tcase EConst(CIdent(s)): s;\n\t\t\tcase _: Context.error('Family passed into iterate must be an identifier', _family.pos);\n\t\t}\n\t\n\t\t// Extract the name of the entity variable in each iteration and the user typed expressions for the loop.\n\t\tfinal extracted = switch _function.expr\n\t\t{\n\t\t\tcase EFunction(_, f):\n\t\t\t\t{\n\t\t\t\t\tname : if (f.args.length == 0) '_tmpEnt' else f.args[0].name,\n\t\t\t\t\texpr : switch extractFunctionBlock(f.expr)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase Some(v): v;\n\t\t\t\t\t\tcase None: Context.error('Unable to extract EBlock from function', f.expr.pos);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tcase EBlock(exprs):\n\t\t\t\t{ name : '_tmpEnt', expr : exprs };\n\t\t\tcase other:\n\t\t\t\tContext.error('Unsupported iterate expression $other', _function.pos);\n\t\t}\n\t\n\t\t// Based on the family name and this systems name search all registered families for a match\n\t\tfinal clsKey     = '${ signature(Context.getLocalType()) }-${ familyIdent }';\n\t\tfinal components = switch getFamilyByKey(clsKey)\n\t\t{\n\t\t\tcase Some(family): family.components;\n\t\t\tcase None: Context.error('Unable to find a family with the key $clsKey', _family.pos);\n\t\t}\n\t\n\t\t// Generate a local variable with the requested name for each component in the family.\n\t\t// Then append the user typed for loop expression to ensure the variables are always accessible\n\t\tfinal forExpr = [];\n\t\tfor (c in components)\n\t\t{\n\t\t\tfinal varName   = c.name;\n\t\t\tfinal tableName = 'table${ c.hash }';\n\t\t\tfinal ct        = c.type.toComplexType();\n\t\n\t\t\t// Defining a component in a family as '_' will skip the variable generation.\n\t\t\tif (varName != '_')\n\t\t\t{\n\t\t\t\tforExpr.push(macro final $varName = ($i{ tableName }.get($i{ extracted.name }) : $ct));\n\t\t\t}\n\t\t}\n\t\tfor (e in extracted.expr)\n\t\t{\n\t\t\tforExpr.push(e);\n\t\t}\n\t\t\n\t\t// Add a final 0 expr to make non exhaustive if checks acceptable as the last expr in the block.\n\t\tforExpr.push(macro 0);\n\t\n\t\treturn macro @:pos(Context.currentPos()) for ($i{ extracted.name } in $e{ _family }) $b{ forExpr };\n\t}\n\t\n\t/**\n\t * The fetch macro allows you to operate on the components of a specific entity.\n\t * it automates the process of getting the components using the names provided when defining the family.\n\t * \n\t * ```\n\t * fetch(someFamily, someEntity, {\n\t *     // code here will only be executed if someEntity is in the specified family.\n\t * })\n\t * ```\n\t */\n\t@:ignoreInstrument macro function fetch(_this : Expr, _family : ExprOf<Family>, _entity : ExprOf<Entity>, _function : Expr)\n\t{\n\t\tfinal familyIdent = switch _family.expr\n\t\t{\n\t\t\tcase EConst(CIdent(s)): s;\n\t\t\tcase _: Context.error('Family passed into fetch must be an identifier', _family.pos);\n\t\t}\n\n\t\tfinal entityIdent = switch _entity.expr\n\t\t{\n\t\t\tcase EConst(CIdent(s)): s;\n\t\t\tcase _: Context.error('Entity passed into fetch must be an identifier', _entity.pos);\n\t\t}\n\n\t\tfinal blockExprs = switch _function.expr\n\t\t{\n\t\t\tcase EBlock(exprs): _function;\n\t\t\tcase _: Context.error('fetch function must be a code block', _function.pos);\n\t\t}\n\n\t\tfinal clsKey     = '${ signature(Context.getLocalType()) }-${ familyIdent }';\n\t\tfinal components = switch getFamilyByKey(clsKey)\n\t\t{\n\t\t\tcase Some(family): family.components;\n\t\t\tcase None: Context.error('Unable to find a family with the key $clsKey', _family.pos);\n\t\t}\n\n\t\tfinal forExpr = [];\n\t\tfor (c in components)\n\t\t{\n\t\t\tfinal varName   = c.name;\n\t\t\tfinal tableName = 'table${ c.hash }';\n\t\t\tfinal ct        = c.type.toComplexType();\n\t\n\t\t\t// Defining a component in a family as '_' will skip the variable generation.\n\t\t\tif (varName != '_')\n\t\t\t{\n\t\t\t\tforExpr.push(macro final $varName = ($i{ tableName }.get($e{ _entity }) : $ct));\n\t\t\t}\n\t\t}\n\t\tforExpr.push(blockExprs);\n\n\t\t// Add a final 0 expr to make non exhaustive if checks acceptable as the last expr in the block.\n\t\tforExpr.push(macro 0);\n\n\t\treturn macro {\n\t\t\tif ($e{ _family }.has($e{ _entity }))\n\t\t\t{\n\t\t\t\t@:mergeBlock $b{ forExpr }\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Returns the table variable for a specific component type.\n\t * This should not be used outside of a system.\n\t * If the provided type is not used as a component in any of the systems families the behaviour is undefined.\n\t * \n\t * ```\n\t * final component = table(SomeComponent).get(entity);\n\t * ```\n\t * @param _type Type to get the table for.\n\t */\n\t@:ignoreInstrument macro function table(_this : Expr, _type : ExprOf<TableType>)\n\t{\n\t\tContext.warning('table is unsafe and will be removed in a future version, use fetch instead', Context.currentPos());\n\n\t\treturn switch _type.expr\n\t\t{\n\t\t\tcase EConst(CIdent(s)):\n\t\t\t\tfinal resolved  = Context.getType(s);\n\t\t\t\tfinal signature = signature(resolved);\n\t\n\t\t\t\t{ expr : EConst(CIdent('table$signature')), pos : Context.currentPos() };\n\t\t\tcase _:\n\t\t\t\tContext.error('Argument must be a type identifier', Context.currentPos());\n\t\t}\n\t}\n}\n","package systems;\n\nimport haxe.PosInfos;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport ecs.System;\n\nabstract class CommandBase extends System {\n\tfinal has_subcommands:Bool = false;\n\t@:fastFamily var commands:{command:Command, interaction:BaseCommandInteraction};\n\n\toverride function update(_) {\n\t\tif (!Main.connected || !Main.commands_active) {\n\t\t\treturn;\n\t\t}\n\t\titerate(commands, entity -> {\n\t\t\tif (this.has_subcommands) {\n\t\t\t\tif (command.name.indexOf(this.name, 0) != -1) {\n\t\t\t\t\tthis.run(command, interaction);\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (command.name == this.name) {\n\t\t\t\t\tthis.run(command, interaction);\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract function run(command:Command, interaction:BaseCommandInteraction):Void;\n\n\tpublic var name(get, never):String;\n\n\tabstract function get_name():String;\n}\n","package ecs.macros;\n\nimport haxe.ds.ReadOnlyArray;\nimport haxe.macro.Type;\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\n\nimport ecs.ds.Result;\n#if macro\nimport ecs.macros.FamilyCache;\nimport ecs.macros.ResourceCache;\nimport ecs.macros.ComponentCache;\n#end\n\nusing Lambda;\nusing Safety;\nusing haxe.macro.Tools;\n\n/**\n * Stores the user specified name and the complex type of a requested component or resource.\n */\n@:structInit\n@:publicFields\nclass FamilyField\n{\n    final name : String;\n    final type : ComplexType;\n}\n\n/**\n * Stores all the info on a registered component or resource.\n */\nclass RegisteredField\n{\n    public final name : String;\n    public final type : Type;\n    public final hash : String;\n    public final uID : Int;\n\n    public function new(_name, _type, _hash, _uID)\n    {\n        name = _name;\n        type = _type;\n        hash = _hash;\n        uID  = _uID;\n    }\n}\n\nclass FamilyError\n{\n    public final message : String;\n    public final pos : Position;\n\n    public function new(_message, _pos)\n    {\n        message = _message;\n        pos     = _pos;\n    }\n}\n\n@:structInit\n@:publicFields\nclass FamilyDefinition\n{\n    /**\n     * Name of this family.\n     */\n    final name : String;\n\n    /**\n     * Position of the original family field.\n     */\n    final pos : Position;\n\n    /**\n     * All the static resources requested by this family.\n     */\n    final resources : Array<RegisteredField>;\n\n    /**\n     * All of the components requested by this family.\n     */\n    final components : Array<RegisteredField>;\n}\n\nmacro function familyConstruction() : Array<Field>\n{\n    final fields   = Context.getBuildFields();\n    final output   = [];\n    final families = new Array<FamilyDefinition>();\n\n    if (Utils.invalidationFile != null) {\n        sys.io.File.saveContent(Utils.invalidationFile, Std.string(Math.random() * 2147483647));\n\n#if (debug && !ecs.no_debug_output)\n        Sys.println('[ecs] System ${ Context.getLocalClass().get().name } wrote to invalidation file ${ Utils.invalidationFile }');\n#end\n    }\n\n    for (field in fields)\n    {\n        if (hasMeta(field, ':fastFamily'))\n        {\n            switch extractFastFamily(field)\n            {\n                case Ok(data):\n                    families.push({\n                        name       : field.name,\n                        pos        : field.pos,\n                        components : data.map(f -> {\n                            final resolved  = try Context.resolveType(f.type, field.pos) catch (_) Context.error('Unable to resolve component type ${ f.type.toString() }', field.pos);\n                            final signature = Utils.signature(resolved);\n\n                            return new RegisteredField(f.name, resolved, signature, registerComponent(signature, resolved));\n                        }),\n                        resources  : []\n                    });\n                case Error(error): Context.error(error.message, error.pos);\n            }\n        }\n        else if (hasMeta(field, ':fullFamily'))\n        {\n            switch extractFullFamily(field)\n            {\n                case Ok(data):\n                    families.push({\n                        name       : data.name,\n                        pos        : field.pos,\n                        components : switch data.components\n                        {\n                            case Ok(array):\n                                array.map(f -> {\n                                    final resolved  = try Context.resolveType(f.type, field.pos) catch (_) Context.error('Unable to resolve component type ${ f.type.toString() }', field.pos);\n                                    final signature = Utils.signature(resolved);\n\n                                    return new RegisteredField(f.name, resolved, signature, registerComponent(signature, resolved));\n                                });\n                            case Error(error):\n                                Context.error(error.message, error.pos);\n                        },\n                        resources : switch data.resources\n                        {\n                            case Ok(array):\n                                array.map(f -> {\n                                    final resolved  = try Context.resolveType(f.type, field.pos) catch (_) Context.error('Unable to resolve resource type ${ f.type.toString() }', field.pos);\n                                    final signature = Utils.signature(resolved);\n\n                                    return new RegisteredField(f.name, resolved, signature, registerResource(signature));\n                                });\n                            case Error(error):\n                                Context.error(error.message, error.pos);\n                        }\n                    });\n                case Error(error): Context.error(error.message, field.pos);\n            }\n        }\n        else\n        {\n            output.push(field);\n        }\n    }\n\n    final currentClass = Context.getLocalClass().get();\n\n    // This assignment expression in inserted into the systems constructor directly after the \n    final assignment = macro {\n        @:mergeBlock $b{ [\n            // First pass over the extracted families we define a new family field in the system for that type.\n            for (idx => family in families)\n            {\n                output.push({\n                    name   : family.name,\n                    pos    : family.pos,\n                    access : [ AFinal ],\n                    kind   : FVar(macro : ecs.Family)\n                });\n        \n                family.components.sort(sortFields);\n                family.resources.sort(sortFields);\n    \n                // We then insert expressions to fet all families from the universe.\n                final clsKey = '${ Utils.signature(Context.getLocalType()) }-${ family.name }';\n        \n                macro $i{ family.name } = universe.families.get($v{ registerFamily(clsKey, family) });\n            }\n        ] }\n\n        @:mergeBlock $b{ [\n            // For all unique components add a `Components<T>` member field and insert a call to populate it\n            for (idx => component in getUniqueComponents(currentClass, families))\n            {\n                final ct   = component.type.toComplexType();\n                final name = 'table${ component.hash }';\n\n                output.push({\n                    name   : name,\n                    pos    : Context.currentPos(),\n                    access : [ AFinal ],\n                    kind   : FVar(macro : ecs.Components<$ct>)\n                });\n\n                macro $i{ name } = cast universe.components.getTable($v{ component.uID });\n            }\n        ] }\n    }\n\n    switch output.find(f -> f.name == 'new')\n    {\n        case null:\n            output.push({\n                name   : 'new',\n                pos    : Context.currentPos(),\n                access : [ APublic ],\n                kind   : FFun({\n                    args: [ { name: '_universe', type: macro : ecs.Universe } ],\n                    expr: macro {\n                        super(_universe);\n\n                        @:mergeBlock $e{ assignment }\n                    }\n                })\n            });\n        case existing:\n            switch existing.kind\n            {\n                case FFun({ expr : { expr : EBlock(exprs), pos : p } }):\n                    var injected = false;\n\n                    for (idx => expr in exprs)\n                    {\n                        switch expr.expr\n                        {\n                            case ECall(e, _):\n                                if (e.expr.match(EConst(CIdent('super'))))\n                                {\n                                    if (idx + 1 >= exprs.length)\n                                    {\n                                        exprs.push(assignment);\n                                    }\n                                    else\n                                    {\n                                        exprs.insert(idx + 1, assignment);\n                                    }\n\n                                    injected = true;\n                                }\n                            case _:\n                                //\n                        }\n\n                        if (injected)\n                        {\n                            break;\n                        }\n                    }\n\n                    if (!injected)\n                    {\n                        Context.error('Failed to find constructor super call to inject family setup code', p);\n                    }\n                case other:\n                    Context.error('Expected constructor to be a function, found $other', existing.pos);\n            }\n    }   \n\n    return output;\n}\n\n/**\n * Returns if a field has the provided metadata string.\n * @param _field Field to check.\n * @param _meta Meta data name.\n */\nprivate function hasMeta(_field : Field, _meta : String)\n{\n    if (_field.meta == null || _field.meta.length == 0)\n    {\n        return false;\n    }\n\n    for (meta in _field.meta)\n    {\n        if (meta.name == _meta)\n        {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Given a field it will attempt to extract a family definition from just the requested components.\n * Empty arrays will be used for the resources and exclusions.\n * An error will be returned if any unexpected expression types are encountered.\n * @param _field Field to check.\n * @return Result<FamilyDefinition, String>\n */\nprivate function extractFastFamily(_field : Field)\n{\n    return switch _field.kind\n    {\n        case FVar(TAnonymous(fields), _): extractFamilyComponentsFromObject(fields);\n        case other: Error(new FamilyError('Unexpected field kind $other, expected FVar', _field.pos));\n    }\n}\n\n/**\n * Given a field it will attempt to extract a fully defined family from the expression within.\n * If any part of the definition is missing an empty array will be used in its place.\n * An error will be returned if any unexpected expression types are encountered.\n * @param _field Field to check.\n * @return Result<FamilyDefinition, String>\n */\nprivate function extractFullFamily(_field : Field) : Result<{ name : String, components : Result<ReadOnlyArray<FamilyField>, FamilyError>, resources : Result<ReadOnlyArray<FamilyField>, FamilyError> }, FamilyError>\n{\n    return switch _field.kind\n    {\n        case FVar(TAnonymous(fields), _):\n            final requires = fields\n                .find(f -> f.name == 'requires')\n                .let(f -> switch f.kind\n                    {\n                        case FVar(TAnonymous(fields), _): extractFamilyComponentsFromObject(fields);\n                        case other: Error(new FamilyError('Unexpected object field expression $other', f.pos));\n                    })\n                .or(Ok([]));\n            final resources = fields\n                .find(f -> f.name == 'resources')\n                .let(f -> switch f.kind\n                    {\n                        case FVar(TAnonymous(fields), _): extractFamilyComponentsFromObject(fields);\n                        case other: Error(new FamilyError('Unexpected object field expression $other', f.pos));\n                    })\n                .or(Ok([]));\n\n            Ok({\n                name       : _field.name,\n                components : requires,\n                resources  : resources\n            });\n        case other: Error(new FamilyError('Unexpected field kind ${ other }, expected FVar', _field.pos));\n    }\n}\n\n/**\n * Extracts all the `EConst(CIdent(_))` names from an array of object fields.\n * Returned family fields are lexographically ordered by their name.\n * If any other expressions are found an error is returned.\n * @param _fields Object fields to search through.\n * @return Result<ReadOnlyArray<FamilyField>, Exception>\n */\nprivate function extractFamilyComponentsFromObject(_fields : ReadOnlyArray<Field>) : Result<ReadOnlyArray<FamilyField>, FamilyError>\n{\n    final extracted = new Array<FamilyField>();\n\n    for (field in _fields)\n    {\n        switch field.kind\n        {\n            case FVar(ct, _):\n                extracted.push({\n                    name : field.name,\n                    type : ct\n                });\n            case other:\n                return Error(new FamilyError('Unexpected expression ${ other }, expected FVar(_, EConst(CIdent(_)))', field.pos));\n        }\n    }\n\n    return Ok(extracted);\n}\n\n/**\n * Given a number of families returns all unique components requested by all of them.\n * This function checks by type not component variable name.\n * @param _class Class of the system being constructed, used to ensure we don't redefine the same component twice.\n * @param _families Families to search.\n * @return ReadOnlyArray<FamilyField>\n */\nprivate function getUniqueComponents(_class : ClassType, _families : ReadOnlyArray<FamilyDefinition>) : ReadOnlyArray<RegisteredField>\n{\n    final components = new Array<RegisteredField>();\n\n    for (family in _families)\n    {\n        for (component in family.components)\n        {\n            if (!components.exists(f -> f.uID == component.uID) && _class.findField('table${ component.hash }') == null)\n            {\n                components.push(component);\n            }\n        }\n    }\n\n    return components;\n}\n\n/**\n * Function to sort two objects based on a name field.\n * @param o1 Object 1.\n * @param o2 Object 2.\n */\nprivate function sortFields(o1 : RegisteredField, o2 : RegisteredField)\n{\n    final name1 = o1.hash;\n    final name2 = o2.hash;\n\n    if (name1 < name2)\n    {\n        return -1;\n    }\n    if (name1 > name2)\n    {\n        return 1;\n    }\n\n    return 0;\n}","package ecs;\n\nimport ecs.ds.Unit;\nimport ecs.ds.Signal;\nimport ecs.ds.SparseSet;\nimport bits.Bits;\n\nclass Family\n{\n    public final id : Int;\n\n    public final componentsMask : Bits;\n\n    public final resourcesMask : Bits;\n\n    public final onActivated : Signal<Unit>;\n\n    public final onDeactivated : Signal<Unit>;\n\n    public final onEntityAdded : Signal<Entity>;\n\n    public final onEntityRemoved : Signal<Entity>;\n\n    final entities : SparseSet;\n\n    var active : Bool;\n\n    public function new(_id, _cmpMask, _resMask, _size)\n    {\n        id              = _id;\n        componentsMask  = _cmpMask;\n        resourcesMask   = _resMask;\n        onEntityAdded   = new Signal();\n        onEntityRemoved = new Signal();\n        onActivated     = new Signal();\n        onDeactivated   = new Signal();\n        entities        = new SparseSet(_size);\n        active          = false;\n    }\n\n    public function add(_entity)\n    {\n        if (!entities.has(_entity))\n        {\n            entities.insert(_entity);\n\n            if (isActive())\n            {\n                onEntityAdded.notify(_entity);\n            }\n        }\n    }\n\n    public function remove(_entity)\n    {\n        if (entities.has(_entity))\n        {           \n            if (isActive())\n            {\n                onEntityRemoved.notify(_entity);\n            }\n\n            entities.remove(_entity);\n        }\n    }\n\n    public function has(_entity)\n    {\n        return entities.has(_entity);\n    }\n\n    public function activate()\n    {\n        if (!active)\n        {\n            active = true;\n\n            onActivated.notify(Unit.unit);\n\n            for (i in 0...entities.size())\n            {\n                onEntityAdded.notify(entities.getDense(i));\n            }\n        }\n    }\n\n    public function deactivate()\n    {\n        if (active)\n        {\n            for (i in 0...entities.size())\n            {\n                onEntityRemoved.notify(entities.getDense(i));\n            }\n\n            onDeactivated.notify(Unit.unit);\n\n            active = false;\n        }\n    }\n\n    public inline function size()\n    {\n        return entities.size();\n    }\n    \n    public function isActive()\n    {\n        return active;\n    }\n\n    public inline function iterator()\n    {\n        return new FamilyIterator(entities, isActive());\n    }\n}\n\nprivate class FamilyIterator\n{\n    final set : SparseSet;\n\n    final active : Bool;\n\n    var idx : Int;\n\n    public inline function new(_set, _active)\n    {\n        set    = _set;\n        active = _active;\n        idx    = _set.size() - 1;\n    }\n\n    public inline function hasNext()\n    {\n        return active && idx >= 0;\n    }\n\n    public inline function next()\n    {\n        return set.getDense(idx--);\n    }\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\")\nclass ArrayKeyValueIterator<T> {\n\tvar current:Int = 0;\n\tvar array:Array<T>;\n\n\tpublic inline function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn current < array.length;\n\t}\n\n\tpublic inline function next():{key:Int,value:T} {\n\t\treturn {value:array[current], key:current++};\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n@:keep\nclass Archive extends CommandBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Archive:\n\t\t\t\t// Archive role\n\t\t\t\tvar role = '1019915584546291712';\n\n\t\t\t\tinteraction.member.fetch(true).then(function(member) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (key => _ in member.roles.cache) {\n\t\t\t\t\t\tif (key == role) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tinteraction.member.roles.remove(role).then(function(success) {\n\t\t\t\t\t\t\tinteraction.reply('Archives are hidden');\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinteraction.member.roles.add(role).then(function(success) {\n\t\t\t\t\t\t\tinteraction.reply('Archives are shown');\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'archive';\n\t}\n}\n","/*\n * Copyright (C)2005-2024 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nclass HaxeKeyValueIterator<K, V> {\n\tfinal jsIterator:js.lib.Iterator<KeyValue<K, V>>;\n\tvar lastStep:js.lib.Iterator.IteratorStep<KeyValue<K, V>>;\n\n\tpublic inline function new(jsIterator:js.lib.Iterator<KeyValue<K, V>>) {\n\t\tthis.jsIterator = jsIterator;\n\t\tlastStep = jsIterator.next();\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn !lastStep.done;\n\t}\n\n\tpublic inline function next():{key:K, value:V} {\n\t\tvar v = lastStep.value;\n\t\tlastStep = jsIterator.next();\n\t\treturn {key: v.key, value: v.value};\n\t}\n\n\tpublic static inline function keyValueIterator<K, V>(jsIterator:js.lib.Iterator<KeyValue<K, V>>) {\n\t\treturn new HaxeKeyValueIterator(jsIterator);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n/**\n\tThe (native) JavaScript Map object holds key-value pairs.\n\tAny value (both objects and primitive values) may be used as either a key\n\tor a value.\n\n\tDocumentation [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Map\")\nextern class Map<K, V> {\n\t/**\n\t\tThe number of key/value pairs in the `js.Map` object.\n\t**/\n\tvar size(default, null):Int;\n\n\t/**\n\t\tAn Array or other iterable object whose elements are key-value pairs\n\t\t(arrays with two elements, e.g. `[[ 1, 'one' ],[ 2, 'two' ]]`).\n\t\tEach key-value pair is added to the new `js.Map`;\n\t\tnull values are treated as undefined.\n\t**/\n\t@:pure function new(?iterable:Any);\n\n\t/**\n\t\tA boolean asserting whether a value has been associated to the key in\n\t\tthe `js.Map` object or not.\n\t**/\n\t@:pure function has(key:K):Bool;\n\n\t/**\n\t\tThe value associated to the key, or `null` if there is none.\n\t**/\n\t@:pure function get(key:K):Null<V>;\n\n\t/**\n\t\tSets the value for the key in the Map object.\n\t\tReturns the `js.Map` object.\n\t**/\n\tfunction set(key:K, value:V):Map<K, V>;\n\n\t/**\n\t\tReturns `true` if an element in the `js.Map` object existed and has been\n\t\tremoved, or `false` if the element does not exist.\n\t\t`has(key)` will return `false` afterwards.\n\t**/\n\tfunction delete(key:K):Bool;\n\n\t/**\n\t\tRemoves all key/value pairs from the Map object.\n\t**/\n\tfunction clear():Void;\n\n\t/**\n\t\tCalls `callback` once for each key-value pair present in the `js.Map`\n\t\tobject, in insertion order.\n\n\t\tIf a `thisArg` parameter is provided to forEach, it will be used as the\n\t\t`this` value for each callback.\n\t**/\n\tfunction forEach(callback:(value:V, key:K, map:Map<K, V>) -> Void, ?thisArg:Any):Void;\n\n\t/**\n\t\tReturns a new `Iterator` object that contains the keys for each element\n\t\tin the `js.Map` object in insertion order.\n\t**/\n\tfunction keys():js.lib.Iterator<K>;\n\n\t/**\n\t\tReturns a new `Iterator` object that contains the values for each\n\t\telement in the `js.Map` object in insertion order.\n\t**/\n\tfunction values():js.lib.Iterator<V>;\n\n\t/**\n\t\tReturns a new `Iterator` object that contains an array of `KeyValue`\n\t\tfor each element in the `js.Map` object in insertion order.\n\t**/\n\tfunction entries():js.lib.Iterator<KeyValue<K, V>>;\n\n\tinline function iterator():js.lib.HaxeIterator<V> {\n\t\treturn new HaxeIterator(this.values());\n\t}\n\n\tinline function keyValueIterator():HaxeKeyValueIterator<K, V> {\n\t\treturn new HaxeKeyValueIterator(this.entries());\n\t}\n}\n\n@:deprecated typedef MapEntry<K, V> = KeyValue<K, V>;","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n/**\n\tKey/value access helper.\n**/\nabstract KeyValue<K, V>(Array<Any>) {\n\tpublic var key(get, never):K;\n\tpublic var value(get, never):V;\n\n\tinline function get_key():K {\n\t\treturn this[0];\n\t}\n\n\tinline function get_value():V {\n\t\treturn this[1];\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport systems.CommandBase;\nimport discord_js.GuildMember;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport Main;\n\nclass AutoRole extends CommandBase {\n\t@:fastFamily var users:{command:CommandForward, member:GuildMember};\n\tfinal news_role_id:String = \"761714325227700225\";\n\tfinal event_role_id:String = \"1054432874473996408\";\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(users, (entity) -> {\n\t\t\tswitch(command) {\n\t\t\t\tcase add_event_role:\n\t\t\t\t\tmember.roles.add(event_role_id).then(null, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t\tmember.roles.add(news_role_id).then(null, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tfunction get_name():String {\n\t\treturn 'autorole';\n\t}\n}\n","package commands;\n\nimport discord_js.ThreadChannel;\nimport discord_js.TextChannel;\nimport js.Browser;\nimport systems.CommandBase;\nimport discord_js.GuildMember;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport Main;\n\nclass AutoThread extends CommandBase {\n\t@:fastFamily var users:{command:CommandForward, member:GuildMember};\n\tfinal news_role_id:String = \"761714325227700225\";\n\tfinal event_role_id:String = \"1054432874473996408\";\n\tfinal announcement_channel:String = #if block '597067735771381771' #else '286485321925918721' #end;\n\tvar announcement:TextChannel;\n\tvar checking:Bool = false;\n\tfinal news_feed:String = '1030188275341729882';\n\tvar news_feed_channel:ThreadChannel;\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\tif (this.announcement == null && !this.checking) {\n\t\t\tthis.checking = true;\n\t\t\tMain.client.channels.fetch(announcement_channel).then(function(channel) {\n\t\t\t\tthis.announcement = cast channel;\n\t\t\t\tthis.checking = false;\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\n\t\tif (this.announcement != null && !this.checking) {\n\t\t\tchecking = true;\n\t\t\tthis.announcement.threads.fetch(news_feed).then(function(succ) {\n\t\t\t\tthis.news_feed_channel = succ;\n\t\t\t\tchecking = false;\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\n\t\tif (this.announcement == null && news_feed == null) {\n\t\t\treturn;\n\t\t}\n\n\t\titerate(users, (entity) -> {\n\t\t\tswitch(command) {\n\t\t\t\tcase auto_thread:\n\t\t\t\t\tnews_feed_channel.members.add(member.id).then(null, (err) -> trace(err));\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tfunction get_name():String {\n\t\treturn 'autothread';\n\t}\n}\n","package commands;\n\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Boop extends CommandBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Boop(user):\n\t\t\t\tinteraction.reply('*boop* <@${user.id}>');\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'boop';\n\t}\n}\n","package commands;\n\nimport discord_js.MessageEmbed;\nimport discord_builder.APIActionRowComponent;\nimport discord_builder.APITextInputComponent;\nimport discord_builder.ModalBuilder;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport Main.CommandForward;\n\nclass Code extends CommandBase {\n\t@:fastFamily var something_else:{forward:CommandForward, interaction:BaseCommandInteraction};\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(something_else, entity -> {\n\t\t\ttrace('here');\n\t\t\ttrace(forward);\n\t\t\tswitch (forward) {\n\t\t\t\tcase code_paste:\n\t\t\t\t\tvar start = interaction.fields.getTextInputValue('start').parseInt();\n\t\t\t\t\tvar problem = interaction.fields.getTextInputValue('problem');\n\t\t\t\t\tvar code = cleanSpace(interaction.fields.getTextInputValue('code'));\n\n\t\t\t\t\tif (start == null) {\n\t\t\t\t\t\tstart = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\t\tvar desc = '';\n\t\t\t\t\tvar new_code = '';\n\t\t\t\t\tfor (key => value in code.split('\\n')) {\n\t\t\t\t\t\tnew_code += '${start + key}: $value\\n';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar content = '**__Code__**\\n```hx\\n$new_code\\n```\\n**__Problem__**\\n$problem';\n\t\t\t\t\tembed.setDescription(content);\n\t\t\t\t\tinteraction.reply({embeds: [embed]}).then(null, (err) -> trace(err)); \n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction cleanSpace(code:String) {\n\t\tvar shallowest = 500;\n\t\tvar largest = 0;\n\t\tvar tabs = false;\n\n\t\tcode = code.replace('`', '\\\\`');\n\n\t\tfor (line in code.split('\\n')) {\n\t\t\tvar first_char_pos = -1;\n\t\t\tvar depth = 0;\n\n\t\t\tfor (i in 0...line.length) {\n\t\t\t\tvar char = line.charAt(i);\n\t\t\t\tif (char == ' ' || char == '\\t') {\n\t\t\t\t\tif (char == '\\t') {\n\t\t\t\t\t\ttabs = true;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfirst_char_pos = i;\n\t\t\t\tdepth = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (depth < shallowest && depth != 0) {\n\t\t\t\tshallowest = depth;\n\t\t\t}\n\n\t\t\tif (depth > largest) {\n\t\t\t\tlargest = depth;\n\t\t\t}\n\t\t}\n\n\t\tvar new_code = '';\n\t\tfor (line in code.split('\\n')) {\n\t\t\tnew_code += line.substring(shallowest) + '\\n';\n\t\t}\n\t\treturn new_code;\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tvar modal = new ModalBuilder().setCustomId('code_paste').setTitle('Code paste');\n\n\t\tvar problem = new APITextInputComponent().setCustomId('problem')\n\t\t\t.setLabel('Problem description')\n\t\t\t.setStyle(Paragraph)\n\t\t\t.setRequired(true)\n\t\t\t.setPlaceholder('Describe your issue and post any error messages here');\n\t\tvar from = new APITextInputComponent().setCustomId('start')\n\t\t\t.setLabel('First line number')\n\t\t\t.setStyle(Short)\n\t\t\t.setMinLength(1)\n\t\t\t.setMaxLength(5)\n\t\t\t.setPlaceholder('The starting line number of the code you are pasting');\n\n\t\tvar code = new APITextInputComponent().setCustomId('code')\n\t\t\t.setLabel('Code')\n\t\t\t.setStyle(Paragraph)\n\t\t\t.setMinLength(10)\n\t\t\t.setMaxLength(2000);\n\n\t\tvar action_a = new APIActionRowComponent().addComponents(from);\n\t\tvar action_c = new APIActionRowComponent().addComponents(code);\n\t\tvar action_d = new APIActionRowComponent().addComponents(problem);\n\n\t\tmodal.addComponents(action_a, action_c, action_d);\n\t\tinteraction.showModal(modal);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'code';\n\t}\n}\n","package commands;\n\nimport commands.types.ContextMenuTypes;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass CodeLineNumbers extends CommandBase {\n\t@:fastFamily var options:{route:ContextMenuTypes, interaction:BaseCommandInteraction};\n\n\toverride function update(_) {\n\t\titerate(options, entity -> {\n\t\t\tswitch (route) {\n\t\t\t\tcase CodeLineNumbers:\n\t\t\t\t\tvar message = interaction.targetMessage;\n\t\t\t\t\tif (message.author.id != interaction.member.id) {\n\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\tcontent: \"Hey, that isn't your message! :angry:\",\n\t\t\t\t\t\t\tephemeral: true\n\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t}\n\t\t\t\t\tif (message != null && message.content.length > 0) {\n\t\t\t\t\t\tvar replace = parseString(message.content);\n\t\t\t\t\t\tif (replace != null) {\n\t\t\t\t\t\t\tinteraction.reply({content: replace}).then(function(_) {\n\t\t\t\t\t\t\t\tmessage.delete().then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t\t{content: \"No compatible code blocks were found. Only standard block or hx/haxe are supported.\",\n\t\t\t\t\t\t\t\t\tephemeral: true}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction parseString(content:String) {\n\t\tvar matched = [];\n\t\tvar index = 0;\n\t\tvar start = -1;\n\t\tvar blocks = ['```hx\\n', '```haxe\\n', '```\\n'];\n\t\tvar selected = null;\n\n\t\tfor (opt in blocks) {\n\t\t\tif (content.contains(opt)) {\n\t\t\t\tselected = opt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (selected == null) {\n\t\t\ttrace('no compatible code block');\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (index != -1) {\n\t\t\tvar pos = start;\n\t\t\tif (pos > -1) {\n\t\t\t\tpos += selected.length;\n\t\t\t} else {\n\t\t\t\tpos = 0;\n\t\t\t}\n\t\t\tindex = content.indexOf(selected, pos);\n\t\t\tstart = index;\n\t\t\tif (index == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar line_end = -1;\n\t\t\tvar cursor = start - 1;\n\t\t\twhile (line_end == -1) {\n\t\t\t\tvar char = content.charAt(cursor);\n\t\t\t\tif (char == '\\n') {\n\t\t\t\t\tline_end = cursor + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcursor++;\n\t\t\t}\n\n\t\t\tmatched.push({start: start, end: start + selected.length});\n\t\t\tif (selected != '```\\n') {\n\t\t\t\tvar end_tag = content.indexOf('```', index + selected.length);\n\t\t\t\tmatched.push({start: end_tag, end: end_tag + selected.length});\n\t\t\t}\n\t\t}\n\t\tvar replace = content;\n\t\tfor (i => pos in matched) {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar last = matched[i - 1];\n\t\t\tvar ogcode = content.substring(last.end, pos.start);\n\t\t\tvar lines = addLineNumbers(ogcode);\n\t\t\treplace = replace.replace(ogcode, lines);\n\t\t}\n\n\t\treturn replace;\n\t}\n\n\tfunction addLineNumbers(code:String) {\n\t\tvar new_code = '\\n';\n\t\tcode = code.rtrim();\n\t\tvar split = code.split('\\n');\n\t\tfor (key => value in split) {\n\t\t\tvar new_line = false;\n\t\t\tif (key + 1 < split.length) {\n\t\t\t\tnew_line = true;\n\t\t\t}\n\t\t\tnew_code += '${key + 1}: $value';\n\t\t\tif (new_line) {\n\t\t\t\tnew_code += '\\n';\n\t\t\t}\n\t\t}\n\n\t\treturn new_code;\n\t}\n\n\tfunction cleanSpace(code:String) {\n\t\tvar shallowest = 500;\n\t\tvar largest = 0;\n\t\tvar tabs = false;\n\n\t\tcode = code.replace('`', '\\\\`');\n\n\t\tfor (line in code.split('\\n')) {\n\t\t\tvar first_char_pos = -1;\n\t\t\tvar depth = 0;\n\n\t\t\tfor (i in 0...line.length) {\n\t\t\t\tvar char = line.charAt(i);\n\t\t\t\tif (char == ' ' || char == '\\t') {\n\t\t\t\t\tif (char == '\\t') {\n\t\t\t\t\t\ttabs = true;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfirst_char_pos = i;\n\t\t\t\tdepth = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (depth < shallowest && depth != 0) {\n\t\t\t\tshallowest = depth;\n\t\t\t}\n\n\t\t\tif (depth > largest) {\n\t\t\t\tlargest = depth;\n\t\t\t}\n\t\t}\n\n\t\tvar new_code = '';\n\t\tfor (line in code.split('\\n')) {\n\t\t\tnew_code += line.substring(shallowest) + '\\n';\n\t\t}\n\t\treturn new_code;\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\t// trace('here');\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'codelinenumbers';\n\t}\n}\n","package commands;\n\nimport Main.CommandForward;\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Color extends CommandBase {\n\tvar roles:Map<String, String>;\n\toverride function onEnabled() {\n\t\troles = [\n\t\t\t\"Orange\" => \"1164160370232012830\",\n\t\t\t\"Yellow\" => \"1164236800747900948\",\n\t\t\t\"Purple\" => \"1164237188561653770\",\n\t\t\t\"Red\" => \"1164237399719673916\",\n\t\t\t\"Sky Blue\" => \"1134786690754555916\",\n\t\t\t\"Pink\" => \"1164238547293847622\",\n\t\t\t\"Green\" =>  \"1164239067353985084\",\n\t\t\t\"Grey\" => \"1164239176686915672\",\n\t\t\t\"Blue\" => \"1164328144241696882\",\n\t\t\t\"Default\" => \"Default\"\n\t\t];\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Color(role_name):\n\t\t\t\tvar role_id = this.roles.get(role_name);\n\t\t\t\tinteraction.member.fetch(true).then(function(member) {\n\t\t\t\t\tvar set_role = null;\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tif (role_id == \"Default\") {\n\t\t\t\t\t\tfor (value in this.roles) {\n\t\t\t\t\t\t\tfor (role in member.roles.cache) {\n\t\t\t\t\t\t\t\tif (value == role.id) {\n\t\t\t\t\t\t\t\t\tmember.roles.remove(role.id).then(function(_) {\n\t\t\t\t\t\t\t\t\t\tinteraction.reply('Color set to default');\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinteraction.reply(\"You're already on the default color!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (value in member.roles.cache) {\n\t\t\t\t\t\tfor (k => v in this.roles) {\n\t\t\t\t\t\t\tif (value.id == v) {\n\t\t\t\t\t\t\t\tmember.roles.remove(value.id).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tinteraction.member.roles.add(role_id).then(function(success) {\n\t\t\t\t\t\tinteraction.reply({content: 'Color changed!'}).then(null, (err) -> trace(err));\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\ttrace('found $set_role');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction rollRemoved(interaction:BaseCommandInteraction, response:Dynamic) {\n\t\tinteraction.reply('Removed');\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'color';\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n/**\n\t`HaxeIterator` wraps a JavaScript native iterator object to enable for-in iteration in haxe.\n\tIt can be used directly: `new HaxeIterator(jsIterator)` or via using: `using HaxeIterator`.\n**/\nclass HaxeIterator<T> {\n\n\tfinal jsIterator: js.lib.Iterator<T>;\n\tvar lastStep: js.lib.Iterator.IteratorStep<T>;\n\n\tpublic inline function new(jsIterator: js.lib.Iterator<T>) {\n\t\tthis.jsIterator = jsIterator;\n\t\tlastStep = jsIterator.next();\n\t}\n\n\tpublic inline function hasNext(): Bool {\n\t\treturn !lastStep.done;\n\t}\n\n\tpublic inline function next(): T {\n\t\tvar v = lastStep.value;\n\t\tlastStep = jsIterator.next();\n\t\treturn v;\n\t}\n\n\tpublic static inline function iterator<T>(jsIterator: js.lib.Iterator<T>) {\n\t\treturn new HaxeIterator(jsIterator);\n\t}\n\n}","package systems;\n\nimport haxe.PosInfos;\nimport firebase.web.firestore.DocumentReference;\nimport firebase.web.app.FirebaseApp;\nimport firebase.web.firestore.Firestore;\nimport firebase.web.firestore.Firestore.*;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport ecs.System;\n\nabstract class CommandDbBase extends System {\n\tvar has_subcommands:Bool = false;\n\tvar db(get, never):Firestore;\n\n\t@:fastFamily var commands:{command:Command, interaction:BaseCommandInteraction};\n\n\toverride function update(_) {\n\t\tif (!Main.connected || !Main.commands_active) {\n\t\t\treturn;\n\t\t}\n\t\titerate(commands, entity -> {\n\t\t\tif (this.has_subcommands) {\n\t\t\t\tif (command.name.indexOf(this.name, 0) != -1) {\n\t\t\t\t\tthis.run(command, interaction);\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (command.name == this.name) {\n\t\t\t\t\tthis.run(command, interaction);\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic inline function addDoc<T>(path:String, data:T, success:(doc:DocumentReference<T>) -> Void, failure:(error:Dynamic) -> Void) {\n\t\tFirestore.addDoc(collection(this.db, path), data).then(success, failure);\n\t}\n\n\tprivate inline function get_db() {\n\t\treturn Firestore.getFirestore(FirebaseApp.getApp());\n\t}\n\n\tabstract function run(command:Command, interaction:BaseCommandInteraction):Void;\n\n\tvar name(get, never):String;\n\n\tabstract function get_name():String;\n}\n","package commands;\n\nimport js.Browser;\nimport commands.types.ContextMenuTypes;\nimport discord_js.ThreadChannel;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandDbBase;\nimport Main.CommandForward;\nimport discord_builder.ButtonBuilder;\nimport discord_builder.APIActionRowComponent;\n\nclass DeleteProject extends CommandDbBase {\n\t@:fastFamily var options:{route:ContextMenuTypes, interaction:BaseCommandInteraction};\n\n\toverride function update(_) {\n\t\titerate(options, entity -> {\n\t\t\tswitch (route) {\n\t\t\t\tcase DeleteProject:\n\t\t\t\t\tvar author = interaction.user.id;\n\t\t\t\t\tif (interaction.channel.isThread()) {\n\t\t\t\t\t\tvar confirm = new ButtonBuilder().setCustomId('deleteProjectConfirm').setLabel('Confirm Delete').setStyle(ButtonStyle.Danger);\n\t\t\t\t\t\tvar cancel = new ButtonBuilder().setCustomId('deleteProjectCancel').setLabel('Cancel').setStyle(ButtonStyle.Secondary);\n\t\t\t\t\t\tvar row = new APIActionRowComponent();\n\t\t\t\t\t\trow.addComponents(cancel, confirm);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar thread = cast(interaction.channel, ThreadChannel);\n\t\t\t\t\t\t\tif (thread.ownerId == author) {\n\t\t\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\t\t\tcontent: \"Are you sure you want to delete this project? All messages within this thread will be erased - It is **permanent** and **cannot** be undone.\",\n\t\t\t\t\t\t\t\t\tcomponents: [row]\n\t\t\t\t\t\t\t\t}).then(function(response) {\n\t\t\t\t\t\t\t\t\tresponse.awaitMessageComponent({\n\t\t\t\t\t\t\t\t\t\tfilter: function(a, b) {\n\t\t\t\t\t\t\t\t\t\t\tswitch (a.customId) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'deleteProjectConfirm':\n\t\t\t\t\t\t\t\t\t\t\t\t\tthread.delete('User requested delete').then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\ta.update({content: \"Request cancelled.\", components: []}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}).then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\tif ((err?.message : String).indexOf('threadDelete') != -1) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinteraction.reply({content: \"This isn't your thread! :angry:\", ephemeral: true});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e ) {\n\t\t\t\t\t\t\ttrace('thread cast failed');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\tcontent: '*This only works for threads :)*',\n\t\t\t\t\t\t\tephemeral: true\n\t\t\t\t\t\t}).then(null, function(err) trace(err));\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\ttrace('here');\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'deleteproject';\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport database.DBEvents;\nimport database.types.DBEmoji;\nimport db.Record;\nimport discord_builder.ModalBuilder;\nimport discord_builder.APITextInputComponent;\nimport discord_builder.APIActionRowComponent;\nimport Main.CommandForward;\n\nclass Emoji extends CommandBase {\n\t@:fastFamily var modal:{forward:CommandForward, interaction:BaseCommandInteraction};\n\tvar cache:Map<String, DBEmoji> = [];\n\tfinal max_name_length = 35;\n\tfinal super_mod_id:String = #if block '1114582456381747232' #else '198916468312637440' #end;\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(modal, entity -> {\n\t\t\tswitch (forward) {\n\t\t\t\tcase emoji_edit:\n\t\t\t\t\tvar emoji = this.cache.get(interaction.user.id);\n\t\t\t\t\tvar url = interaction.fields.getTextInputValue('url');\n\t\t\t\t\temoji.description = interaction.fields.getTextInputValue('description');\n\n\t\t\t\t\tvar e = DBEvents.GetRecord('emojis', Query.query($url == url), function(resp) {\n\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\t\tif (data != null && data.field('name') != emoji.name) {\n\t\t\t\t\t\t\t\t\tinteraction.reply('An emoji already exists with that image **__${data.field('name')}__**')\n\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\temoji.name = name.toLowerCase();\n\t\t\t\t\t\t\t\tvar e = DBEvents.Update('emojis', emoji.record, Query.query($id == emoji.id && $author_id == emoji.author_id),\n\t\t\t\t\t\t\t\t\tfunction(resp) {\n\t\t\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\t\t\tcase Success(message, _):\n\t\t\t\t\t\t\t\t\t\t\t\ttrace('$message');\n\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply('Emoji updated!').then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\ttrace(this.cache.get(interaction.user.id));\n\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply('Something went wrong').then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis.cache.remove(interaction.user.id);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\tdefault:\n\t\t\t}\n\n\t\t\tif (forward == emoji_edit) {\n\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase EmojiEdit(name):\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tvar e = DBEvents.SearchBy('emojis', 'name', name, 'author_id', interaction.user.id, function(resp) {\n\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\tcase Records(data):\n\t\t\t\t\t\t\t\tvar arr = [];\n\t\t\t\t\t\t\t\tfor (r in data) {\n\t\t\t\t\t\t\t\t\tvar e = DBEmoji.fromRecord(r);\n\t\t\t\t\t\t\t\t\tarr.push({\n\t\t\t\t\t\t\t\t\t\tname: e.name,\n\t\t\t\t\t\t\t\t\t\tvalue: e.id.string()\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinteraction.respond(arr);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\tinteraction.respond([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar e = DBEvents.GetRecord('emojis', Query.query($id == name && $author_id == interaction.user.id), function(resp) {\n\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\tif (data == null) {\n\t\t\t\t\t\t\t\tinteraction.reply('Could not find emoji or you were not the author of the emoji specified');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar emoji = DBEmoji.fromRecord(data);\n\t\t\t\t\t\t\tvar modal = new ModalBuilder().setCustomId('emoji_edit').setTitle('Editting emoji #${emoji.id}');\n\n\t\t\t\t\t\t\tvar url_input = new APITextInputComponent().setCustomId('url')\n\t\t\t\t\t\t\t\t.setLabel('url')\n\t\t\t\t\t\t\t\t.setStyle(Short)\n\t\t\t\t\t\t\t\t.setValue(emoji.url)\n\t\t\t\t\t\t\t\t.setMinLength(8);\n\n\t\t\t\t\t\t\tvar desc_input = new APITextInputComponent().setCustomId('description')\n\t\t\t\t\t\t\t\t.setLabel('Description:')\n\t\t\t\t\t\t\t\t.setStyle(Paragraph)\n\t\t\t\t\t\t\t\t.setValue(emoji.description)\n\t\t\t\t\t\t\t\t.setMinLength(5)\n\t\t\t\t\t\t\t\t.setMaxLength(50);\n\n\t\t\t\t\t\t\tvar action_b = new APIActionRowComponent().addComponents(url_input);\n\t\t\t\t\t\t\tvar action_c = new APIActionRowComponent().addComponents(desc_input);\n\n\t\t\t\t\t\t\tmodal.addComponents(action_b, action_c);\n\n\t\t\t\t\t\t\tthis.cache.set(interaction.user.id, emoji);\n\t\t\t\t\t\t\tinteraction.showModal(modal);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tEcsTools.set(e);\n\t\t\tcase EmojiRemove(name):\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tsearch(name, function(arr) {\n\t\t\t\t\t\tinteraction.respond(arr).then(null, (err) -> trace(err));\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar role_status = hasRole(this.super_mod_id, interaction);\n\t\t\t\tvar record = new Record();\n\t\t\t\tif (!role_status) {\n\t\t\t\t\trecord.field('author_id', interaction.user.id);\n\t\t\t\t}\n\t\t\t\trecord.field('id', name);\n\n\t\t\t\tvar e = DBEvents.DeleteRecord('emojis', record, function(resp) {\n\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\tinteraction.reply('Emoji ${name} deleted!').then(null, (err) -> trace(err));\n\t\t\t\t\t\tcase Error(message, data):\n\t\t\t\t\t\t\ttrace(message);\n\t\t\t\t\t\t\tinteraction.reply({ephemeral: true, content: \"Cannot delete this emoji\"}).then(null, function(err) {\n\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tEcsTools.set(e);\n\t\t\tcase EmojiGet(name, size):\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tsearch(name, function(arr) {\n\t\t\t\t\t\tinteraction.respond(arr).then(null, (err) -> trace(err));\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tvar e = DBEvents.GetRecord('emojis', Query.query($name == name || $id == name), function(resp) {\n\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\tvar emoji = DBEmoji.fromRecord(data);\n\t\t\t\t\t\t\t\tvar url = formatLink(emoji.url, size);\n\t\t\t\t\t\t\t\tinteraction.reply({content: url}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\ttrace(data);\n\t\t\t\t\t\t\tinteraction.reply({content: \"Something went wrong\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tinteraction.reply({content: \"Something went wrong\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tEcsTools.set(e);\n\t\t\tcase EmojiCreate(name, url, description):\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tsearch(name, function(arr) {\n\t\t\t\t\t\tinteraction.respond(arr).then(null, (err) -> trace(err));\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar e = DBEvents.GetRecord('emojis', Query.query($url == url), function(resp) {\n\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\tvar emoji = DBEmoji.fromRecord(data);\n\t\t\t\t\t\t\t\tinteraction.reply({ephemeral: true, content: 'Emoji already exists with name __${emoji.name}__'})\n\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar regex = ~/((((https?:)(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/gm;\n\t\t\t\t\t\t\tif (!regex.match(url)) {\n\t\t\t\t\t\t\t\tinteraction.reply({ephemeral: true, content: 'URL does not appear to be valid'}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar e = DBEvents.GetRecords('emojis', Query.query($name == name || $id == name), function(resp) {\n\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\tcase Records(data):\n\t\t\t\t\t\t\t\t\t\tif (data.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tinteraction.reply({ephemeral: true, content: \"An emoji exists with this name already\"})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar aname = interaction.user.username;\n\t\t\t\t\t\t\t\t\t\tvar aid = interaction.user.id;\n\n\t\t\t\t\t\t\t\t\t\tvar emoji = new DBEmoji(aid, aname, name, url, description);\n\t\t\t\t\t\t\t\t\t\tvar e = DBEvents.Insert('emojis', emoji.record, function(resp) {\n\t\t\t\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply({content: 'Emoji $name has been created'}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply({content: \"Something went wrong\", ephemeral: true})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tinteraction.reply({content: \"Something went wrong\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tinteraction.reply({content: \"Something went wrong\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tEcsTools.set(e);\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction formatLink(url:String, size:String) {\n\t\tif (url.contains('cdn.discordapp.com')) {\n\t\t\tvar split = url.split('?');\n\t\t\tif (split.length > 1) {\n\t\t\t\tif (size == null) {\n\t\t\t\t\tsize = 'small';\n\t\t\t\t}\n\n\t\t\t\tvar dimensions = switch(size) {\n\t\t\t\t\tcase 'medium': 64;\n\t\t\t\t\tcase 'large': 128;\n\t\t\t\t\tdefault: 48;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\turl = split[0] += '?quality=lossless&size=$dimensions';\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t\treturn url;\n\t}\n\n\tfunction search(name:String, callback:Array<{name:String, value:String}>->Void) {\n\t\tvar e = DBEvents.Search('emojis', 'name', name, function(resp) {\n\t\t\tswitch (resp) {\n\t\t\t\tcase Records(data):\n\t\t\t\t\tvar arr = [];\n\t\t\t\t\tfor (r in data) {\n\t\t\t\t\t\tvar e = DBEmoji.fromRecord(r);\n\t\t\t\t\t\tarr.push({\n\t\t\t\t\t\t\tname: e.name,\n\t\t\t\t\t\t\tvalue: e.id.string()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcallback(arr);\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(resp);\n\t\t\t\t\tcallback([]);\n\t\t\t}\n\t\t});\n\n\t\tEcsTools.set(e);\n\t}\n\n\tfunction isId(input:String) {\n\t\tvar check_letters = ~/^[0-9]*$/;\n\t\treturn check_letters.match(input);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'emoji';\n\t}\n}\n","package util;\n\n#if !macro\nimport ecs.System;\nimport ecs.Entity;\nimport ecs.Universe;\n#else\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\nusing haxe.macro.TypeTools;\n#end\n\nclass EcsTools {\n\t#if !macro\n\tstatic var _universe:Universe;\n\tpublic static var universe(get, set):Universe;\n\n\tstatic function get_universe() {\n\t\tif (_universe == null) {\n\t\t\treturn Main.universe;\n\t\t}\n\t\treturn _universe;\n\t}\n\n\tstatic function set_universe(value) {\n\t\treturn _universe = value;\n\t}\n\t#end\n\n\tpublic static macro function delete(self:ExprOf<System>, entity:ExprOf<Entity>):ExprOf<Entity> {\n\t\treturn macro @:pos(self.pos) $self.universe.deleteEntity(entity);\n\t}\n\n\tpublic static macro function set(components:Array<Expr>):ExprOf<Entity> {\n\t\tvar block = [macro var entity = EcsTools.universe.createEntity()];\n\t\tvar arr = [macro entity];\n\t\tfor (comp in components) {\n\t\t\tarr.push(macro @:pos(comp.pos) $comp);\n\t\t}\n\n\t\tblock.push(macro @:pos(components[0].pos) EcsTools.universe.setComponents($a{arr}));\n\t\tblock.push(macro entity);\n\t\treturn macro @:pos(components[0].pos) $b{block};\n\t}\n\n\tpublic static macro function addWithBaseType(components:Array<Expr>):ExprOf<Entity> {\n\t\tvar block = [macro var entity = universe.createEntity()];\n\t\tvar arr = [macro entity];\n\t\tfor (key => comp in components) {\n\t\t\tvar type = Context.typeof(comp);\n\t\t\tvar is_class = type.getName() == 'TInst';\n\t\t\tif (!is_class) {\n\t\t\t\tarr.push(macro @:pos(comp.pos) $comp);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvar type_b = TypeTools.toComplexType(TInst(type.getClass().superClass.t, type.getClass().superClass.params));\n\t\t\t\tswitch (comp.expr) {\n\t\t\t\t\tcase ENew(t, params):\n\t\t\t\t\t\tblock.push(macro @:pos(comp.pos) var __tmp_remap = $comp);\n\t\t\t\t\t\tarr.push(macro @:pos(comp.pos) __tmp_remap);\n\t\t\t\t\t\tarr.push(macro @:pos(comp.pos) (__tmp_remap : $type_b));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tarr.push(macro @:pos(comp.pos) $comp);\n\t\t\t\t\t\tarr.push(macro @:pos(comp.pos) ($comp : $type_b));\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tContext.error(e.message, comp.pos);\n\t\t\t}\n\t\t}\n\t\tblock.push(macro @:pos(components[0].pos) universe.setComponents($a{arr}));\n\t\tblock.push(macro entity);\n\t\treturn macro @:pos(components[0].pos) $b{block};\n\t}\n}\n","package commands;\n\nimport discord_js.MessageAttachment;\nimport discord_js.MessageEmbed;\nimport firebase.web.app.FirebaseApp;\nimport discord_js.Message;\nimport systems.CommandBase;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport discord_js.ThreadChannel;\n\nclass Everyone extends CommandBase {\n\n\toverride function onEnabled() {}\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch(command.content) {\n\t\t\tcase Everyone(content):\n\t\t\t\tif (interaction.channel.isThread()) {\n\t\t\t\t\tvar channel:ThreadChannel = cast interaction.channel;\n\t\t\t\t\tif (channel.ownerId != interaction.user.id) {\n\t\t\t\t\t\t// only thread owner can mention\n\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\tcontent: \"You're not the owner of this thread\"\n\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\tcontent: '@everyone - $content',\n\t\t\t\t\t\tallowedMentions: {\n\t\t\t\t\t\t\tparse: [everyone]\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t} else {\n\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\tcontent: \"This command can only be activated from within a thread and one you must be the person who created it\"\n\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'everyone';\n\t}\n}","package commands;\n\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport discord_js.MessageEmbed;\nimport sys.FileSystem;\nimport components.Command;\nimport js.node.ChildProcess.spawn;\nimport systems.CommandBase;\nimport haxe.Http;\n\nprivate typedef Request = {\n\taction:Action,\n\t?input:String,\n\t?hxml:String,\n};\n\nprivate enum abstract Action(String) {\n\tvar Run = \"run\";\n\tvar HaxeVersion = \"haxe_version\";\n\tvar HaxelibRun = \"haxelib_run\";\n}\n\nprivate enum abstract Status(String) {\n\tvar Ok;\n\tvar OhNo;\n}\n\nprivate typedef Response = {\n\tstatus:Status,\n\t?output:Null<String>,\n\t?error:Null<String>,\n}\n\ntypedef CommandHistory = {\n\tvar timestamp:Float;\n\tvar interaction:BaseCommandInteraction;\n}\n\nclass Haxelib extends CommandBase {\n\tvar last_interaction:BaseCommandInteraction;\n\tfinal super_mod_id:String = #if block '1114582456381747232' #else '198916468312637440' #end;\n\tvar message_history:Map<String, MessageEmbed> = [];\n\tvar http:Http;\n\tvar site = #if block \"\" #else \"localhost\" #end;\n\n\toverride function onEnabled() {\n\t\t#if block\n\t\tsite = Main.keys.haxeip;\n\t\t#end\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tfor (key => data in message_history) {\n\t\t\tvar time = Date.now().getTime();\n\t\t\tif (time - data.timestamp > 5000) {\n\t\t\t\tmessage_history.remove(key);\n\t\t\t}\n\t\t}\n\n\t\tvar role_status = hasRole(this.super_mod_id, interaction);\n\t\tswitch (command.content) {\n\t\t\tcase Haxelib(command):\n\t\t\t\tvar route = command;\n\t\t\t\tvar http = new Http('http://$site:1337');\n\t\t\t\thttp.onError = function(error) {\n\t\t\t\t\ttrace(error);\n\t\t\t\t}\n\n\t\t\t\tif (route.contains(\" \")) {\n\t\t\t\t\troute = route.split(\" \")[0];\n\t\t\t\t}\n\n\t\t\t\tif (route != \"list\" && route != \"info\" && route != \"search\") {\n\t\t\t\t\tif (!role_status) {\n\t\t\t\t\t\tinteraction.reply('Invalid Permissions.').then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinteraction.deferReply({}).then(function(_) {\n\t\t\t\t\thttp.setHeader('Authorization', \"Basic \" + Main.keys.haxelib);\n\t\t\t\t\ttrace(Main.keys.haxelib);\n\t\t\t\t\thttp.onData = function(response) {\n\t\t\t\t\t\tvar parse:Response = Json.parse(response);\n\t\t\t\t\t\tswitch (parse.status) {\n\t\t\t\t\t\t\tcase Ok:\n\t\t\t\t\t\t\t\ttrace('parse');\n\t\t\t\t\t\t\t\tvar output = '';\n\t\t\t\t\t\t\t\tfor (line in parse.output.split('\\n')) {\n\t\t\t\t\t\t\t\t\tif (line.contains('KB') || line.contains('%')) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toutput += line + '\\n';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttrace(output);\n\t\t\t\t\t\t\t\tvar embed = new MessageEmbed().setTitle('Haxelib');\n\t\t\t\t\t\t\t\tif (output.length > 4000) {\n\t\t\t\t\t\t\t\t\toutput = output.substr(0, 4000) + '...';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (output.length == 0 || output == '') {\n\t\t\t\t\t\t\t\t\toutput = \"No libraries installed.\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tembed.setDescription(output);\n\t\t\t\t\t\t\t\tinteraction.editReply({embeds: [embed]}).then(null, function(err) {\n\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\t\t\t\t\tembed.type = 'article';\n\t\t\t\t\t\t\t\tvar error = parse.error;\n\t\t\t\t\t\t\t\tembed.setDescription('Error \\n + ${error}');\n\n\t\t\t\t\t\t\t\tinteraction.editReply({embeds: [embed]})\n\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\ttrace(parse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar request:Request = {\n\t\t\t\t\t\taction: HaxelibRun,\n\t\t\t\t\t\tinput: command\n\t\t\t\t\t}\n\n\t\t\t\t\ttrace(request);\n\n\t\t\t\t\tvar str = Json.stringify(request);\n\t\t\t\t\thttp.setPostData(str);\n\t\t\t\t\thttp.request(true);\n\t\t\t\t}, (err) -> trace(err));\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction addHistory(command:String, embed:MessageEmbed) {\n\t\tif (this.message_history.exists(command)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.message_history.set(command, embed);\n\t\treturn true;\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'haxelib';\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Help extends CommandBase {\n\tvar data:Array<THelpFormat>;\n\n\toverride function onEnabled() {\n\t\tthis.data = loadFile('help');\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tif (data == null || data.length == 0) {\n\t\t\ttrace('no help content configured');\n\t\t\treturn;\n\t\t}\n\n\t\tif (Main.dm_help_tracking.exists(interaction.user.id)) {\n\t\t\tfor (content in this.data) {\n\t\t\t\tif (content.type != helppls_dm) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tinteraction.reply({content: content.content.toString()}).then(null, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (command.content) {\n\t\t\tcase Help(category):\n\t\t\t\tvar msg = '';\n\t\t\t\tfor (key => item in data) {\n\t\t\t\t\tif (category == null) {\n\t\t\t\t\t\tif (!item.show_help) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.type == HelpType.run) {\n\t\t\t\t\t\t\tmsg += '- `!${item.type}`: ${item.content.toString()}';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmsg += '- `/${item.type}`: ${item.content.toString()}';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (key != data.length - 1) {\n\t\t\t\t\t\t\tmsg += '\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (item.type == category) {\n\t\t\t\t\t\t\tmsg = '/`${item.type}`: ${item.content.toString()}';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (msg.length == 0 || msg == '' || msg == null) {\n\t\t\t\t\tmsg = 'Nothing found, sorry :(';\n\t\t\t\t}\n\n\t\t\t\tinteraction.reply(msg).then(null, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'help';\n\t}\n}\n\ntypedef THelpFormat = {\n\tvar show_help:Bool;\n\tvar type:HelpType;\n\tvar content:Array<String>;\n}\n\nenum abstract HelpType(String) from String {\n\tvar run;\n\tvar rtfm;\n\tvar notify;\n\tvar helppls;\n\tvar helppls_dm;\n\n\tstatic function fromString(value:String) {\n\t\treturn switch (value.toLowerCase()) {\n\t\t\tcase 'run': run;\n\t\t\tcase 'rtfm': rtfm;\n\t\t\tcase 'notify': notify;\n\t\t\tcase 'helppls_dm': helppls_dm;\n\t\t\tdefault:\n\t\t\t\t'Invalid help option.';\n\t\t};\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Hi extends CommandBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tvar message = 'Hey there';\n\t\tif (Math.random() < 0.35) {\n\t\t\tmessage = switch (interaction.user.id) {\n\t\t\t\tcase '817154767733653524': 'Hello ${interaction.user.tag}, always a pleasure :)';\n\t\t\t\tcase '726161533540761662':\n\t\t\t\t\tif (Math.random() < 0.4) {\n\t\t\t\t\t\t\"Hi cheems, having a good day? :)\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\"Hi cheems, I know you're secretly a muffin.\";\n\t\t\t\t\t}\n\t\t\t\tcase '781745960829059072': \n\t\t\t\t\tif (Math.random() < 0.4) {\n\t\t\t\t\t\t\"Hi Ratul, don't make me go sleep :(\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\"Hi... Hmm, weren't you a sasquatch?\";\n\t\t\t\t\t}\n\t\t\t\tcase '415825875146375168': \"Hey semmi, got any cool music tonight? \\\\o/\";\n\t\t\t\tcase '215582414544699393': \"Hello Bulby! ReAD ArCH NeWS! :face_with_hand_over_mouth:\";\n\t\t\t\tcase '231872730478280705': \"Hey logo, how jammy are you feeling today? :jam:\";\n\t\t\t\tcase '613797359822045194': \"Hey Furret, gained any patience yet?\";\n\t\t\t\tdefault: \"Hey you, what's up?\";\n\t\t\t}\n\t\t}\n\t\tinteraction.reply({content: message}).then(null, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'hi';\n\t}\n}\n","package commands;\n\nimport haxe.PosInfos;\nimport discord_js.WebhookClient;\nimport discord_builder.ButtonBuilder;\nimport discord_js.ThreadChannel;\nimport components.ShowcaseModalSubmit;\nimport discord_builder.APIActionRowComponent;\nimport discord_js.TextChannel;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport systems.CommandBase;\nimport js.Browser;\n\nclass JamSuggestionBox extends CommandBase {\n\tvar channel:TextChannel;\n\t#if block\n\tfinal channel_id = '1100053767493255182';\n\t#else\n\tfinal channel_id = '1234817988377706557';\n\t#end\n\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\n\tvar webhook:WebhookClient;\n\tpublic function new(_) {\n\t\tsuper(_);\n\t\tthis.webhook = new WebhookClient({url: Main.keys.suggestionbox_hook});\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\n\t\titerate(messages, entity -> {\n\t\t\tswitch(command) {\n\t\t\t\tcase suggestion_box:\n\t\t\t\t\tvar name = message.author.username;\n\t\t\t\t\tif (message.member.nickname != null && message.member.nickname.length > 0) {\n\t\t\t\t\t\tname = message.member.nickname;\n\t\t\t\t\t}\n\t\t\t\t\tthis.webhook.send({\n\t\t\t\t\t\tusername: name,\n\t\t\t\t\t\tcontent: '#theme ' + message.content,\n\t\t\t\t\t\tavatarURL: message.author.avatarURL()\n\t\t\t\t\t}).then(null, function(err:{message:String}) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t});\n\t\t\t\t\tmessage.delete().then(null, (err) -> trace(err));\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tfunction get_name():String {\n\t\treturn 'jamsuggestionbox';\n\t}\n}\n","package commands;\nimport Main.CommandForward;\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport discord_js.TextChannel;\n\nclass Notify extends CommandBase {\n\tfunction getRole(channel:String) {\n\t\treturn switch (channel) {\n\t\t\t// #events\n\t\t\tcase 'events': #if block '738508312382799874' #else '1054432874473996408' #end;\n\t\t\t// #announcements\n\t\t\tcase 'announcements': '761714325227700225';\n\t\t\t// #flixel\n\t\t\tcase 'flixel': '761714697468248125';\n\t\t\t// #heaps\n\t\t\tcase 'heaps': '761714775902126080';\n\t\t\t// #kha\n\t\t\tcase 'kha': '761714809179209818';\n\t\t\t// #haxe-ui\n\t\t\tcase 'haxeui': '761714853403820052';\n\t\t\t// #ceramic\n\t\t\tcase 'ceramic': '914171888748609546';\n\t\t\tcase 'reflaxe': '1200065966445449286';\n\t\t\t// #devserver notes test\n\t\t\tcase 'dvorak': '903006951896666153';\n\t\t\tcase 'jam': '1058843687687295066';\n\t\t\tcase 'cortex': '1256579748575051867';\n\t\t\tcase 'godot': '1059447670344794142';\n\t\t\tdefault: 'err';\n\t\t}\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Notify(channel):\n\t\t\t\tvar role = this.getRole(channel);\n\t\t\t\tif (role == 'err') {\n\t\t\t\t\ttrace(channel);\n\t\t\t\t\ttrace(interaction.command);\n\t\t\t\t\tinteraction.reply('Invalid channel');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tinteraction.member.fetch(true).then(function(member) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (key => _ in member.roles.cache) {\n\t\t\t\t\t\tif (key == role) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tinteraction.member.roles.remove(role).then(function(success) {\n\t\t\t\t\t\t\tinteraction.reply('Unsubscribed to $channel updates');\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinteraction.member.roles.add(role).then(function(success) {\n\t\t\t\t\t\t\tif (channel == 'announcements') {\n\t\t\t\t\t\t\t\tuniverse.setComponents(\n\t\t\t\t\t\t\t\t\tuniverse.createEntity(),\n\t\t\t\t\t\t\t\t\tCommandForward.auto_thread, member\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinteraction.reply('Subscribed to $channel updates');\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'notify';\n\t}\n}\n","package commands;\n\nimport commands.types.ContextMenuTypes;\nimport discord_js.ThreadChannel;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandDbBase;\nimport Main.CommandForward;\n\nclass PinMessage extends CommandDbBase {\n\t@:fastFamily var options:{route:ContextMenuTypes, interaction:BaseCommandInteraction};\n\n\toverride function update(_) {\n\t\titerate(options, entity -> {\n\t\t\tswitch (route) {\n\t\t\t\tcase PinMessage:\n\t\t\t\t\tvar author = interaction.user.id;\n\t\t\t\t\tif (interaction.channel.isThread()) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar thread = cast(interaction.channel, ThreadChannel);\n\t\t\t\t\t\t\tif (thread.ownerId == author) {\n\t\t\t\t\t\t\t\tif (interaction.targetMessage.pinned) {\n\t\t\t\t\t\t\t\t\tinteraction.targetMessage.unpin().then(function(_) {\n\t\t\t\t\t\t\t\t\t\tinteraction.reply({content: 'Unpinned', ephemeral: true});\n\t\t\t\t\t\t\t\t\t}, function(err) trace(err));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinteraction.targetMessage.pin().then(function(_) {\n\t\t\t\t\t\t\t\t\t\tinteraction.reply({content: 'Pinned', ephemeral: true});\n\t\t\t\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\t\t\t\tvar message = null;\n\t\t\t\t\t\t\t\t\t\tswitch(err.code) {\n\t\t\t\t\t\t\t\t\t\t\tcase 50021:\n\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"Can't pin a system message\";\n\t\t\t\t\t\t\t\t\t\t\tdefault: \n\t\t\t\t\t\t\t\t\t\t\t\tmessage = err.message + '\\n\\n Contact NotBilly about this';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\tinteraction.reply(message).then(null, function(err) trace(err));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinteraction.reply({content: \"This isn't your thread!\", ephemeral: true});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\ttrace('thread cast failed');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t{content: '*Currently this only works for user threads :)*',\n\t\t\t\t\t\t\t\tephemeral: true}\n\t\t\t\t\t\t).then(null, function(err) trace(err));\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\ttrace('here');\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'pinmessage';\n\t}\n}\n","package commands;\nimport commands.types.Duration;\nimport discord_js.TextChannel;\nimport js.Browser;\nimport haxe.Json;\nimport firebase.web.firestore.Timestamp;\nimport discord_js.Collection;\nimport discord_js.User;\nimport discord_js.MessageReaction;\nimport discord_js.MessageEmbed;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandDbBase;\n\nclass Poll extends CommandDbBase {\n\t@:fastFamily var dm_messages:{type:CommandForward, message:Message};\n\tvar checked = false;\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\n\t\tif (!checked && Main.connected) {\n\t\t\tchecked = true;\n\n\t\t\tvar query:FQuery<PollData> = Firestore.query(collection(this.db,\n\t\t\t\t'discord/polls/entries'));\n\t\t\tFirestore.getDocs(query).then(function(res) {\n\t\t\t\tvar now = Date.now().getTime();\n\t\t\t\tfor (doc in res.docs) {\n\t\t\t\t\tvar data = doc.data();\n\t\t\t\t\tif (!data.active) {\n\t\t\t\t\t\tvar four_weeks = data.timestamp.toMillis()\n\t\t\t\t\t\t\t+ (PollTime.two_weeks : Float) * 2;\n\t\t\t\t\t\tif (now - four_weeks < 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tFirestore.deleteDoc(doc.ref).then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar start = data.timestamp.toMillis();\n\t\t\t\t\tvar finish = start + data.duration;\n\t\t\t\t\tvar time_left = 0.;\n\n\t\t\t\t\tif (finish < now) {\n\t\t\t\t\t\ttime_left = 30000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttime_left = finish - now;\n\t\t\t\t\t}\n\n\t\t\t\t\tMain.client.channels.fetch(data.channel).then(function(succ:TextChannel) {\n\t\t\t\t\t\tsucc.messages.fetch(data.message_id).then(function(message) {\n\t\t\t\t\t\t\ttrace('Resyncing ${data.id}');\n\t\t\t\t\t\t\tthis.addCollector(message, data, time_left);\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Poll(question, length, a, b, c, d, e, f, g, v):\n\t\t\t\tvar time = PollTime.fromString(length);\n\n\t\t\t\tif (a == null && b == null) {\n\t\t\t\t\tinteraction.reply(\"You must have at least 2 answers\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar body = '';\n\t\t\t\tvar collection = [a, b, c, d, e, f, g];\n\t\t\t\tvar answers = new Map();\n\t\t\t\tvar results = new Map();\n\t\t\t\tvar votes = 1;\n\t\t\t\tvar vtxt = 'vote';\n\t\t\t\tif (v == 0 || v > 1) {\n\t\t\t\t\tvtxt += 's';\n\t\t\t\t}\n\n\t\t\t\tif (v != null) {\n\t\t\t\t\tvotes = v;\n\t\t\t\t\tif (votes > 7) {\n\t\t\t\t\t\tvotes = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i => ans in collection) {\n\t\t\t\t\tif (ans == null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar char = chars(i);\n\n\t\t\t\t\tresults.set(char, 0);\n\t\t\t\t\tanswers.set(char, ans);\n\n\t\t\t\t\tbody += '$char - $ans\\n';\n\t\t\t\t}\n\n\t\t\t\tvar embed = new MessageEmbed();\n\n\t\t\t\tembed.setDescription(\n\t\t\t\t\t'**Question**\\n$question\\n\\n**Options**\\n$body\\n**Settings**\\n**${votes}** $vtxt per user.'\n\t\t\t\t);\n\t\t\t\tembed.setFooter({text: 'Poll will run for ${length}.'});\n\n\t\t\t\tvar settings = new Map();\n\t\t\t\tsettings.set(PollSetting.votes, votes);\n\n\t\t\t\tinteraction.reply({embeds: [embed]}).then((_) -> {\n\t\t\t\t\tinteraction.fetchReply().then(function(message) {\n\t\t\t\t\t\tfor (k => _ in answers) {\n\t\t\t\t\t\t\tmessage.react(k);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data:TPollData = {\n\t\t\t\t\t\t\tid: -1,\n\t\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\t\tresults: Json.stringify(results),\n\t\t\t\t\t\t\tanswers: answers.stringify(),\n\t\t\t\t\t\t\tquestion: question,\n\t\t\t\t\t\t\tduration: time,\n\t\t\t\t\t\t\tsettings: settings.stringify(),\n\t\t\t\t\t\t\ttimestamp: Timestamp.now(),\n\t\t\t\t\t\t\tauthor: interaction.user.id,\n\t\t\t\t\t\t\tmessage_id: message.id,\n\t\t\t\t\t\t\tchannel: message.channel.asType0.id\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tFirestore.runTransaction(this.db, function(transaction) {\n\t\t\t\t\t\t\treturn transaction.get(doc(this.db, 'discord/polls'))\n\t\t\t\t\t\t\t\t.then(function(doc) {\n\t\t\t\t\t\t\t\t\tif (!doc.exists()) {\n\t\t\t\t\t\t\t\t\t\treturn {id: -1};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar data:{id:Int} = (doc.data());\n\t\t\t\t\t\t\t\t\tdata.id = data.id + 1;\n\t\t\t\t\t\t\t\t\ttransaction.update(doc.ref, data);\n\t\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}).then(function(value) {\n\t\t\t\t\t\t\tdata.id = value.id;\n\t\t\t\t\t\t\tFirestore.addDoc(Firestore.collection(this.db,\n\t\t\t\t\t\t\t\t'discord/polls/entries'), data)\n\t\t\t\t\t\t\t\t.then(function(_) {\n\t\t\t\t\t\t\t\t\tthis.addCollector(message, data);\n\t\t\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(null, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction addCollector(message:Message, data:PollData, ?time_left:Float) {\n\t\tvar filter = this.filter(message, data);\n\t\tvar time:Float = data.duration;\n\t\t#if block\n\t\ttrace('Poll duration changed due to debug block on');\n\t\ttime = Duration.fromString('1m');\n\t\t#end\n\t\tif (time_left != null) {\n\t\t\ttime = time_left;\n\t\t}\n\n\t\tvar collector = message.createReactionCollector({filter: filter, time: time});\n\n\t\tcollector.on('collect', (reaction:MessageReaction, user:User) -> {});\n\n\t\tcollector.on(\n\t\t\t'end',\n\t\t\t(collected:Collection<String, MessageReaction>, reason:String) -> {\n\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\tvar body = '**Question**\\n${data.question}\\n**Results**\\n';\n\n\t\t\t\tvar options = data.answers;\n\n\t\t\t\tvar sort = message.reactions.cache.sort(function(a, b, _, _) {\n\t\t\t\t\treturn b.count - a.count;\n\t\t\t\t});\n\n\t\t\t\tfor (k => v in sort) {\n\t\t\t\t\tvar col = sort.get(k);\n\t\t\t\t\tvar ans = options.get(k);\n\t\t\t\t\tvar count = 0;\n\n\t\t\t\t\tif (col != null) {\n\t\t\t\t\t\tcount = v.count;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbody += '$k / $ans /  **${count - 1}** \\n';\n\t\t\t\t}\n\n\t\t\t\tbody += '\\n*Poll ran for ${data.duration}*';\n\n\t\t\t\tbody += '\\n*Posted: <t:${Math.round(message.createdTimestamp / 1000)}:R>*';\n\t\t\t\tembed.setDescription(body);\n\n\t\t\t\tmessage.reply({content: '<@${data.author}>', embeds: [embed]}).then(function(_) {\n\t\t\t\t\tvar query = Firestore.query(collection(this.db, 'discord/polls/entries'),\n\t\t\t\t\t\twhere('id', EQUAL_TO, data.id));\n\t\t\t\t\tFirestore.getDocs(query).then(function(res) {\n\t\t\t\t\t\tif (res.docs.length == 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tFirestore.updateDoc(res.docs[0].ref, 'active', false);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'poll';\n\t}\n\n\tfunction filter(message:Message, data:PollData) {\n\t\tvar reactions = data.answers;\n\t\tvar rcount = 0;\n\t\tfor (_ in reactions) {\n\t\t\trcount++;\n\t\t}\n\n\t\tvar vvotes = data.settings.get(PollSetting.votes);\n\t\tvar filter = (reaction:MessageReaction, user:User) -> {\n\t\t\tvar votes = 0;\n\t\t\tfor (reac in message.reactions.cache) {\n\t\t\t\tfor (u in reac.users.cache) {\n\t\t\t\t\tif (u.id == user.id && !u.bot) {\n\t\t\t\t\t\tvotes++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (votes > vvotes) {\n\t\t\t\tif (!user.bot) {\n\t\t\t\t\treaction.users.remove(user);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇦\" && rcount >= 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇧\" && rcount >= 2) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇨\" && rcount >= 3) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇩\" && rcount >= 4) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇪\" && rcount >= 5) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇫\" && rcount >= 6) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (reaction.emoji.name == \"🇬\" && rcount >= 7) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\ttrace('removed ${reaction.message.author.tag} reaction on message ${reaction.message}');\n\t\t\treaction.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\treturn filter;\n\t}\n\n\tfunction chars(char:Int) {\n\t\treturn switch (char) {\n\t\t\tcase 0: '🇦';\n\t\t\tcase 1: '🇧';\n\t\t\tcase 2: '🇨';\n\t\t\tcase 3: '🇩';\n\t\t\tcase 4: '🇪';\n\t\t\tcase 5: '🇫';\n\t\t\tcase 6: '🇬';\n\t\t\tdefault: '';\n\t\t}\n\t}\n}\n\ntypedef TPoll = {\n\tvar question:String;\n\tvar type:PollTypes;\n\tvar counter:Map<String, Int>;\n}\n\nenum abstract PollTypes(String) {\n\tvar bool;\n\tvar bool_maybe;\n\tvar multiple_choice;\n}\n\ntypedef TPollData = {\n\tvar id:Int;\n\tvar active:Bool;\n\tvar channel:String;\n\tvar message_id:String;\n\tvar author:String;\n\tvar question:String;\n\tvar duration:PollTime;\n\tvar timestamp:Timestamp;\n\tvar settings:String;\n\tvar answers:String;\n\tvar results:String;\n}\n\n@:forward\nabstract PollData(TPollData) from TPollData {\n\tpublic var answers(get, never):Map<String, String>;\n\n\tfunction get_answers() {\n\t\treturn Json.parse(this.answers);\n\t}\n\n\tpublic var results(get, never):Map<String, Int>;\n\n\tfunction get_results() {\n\t\treturn Json.parse(this.results);\n\t}\n\n\tpublic var settings(get, never):Map<PollSetting, Int>;\n\n\tfunction get_settings() {\n\t\treturn Json.parse(this.settings);\n\t}\n}\n\nenum abstract PollSetting(Int) to Int {\n\tvar votes;\n}\n\nenum abstract PollTime(Float) to Float {\n\tvar fifteen = 900000;\n\tvar thirty = 1800000;\n\tvar one_hour = 3600000;\n\tvar four_hours = 14400000;\n\tvar eight_hours = 28800000;\n\tvar twelve_hours = 43200000;\n\tvar one_day = 86400000;\n\tvar three_days = 259200000;\n\tvar five_days = 432000000;\n\tvar one_week = 604800000;\n\tvar two_weeks = 1210000000;\n\n\tfunction new(value) {\n\t\tthis = value;\n\t}\n\n\t@:from public static function fromString(input:String) {\n\t\treturn switch (input) {\n\t\t\tcase \"15m\": PollTime.fifteen;\n\t\t\tcase \"30m\": PollTime.thirty;\n\t\t\tcase \"1hr\": PollTime.one_hour;\n\t\t\tcase \"4hr\": PollTime.four_hours;\n\t\t\tcase \"8hr\": PollTime.eight_hours;\n\t\t\tcase \"12hr\": PollTime.twelve_hours;\n\t\t\tcase \"1d\": PollTime.one_day;\n\t\t\tcase \"3d\": PollTime.three_days;\n\t\t\tcase \"5d\": PollTime.five_days;\n\t\t\tcase \"1w\": PollTime.one_week;\n\t\t\tcase \"2w\": PollTime.two_weeks;\n\t\t\tdefault: PollTime.one_hour;\n\t\t}\n\t}\n\n\t@:keep\n\t@:to function toString() {\n\t\treturn switch (this) {\n\t\t\tcase fifteen: \"15mins\";\n\t\t\tcase thirty: \"30mins\";\n\t\t\tcase one_hour: \"1 hour\";\n\t\t\tcase four_hours: \"4 hours\";\n\t\t\tcase eight_hours: \"8 hours\";\n\t\t\tcase twelve_hours: \"12 hours\";\n\t\t\tcase one_day: \"1 day\";\n\t\t\tcase three_days: \"3 days\";\n\t\t\tcase five_days: \"5 days\";\n\t\t\tcase one_week: \"1 week\";\n\t\t\tcase two_weeks: \"2 weeks\";\n\t\t\tdefault: '1 hour';\n\t\t}\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n#if (js_es >= 6)\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int, T> {\n\tprivate var m:js.lib.Map<Int, T>;\n\n\tpublic inline function new():Void {\n\t\tm = new js.lib.Map();\n\t}\n\n\tpublic inline function set(key:Int, value:T):Void {\n\t\tm.set(key, value);\n\t}\n\n\tpublic inline function get(key:Int):Null<T> {\n\t\treturn m.get(key);\n\t}\n\n\tpublic inline function exists(key:Int):Bool {\n\t\treturn m.has(key);\n\t}\n\n\tpublic inline function remove(key:Int):Bool {\n\t\treturn m.delete(key);\n\t}\n\n\tpublic inline function keys():Iterator<Int> {\n\t\treturn new js.lib.HaxeIterator(m.keys());\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn m.iterator();\n\t}\n\n\tpublic inline function keyValueIterator():KeyValueIterator<Int, T> {\n\t\treturn m.keyValueIterator();\n\t}\n\n\tpublic inline function copy():IntMap<T> {\n\t\tvar copied = new IntMap();\n\t\tcopied.m = new js.lib.Map(m);\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar it = keyValueIterator();\n\t\tfor (i in it) {\n\t\t\ts.add(i.key);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(i.value));\n\t\t\tif (it.hasNext())\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\tm.clear();\n\t}\n}\n#else\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int, T> {\n\tprivate var h:Dynamic;\n\n\tpublic inline function new():Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set(key:Int, value:T):Void {\n\t\th[key] = value;\n\t}\n\n\tpublic inline function get(key:Int):Null<T> {\n\t\treturn h[key];\n\t}\n\n\tpublic inline function exists(key:Int):Bool {\n\t\treturn (cast h).hasOwnProperty(key);\n\t}\n\n\tpublic function remove(key:Int):Bool {\n\t\tif (!(cast h).hasOwnProperty(key))\n\t\t\treturn false;\n\t\tjs.Syntax.delete(h, key);\n\t\treturn true;\n\t}\n\n\tpublic function keys():Iterator<Int> {\n\t\tvar a = [];\n\t\tjs.Syntax.code(\"for( var key in {0} ) if({0}.hasOwnProperty(key)) {1}.push(+key)\", h, a);\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator():Iterator<T> {\n\t\treturn untyped {\n\t\t\tref: h,\n\t\t\tit: keys(),\n\t\t\thasNext: function() {\n\t\t\t\treturn __this__.it.hasNext();\n\t\t\t},\n\t\t\tnext: function() {\n\t\t\t\tvar i = __this__.it.next();\n\t\t\t\treturn __this__.ref[i];\n\t\t\t}\n\t\t};\n\t}\n\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<Int, T> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\tpublic function copy():IntMap<T> {\n\t\tvar copied = new IntMap();\n\t\tfor (key in keys())\n\t\t\tcopied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar it = keys();\n\t\tfor (i in it) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif (it.hasNext())\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = {};\n\t}\n}\n#end\n","package ts;\n\n/**\n\tAnyOf implementation generated by dts2hx\n**/\n@:transitive extern abstract AnyOf4<T0, T1, T2, T3>(Dynamic) from T0 from T1 from T2 from T3 to T0 to T1 to T2 to T3 {\n\tvar asType0(get, never) : T0;\n\tprivate inline function get_asType0():T0 return this;\n\tvar asType1(get, never) : T1;\n\tprivate inline function get_asType1():T1 return this;\n\tvar asType2(get, never) : T2;\n\tprivate inline function get_asType2():T2 return this;\n\tvar asType3(get, never) : T3;\n\tprivate inline function get_asType3():T3 return this;\n}","package commands;\n\nimport database.DBEvents;\nimport database.types.DBQuote;\nimport discord_js.User;\nimport js.Browser;\nimport discord_builder.APIActionRowComponent;\nimport discord_builder.APITextInputComponent;\nimport discord_builder.ModalBuilder;\nimport discord_js.MessageEmbed;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport Main.CommandForward;\nimport systems.CommandDbBase;\nimport commands.types.ActionList;\nimport Query;\nimport db.Record;\n\nclass Quote extends CommandDbBase {\n\t@:fastFamily var modal:{forward:CommandForward, interaction:BaseCommandInteraction};\n\tvar cache:Map<String, DBQuote> = [];\n\tfinal max_name_length = 35;\n\n\toverride function onEnabled() {\n\t\tthis.has_subcommands = true;\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(modal, entity -> {\n\t\t\tswitch (forward) {\n\t\t\t\tcase quote_set:\n\t\t\t\t\tvar id = interaction.user.id;\n\t\t\t\t\tvar name = interaction.user.username;\n\t\t\t\t\tvar title = interaction.fields.getTextInputValue('name');\n\t\t\t\t\tvar description = interaction.fields.getTextInputValue('description');\n\n\t\t\t\t\tvar quote = new DBQuote(id, name, title, description);\n\n\t\t\t\t\tif (!this.isValidName(name)) {\n\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\tcontent: '*Names can only contain `_-.?:` and/or spaces.*\\nname: $name\\n$description',\n\t\t\t\t\t\t\tephemeral: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar e = DBEvents.Insert('quotes', quote.record, function(resp) {\n\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\t\ttrace(message);\n\t\t\t\t\t\t\t\tquote = DBQuote.fromRecord(data);\n\t\t\t\t\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\t\t\t\t\tembed.setTitle('Quote #${quote.id} added!');\n\t\t\t\t\t\t\t\tembed.setDescription('**${quote.title}**\\n$description');\n\t\t\t\t\t\t\t\tinteraction.reply({embeds: [embed]});\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinteraction.reply('Something went wrong, try again later')\n\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\ttrace(quote);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\tcase quote_edit:\n\t\t\t\t\tvar quote = this.cache.get(interaction.user.id);\n\t\t\t\t\tvar title = interaction.fields.getTextInputValue('title');\n\t\t\t\t\tquote.description = interaction.fields.getTextInputValue('description');\n\t\t\t\t\tvar e = DBEvents.DBEvents.GetRecord('quotes', Query.query($title == title && $author_id == interaction.user.id), function(resp) {\n\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\t\ttrace(title);\n\t\t\t\t\t\t\t\ttrace(quote.title);\n\t\t\t\t\t\t\t\tif (data != null && title != quote.title) {\n\t\t\t\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t\t\t\t'You already have a quote with the title **__${title}__**'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tquote.title = title.toLowerCase();\n\t\t\t\t\t\t\t\tvar e = DBEvents.Update(\n\t\t\t\t\t\t\t\t\t'quotes',\n\t\t\t\t\t\t\t\t\tquote.record,\n\t\t\t\t\t\t\t\t\tQuery.query($id == quote.id && $author_id == quote.author_id),\n\t\t\t\t\t\t\t\t\tfunction(resp) {\n\t\t\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\t\t\tcase Success(message, _):\n\t\t\t\t\t\t\t\t\t\t\t\ttrace('$message');\n\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply('Quote updated!');\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\ttrace(this.cache.get(interaction.user.id));\n\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply('Something went wrong');\n\t\t\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis.cache.remove(interaction.user.id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\tdefault:\n\t\t\t}\n\n\t\t\tif (forward == quote_set || forward == quote_edit) {\n\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction parseGroupQuotes(interaction:BaseCommandInteraction, value:Callback) {\n\t\tswitch (value) {\n\t\t\tcase Records(data):\n\t\t\t\tif (data.length == 0) {\n\t\t\t\t\tinteraction.reply(\"No quotes by that user!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\tembed.setTitle('List of Quotes');\n\t\t\t\tvar body = '';\n\t\t\t\tfor (item in data) {\n\t\t\t\t\tvar quote = DBQuote.fromRecord(item);\n\t\t\t\t\tbody += '**#${quote.id}** ${quote.title} by <@${quote.author_id}> \\n';\n\t\t\t\t}\n\t\t\t\tembed.setDescription(body);\n\t\t\t\tembed.setColor(0xEA8220);\n\t\t\t\tinteraction.reply({embeds: [embed]}).then(null, (err) -> trace(err));\n\t\t\tdefault:\n\t\t\t\ttrace(value);\n\t\t}\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase QuoteList(user):\n\t\t\t\tvar sort = Firestore.orderBy('id', ASCENDING);\n\t\t\t\tvar e = DBEvents.GetAllRecords('quotes', parseGroupQuotes.bind(interaction));\n\t\t\t\tif (user != null) {\n\t\t\t\t\te = DBEvents.GetRecords('quotes', Query.query($author_id == user.id),\n\t\t\t\t\t\tparseGroupQuotes.bind(interaction));\n\t\t\t\t}\n\t\t\t\tEcsTools.set(e);\n\t\t\tcase QuoteGet(name) | QuoteCreate(name) | QuoteEdit(name) | QuoteDelete(name):\n\t\t\t\tvar type = get;\n\t\t\t\tvar enum_name = command.content.getName().toLowerCase();\n\t\t\t\tif (enum_name.contains('get')) {\n\t\t\t\t\ttype = get;\n\t\t\t\t}\n\n\t\t\t\tif (enum_name.contains('create')) {\n\t\t\t\t\ttype = set;\n\t\t\t\t}\n\n\t\t\t\tif (enum_name.contains('delete')) {\n\t\t\t\t\ttype = delete;\n\t\t\t\t}\n\n\t\t\t\tif (enum_name.contains('edit')) {\n\t\t\t\t\ttype = edit;\n\t\t\t\t}\n\n\t\t\t\tvar column = 'id';\n\t\t\t\tif (name == null) {\n\t\t\t\t\tname = \"\";\n\t\t\t\t}\n\n\t\t\t\tif (this.isName(name) && type != get) {\n\t\t\t\t\tif (name.length < 2) {\n\t\t\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\t\t\tinteraction.respond([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isValidName(name)) {\n\t\t\t\t\t\tcolumn = 'name';\n\t\t\t\t\t\tname = name.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar col = collection(db, 'discord/quotes/entries');\n\n\t\t\t\tvar query:FQuery<TQuoteData> = Firestore.query(\n\t\t\t\t\tcol,\n\t\t\t\t\twhere(column, EQUAL_TO, isName(name) ? name : name.parseInt()),\n\t\t\t\t\twhere('author', EQUAL_TO, interaction.user.id)\n\t\t\t\t);\n\n\t\t\t\tvar column = 'title';\n\t\t\t\tif (isId(name)) {\n\t\t\t\t\tcolumn = 'id';\n\t\t\t\t}\n\n\t\t\t\tif (interaction.isAutocomplete() && type != get) {\n\t\t\t\t\tvar e = DBEvents.SearchBy('quotes', column, name, 'author_id',\n\t\t\t\t\t\tinteraction.user.id, function(resp) {\n\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\tcase Records(data):\n\t\t\t\t\t\t\t\t\tvar res = [];\n\t\t\t\t\t\t\t\t\tfor (r in data) {\n\t\t\t\t\t\t\t\t\t\tvar quote = DBQuote.fromRecord(r);\n\t\t\t\t\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\t\t\t\tname: this.dbacResponse(quote),\n\t\t\t\t\t\t\t\t\t\t\tvalue: '${quote.id}'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttrace(name);\n\t\t\t\t\t\t\t\t\tif (!interaction.responded) {\n\t\t\t\t\t\t\t\t\t\tinteraction.respond(res).then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase set:\n\t\t\t\t\t\tvar is_id = this.isId(name);\n\t\t\t\t\t\tif (!is_id && !this.isValidName(name)) {\n\t\t\t\t\t\t\tvar error_msg = 'name can only be 3-$max_name_length characters long';\n\t\t\t\t\t\t\tif (name.length < this.max_name_length) {\n\t\t\t\t\t\t\t\terror_msg = '*Names can only contain `_.-?` and/or spaces.*';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinteraction.reply({content: error_msg, ephemeral: true});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar column = (is_id) ? 'id' : 'title';\n\n\t\t\t\t\t\tvar e = DBEvents.Search('quotes', column, name, function(resp) {\n\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\tcase Records(data):\n\t\t\t\t\t\t\t\t\tif (data.length >= 1) {\n\t\t\t\t\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t\t\t\t\t'You already have a quote with the title __${data[0].field('title')}__'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar modal = new ModalBuilder().setCustomId('quote_set')\n\t\t\t\t\t\t\t\t\t\t.setTitle('Creating a quote');\n\n\t\t\t\t\t\t\t\t\tvar title_input = new APITextInputComponent()\n\t\t\t\t\t\t\t\t\t\t.setCustomId('name')\n\t\t\t\t\t\t\t\t\t\t.setLabel('title')\n\t\t\t\t\t\t\t\t\t\t.setStyle(Short)\n\t\t\t\t\t\t\t\t\t\t.setValue(name.toLowerCase())\n\t\t\t\t\t\t\t\t\t\t.setMinLength(3)\n\t\t\t\t\t\t\t\t\t\t.setMaxLength(this.max_name_length);\n\n\t\t\t\t\t\t\t\t\tvar desc_input = new APITextInputComponent()\n\t\t\t\t\t\t\t\t\t\t.setCustomId('description')\n\t\t\t\t\t\t\t\t\t\t.setLabel('description')\n\t\t\t\t\t\t\t\t\t\t.setStyle(Paragraph)\n\t\t\t\t\t\t\t\t\t\t.setMinLength(10)\n\t\t\t\t\t\t\t\t\t\t.setMaxLength(2000);\n\n\t\t\t\t\t\t\t\t\tvar action_a = new APIActionRowComponent()\n\t\t\t\t\t\t\t\t\t\t.addComponents(title_input);\n\t\t\t\t\t\t\t\t\tvar action_b = new APIActionRowComponent()\n\t\t\t\t\t\t\t\t\t\t.addComponents(desc_input);\n\t\t\t\t\t\t\t\t\tmodal.addComponents(action_a, action_b);\n\n\t\t\t\t\t\t\t\t\tinteraction.showModal(modal);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\tcase edit:\n\t\t\t\t\t\tvar e = DBEvents.GetRecord(\n\t\t\t\t\t\t\t'quotes',\n\t\t\t\t\t\t\tQuery.query($id == name && $author_id == interaction.user.id),\n\t\t\t\t\t\t\tfunction(resp) {\n\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\t\t\t\tif (data == null) {\n\t\t\t\t\t\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t\t\t\t\t\t'Could not find quote or you were not the author of the quote specified'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar quote = DBQuote.fromRecord(data);\n\t\t\t\t\t\t\t\t\t\tvar modal = new ModalBuilder().setCustomId('quote_edit')\n\t\t\t\t\t\t\t\t\t\t\t.setTitle('Editting quote #${quote.id}');\n\t\t\t\t\t\t\t\t\t\tvar title_input = new APITextInputComponent()\n\t\t\t\t\t\t\t\t\t\t\t.setCustomId('title')\n\t\t\t\t\t\t\t\t\t\t\t.setLabel('title')\n\t\t\t\t\t\t\t\t\t\t\t.setStyle(Short)\n\t\t\t\t\t\t\t\t\t\t\t.setValue(quote.title.toLowerCase())\n\t\t\t\t\t\t\t\t\t\t\t.setMinLength(3)\n\t\t\t\t\t\t\t\t\t\t\t.setMaxLength(this.max_name_length);\n\n\t\t\t\t\t\t\t\t\t\tvar desc_input = new APITextInputComponent()\n\t\t\t\t\t\t\t\t\t\t\t.setCustomId('description')\n\t\t\t\t\t\t\t\t\t\t\t.setLabel('${quote.title}:')\n\t\t\t\t\t\t\t\t\t\t\t.setStyle(Paragraph)\n\t\t\t\t\t\t\t\t\t\t\t.setValue(quote.description)\n\t\t\t\t\t\t\t\t\t\t\t.setMinLength(10)\n\t\t\t\t\t\t\t\t\t\t\t.setMaxLength(2000);\n\n\t\t\t\t\t\t\t\t\t\tvar action_a = new APIActionRowComponent()\n\t\t\t\t\t\t\t\t\t\t\t.addComponents(title_input);\n\t\t\t\t\t\t\t\t\t\tvar action_b = new APIActionRowComponent()\n\t\t\t\t\t\t\t\t\t\t\t.addComponents(desc_input);\n\n\t\t\t\t\t\t\t\t\t\tmodal.addComponents(action_a, action_b);\n\n\t\t\t\t\t\t\t\t\t\tthis.cache.set(interaction.user.id, quote);\n\t\t\t\t\t\t\t\t\t\tinteraction.showModal(modal);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\tcase delete:\n\t\t\t\t\t\tvar record = new Record();\n\t\t\t\t\t\trecord.field('author_id', interaction.user.id);\n\t\t\t\t\t\trecord.field('id', name);\n\n\t\t\t\t\t\tvar e = DBEvents.DeleteRecord('quotes', record, function(resp) {\n\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\t\t\tinteraction.reply(\"Quote deleted!\")\n\t\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\tcase Error(message, data):\n\t\t\t\t\t\t\t\t\ttrace(message);\n\t\t\t\t\t\t\t\t\ttrace(data);\n\t\t\t\t\t\t\t\t\tinteraction.reply(\"Cannot delete this quote\")\n\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\tcase get | _:\n\t\t\t\t\t\tif (name != null) {\n\t\t\t\t\t\t\tvar qid = Std.parseInt(name);\n\t\t\t\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\t\t\t\tvar results = [];\n\t\t\t\t\t\t\t\tvar e:DBEvents = null;\n\n\t\t\t\t\t\t\t\tif (name != null && name.length > 0) {\n\t\t\t\t\t\t\t\t\tif (qid != null && qid > 0) {\n\t\t\t\t\t\t\t\t\t\te = DBEvents.GetRecord('quotes', Query.query($id == qid),\n\t\t\t\t\t\t\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(name);\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (response) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (data == null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinteraction.respond([]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar quote = DBQuote.fromRecord(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: this.dbacResponse(quote),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '${quote.id}'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinteraction.respond(results)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(response);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\te = DBEvents.Search('quotes', 'title', name,\n\t\t\t\t\t\t\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (response) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase Records(data):\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (item in data) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar quote = DBQuote.fromRecord(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: this.dbacResponse(quote),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '${quote.id}'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// trace(results);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinteraction.respond(results)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(response);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tuniverse.setComponents(universe.createEntity(), e);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinteraction.respond([]).then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar e = DBEvents.GetRecord('quotes', Query.query($id == name),\n\t\t\t\t\t\t\t\tfunction(resp) {\n\t\t\t\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\t\t\t\tcase Record(data):\n\t\t\t\t\t\t\t\t\t\t\tif (data == null) {\n\t\t\t\t\t\t\t\t\t\t\t\tinteraction.reply('Could not find any quotes with that identifier')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvar q = DBQuote.fromRecord(data);\n\t\t\t\t\t\t\t\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\t\t\t\t\t\t\t\tvar user = interaction.client.users.cache.get(q.author_id);\n\n\t\t\t\t\t\t\t\t\t\t\tvar from = Date.fromTime(q.timestamp);\n\t\t\t\t\t\t\t\t\t\t\tvar date = DateTools.format(from, '%H:%M %d-%m-%Y');\n\n\t\t\t\t\t\t\t\t\t\t\tvar icon = 'https://cdn.discordapp.com/emojis/567741748172816404.webp?size=96&quality=lossless';\n\t\t\t\t\t\t\t\t\t\t\tvar content = q.author_tag;\n\t\t\t\t\t\t\t\t\t\t\tif (user != null) {\n\t\t\t\t\t\t\t\t\t\t\t\ticon = user.avatarURL();\n\t\t\t\t\t\t\t\t\t\t\t\tcontent = q.author_tag;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tembed.setDescription('***${q.title}***\\n${q.description}');\n\t\t\t\t\t\t\t\t\t\t\tembed.setFooter({\n\t\t\t\t\t\t\t\t\t\t\t\ttext: '$content | $date |\\t#${q.id}',\n\t\t\t\t\t\t\t\t\t\t\t\ticonURL: icon\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\tinteraction.reply({embeds: [embed]})\n\t\t\t\t\t\t\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\t// interaction.reply();\n\t\t}\n\t}\n\n\tinline function dbacResponse(data:DBQuote) {\n\t\tvar name = data.title;\n\t\tif (name.length > 25) {\n\t\t\tname = name.substr(0, 25) + '...';\n\t\t}\n\t\treturn '$name - ' + data.description.substr(0, 25) + '... by ${data.author_tag}';\n\t}\n\n\tfunction nameArray(original:String) {\n\t\tvar arr = original.toLowerCase().split(\" \");\n\t\tfor (k => v in arr) {\n\t\t\tarr[k] = v.trim();\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction nameString(arr:Array<String>) {\n\t\tvar text = arr[1];\n\t\tfor (i in 2...arr.length) {\n\t\t\ttext += ' ' + arr[i];\n\t\t}\n\t\treturn text.trim();\n\t}\n\n\tfunction isName(input:String) {\n\t\tvar check_letters = ~/([a-z])/i;\n\t\treturn check_letters.match(input);\n\t}\n\n\tfunction isId(input:String) {\n\t\tvar check_letters = ~/^[0-9]*$/;\n\t\treturn check_letters.match(input);\n\t}\n\n\tfunction isValidName(input:String) {\n\t\tvar check_letters = ~/^[A-Za-z0-9 :.?_-]{3,35}$/i;\n\t\treturn check_letters.match(input);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'quote';\n\t}\n}\n\ntypedef TQuoteData = {\n\t@:optional var id:Int;\n\t@:optional var tags:Array<String>;\n\t@:optional var name:String;\n\t@:optional var description:String;\n\t@:optional var author:String;\n\t@:optional var username:String;\n\t@:optional var timestamp:Date;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tThis class provides advanced methods on enums. It is ideally used with\n\t`using EnumTools` and then acts as an\n\t  [extension](https://haxe.org/manual/lf-static-extension.html) to the\n\t  `enum` types.\n\n\tIf the first argument to any of the methods is `null`, the result is\n\tunspecified.\n**/\nextern class EnumTools {\n\t/**\n\t\tReturns the name of enum `e`, including its path.\n\n\t\tIf `e` is inside a package, the package structure is returned dot-\n\t\tseparated, with another dot separating the enum name:\n\n\t\t\tpack1.pack2.(...).packN.EnumName\n\n\t\tIf `e` is a sub-type of a Haxe module, that module is not part of the\n\t\tpackage structure.\n\n\t\tIf `e` has no package, the enum name is returned.\n\n\t\tIf `e` is `null`, the result is unspecified.\n\n\t\tThe enum name does not include any type parameters.\n\t**/\n\tstatic inline function getName<T>(e:Enum<T>):String {\n\t\treturn Type.getEnumName(e);\n\t}\n\n\t/**\n\t\tCreates an instance of enum `e` by calling its constructor `constr` with\n\t\targuments `params`.\n\n\t\tIf `e` or `constr` is `null`, or if enum `e` has no constructor named\n\t\t`constr`, or if the number of elements in `params` does not match the\n\t\texpected number of constructor arguments, or if any argument has an\n\t\tinvalid type, the result is unspecified.\n\t**/\n\tstatic inline function createByName<T>(e:Enum<T>, constr:String, ?params:Array<Dynamic>):T {\n\t\treturn Type.createEnum(e, constr, params);\n\t}\n\n\t/**\n\t\tCreates an instance of enum `e` by calling its constructor number\n\t\t`index` with arguments `params`.\n\n\t\tThe constructor indices are preserved from Haxe syntax, so the first\n\t\tdeclared is index 0, the next index 1 etc.\n\n\t\tIf `e` or `index` is `null`, or if enum `e` has no constructor\n\t\tcorresponding to index `index`, or if the number of elements in `params`\n\t\tdoes not match the expected number of constructor arguments, or if any\n\t\targument has an invalid type, the result is unspecified.\n\t**/\n\tstatic inline function createByIndex<T>(e:Enum<T>, index:Int, ?params:Array<Dynamic>):T {\n\t\treturn Type.createEnumIndex(e, index, params);\n\t}\n\n\t/**\n\t\tReturns a list of all constructors of enum `e` that require no\n\t\targuments.\n\n\t\tThis may return the empty Array `[]` if all constructors of `e` require\n\t\targuments.\n\n\t\tOtherwise an instance of `e` constructed through each of its non-\n\t\targument constructors is returned, in the order of the constructor\n\t\tdeclaration.\n\n\t\tIf `e` is `null`, the result is unspecified.\n\t**/\n\tstatic inline function createAll<T>(e:Enum<T>):Array<T> {\n\t\treturn Type.allEnums(e);\n\t}\n\n\t/**\n\t\tReturns a list of the names of all constructors of enum `e`.\n\n\t\tThe order of the constructor names in the returned Array is preserved\n\t\tfrom the original syntax.\n\n\t\tIf `c` is `null`, the result is unspecified.\n\t**/\n\tstatic inline function getConstructors<T>(e:Enum<T>):Array<String> {\n\t\treturn Type.getEnumConstructs(e);\n\t}\n\n\t#if jvm\n\t@:noCompletion\n\textern static function values<T>(en:Enum<T>):jvm.NativeArray<java.lang.Enum<T>>;\n\t#end\n}\n\n/**\n\tThis class provides advanced methods on enum values. It is ideally used with\n\t`using EnumValueTools` and then acts as an\n\t  [extension](https://haxe.org/manual/lf-static-extension.html) to the\n\t  `EnumValue` types.\n\n\tIf the first argument to any of the methods is `null`, the result is\n\tunspecified.\n**/\nextern class EnumValueTools {\n\t/**\n\t\tRecursively compares two enum instances `a` and `b` by value.\n\n\t\tUnlike `a == b`, this function performs a deep equality check on the\n\t\targuments of the constructors (if there are any).\n\n\t\tIf `a` or `b` are `null`, the result is unspecified.\n\t**/\n\tstatic inline function equals<T:EnumValue>(a:T, b:T):Bool {\n\t\treturn Type.enumEq(a, b);\n\t}\n\n\t/**\n\t\tReturns the constructor name of enum instance `e`.\n\n\t\tThe result String does not contain any constructor arguments.\n\n\t\tIf `e` is `null`, the result is unspecified.\n\t**/\n\tstatic inline function getName(e:EnumValue):String {\n\t\treturn Type.enumConstructor(e);\n\t}\n\n\t/**\n\t\tReturns a list of the constructor arguments of enum instance `e`.\n\n\t\tIf `e` has no arguments, the result is `[]`.\n\n\t\tOtherwise the result are the values that were used as arguments to `e`,\n\t\tin the order of their declaration.\n\n\t\tIf `e` is `null`, the result is unspecified.\n\t**/\n\tstatic inline function getParameters(e:EnumValue):Array<Dynamic> {\n\t\treturn Type.enumParameters(e);\n\t}\n\n\t/**\n\t\tReturns the index of enum instance `e`.\n\n\t\tThis corresponds to the original syntactic position of `e`. The index of\n\t\tthe first declared constructor is 0, the next one is 1 etc.\n\n\t\tIf `e` is `null`, the result is unspecified.\n\t**/\n\tstatic inline function getIndex(e:EnumValue):Int {\n\t\treturn Type.enumIndex(e);\n\t}\n}\n","package db;\n\n@:forward\n@:forward.new\n@:forwardStatics\nabstract RecordSet(RecordSetImpl) {\n    @:arrayAccess\n    private inline function get(index:Int) {\n        return @:privateAccess this.records[index];\n    }\n\n    @:arrayAccess\n    private inline function set(index:Int, value:Record):Record {\n        @:privateAccess this.records[index] = value;\n        return value;\n    }\n\n    @:from\n    private static inline function fromArray(records:Array<Record>) {\n        return new RecordSet(records);\n    }\n\n    @:to \n    private inline function toArray():Array<Record> {\n        return @:privateAccess this.records;\n    }\n}\n\nprivate class RecordSetImpl {\n    private var records:Array<Record> = null;\n\n    public function new(records:Array<Record> = null) {\n        this.records = records;\n    }\n\n    @:noCompletion\n    public function iterator():RecordSetIterator {\n        return new RecordSetIterator(records);\n    }\n\n    public var length(get, null):Int;\n    private function get_length():Int {\n        if (records == null) {\n            return 0;\n        }\n        return records.length;\n    }\n\n    public function push(record:Record) {\n        if (records == null) {\n            records = [];\n        }\n        records.push(record);\n    }\n\n    public function filter(f:Record->Bool):RecordSet {\n        if (records == null) {\n            return [];\n        }\n        return records.filter(f);\n    }\n\n    public function findRecord(fieldName:String, fieldValue:Any):Record {\n        if (records == null) {\n            return null;\n        }\n\n        for (r in records) {\n            if (r.field(fieldName) == fieldValue) {\n                return r;\n            }\n        }\n\n        return null;\n    }\n\n    public function extractFieldValues<T>(fieldName:String):Array<T> {\n        if (records == null) {\n            return [];\n        }\n\n        var values:Array<T> = [];\n        for (r in records) {\n            var v = r.field(fieldName);\n            if (v != null) {\n                values.push(v);\n            }\n        }\n\n        return values;\n    }\n\n    public function renameField(fieldName:String, newFieldName:String) {\n        if (records == null) {\n            return;\n        }\n\n        for (r in records) {\n            r.renameField(fieldName, newFieldName);\n        }\n    }\n\n    public function copyField(fieldName:String, newFieldName:String) {\n        if (records == null) {\n            return;\n        }\n\n        for (r in records) {\n            r.copyField(fieldName, newFieldName);\n        }\n    }\n\n    public function copy():RecordSet {\n        return new RecordSet(this.records.copy());\n    }\n\n    public function normalizeFieldNames() { // ensures that all fields have max of 2 \".\" - can be useful when working with joins\n        for (r in records) @:privateAccess {\n            for (fieldName in r.data.keys()) {\n                if (fieldName.indexOf(\".\") != -1) {\n                    var fieldNameParts = fieldName.split(\".\");\n                    var newFieldName = null;\n                    if (fieldNameParts.length > 2) {\n                        while (fieldNameParts.length > 2) {\n                            fieldNameParts.shift();\n                        }\n                        newFieldName = fieldNameParts.join(\".\");\n                    }\n\n                    if (newFieldName != null) {\n                        r.field(newFieldName, r.field(fieldName));\n                        r.removeField(fieldName);\n                    }\n                }\n            }\n        }\n    }\n}\n\nprivate class RecordSetIterator {\n    private var records:Array<Record> = null;\n    private var pos:Int = 0;\n\n    public function new(records:Array<Record> = null) {\n        this.records = records;\n        this.pos = 0;\n    }\n\n    public function hasNext():Bool {\n        if (records == null) {\n            return false;\n        }\n        return pos < records.length;\n    }\n\n    public function next():Record {\n        var r = records[pos];\n        pos++;\n        return r;\n    }\n}","package commands;\n\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass React extends CommandBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase React(message_id, emoji):\n\t\t\t\tinteraction.channel.messages.fetch(message_id).then(function(react_message) {\n\t\t\t\t\treact_message.asType0.react(emoji).then(function(_) {\n\t\t\t\t\t\tinteraction.reply({content: '*reacted*', ephemeral: true})\n\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t}, (err) -> {\n\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\tcontent: '*failed to react, not sure why. invalid emoji perhaps? ask notbilly if no obvious reason*'\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t});\n\t\t\t\t}, (err) -> {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\tcontent: '*failed to react, not sure why. invalid emoji perhaps? ask notbilly if no obvious reason*'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'react';\n\t}\n}\n","package ts;\n\n/**\n\tAnyOf implementation generated by dts2hx\n**/\n@:transitive extern abstract AnyOf3<T0, T1, T2>(Dynamic) from T0 from T1 from T2 to T0 to T1 to T2 {\n\tvar asType0(get, never) : T0;\n\tprivate inline function get_asType0():T0 return this;\n\tvar asType1(get, never) : T1;\n\tprivate inline function get_asType1():T1 return this;\n\tvar asType2(get, never) : T2;\n\tprivate inline function get_asType2():T2 return this;\n}","package commands;\n\nimport commands.types.Duration;\nimport discord_js.MessageEmbed;\nimport discord_js.TextChannel;\nimport firebase.web.firestore.DocumentReference;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandDbBase;\nimport js.Browser;\nclass Reminder extends CommandDbBase {\n\tvar channels:Map<String, TextChannel> = [];\n\tvar checking = false;\n\tvar reminders:Array<TReminder> = [];\n\tvar sent:Array<TReminder> = [];\n\tfinal bot_channel = #if block '597067735771381771' #else '663246792426782730' #end;\n\tfinal casual_chat = '';\n\n\toverride function onEnabled() {\n\t\tFirestore.onSnapshot(collection(this.db, 'discord/reminders/entries'), function(resp) {\n\t\t\tvar arr = [];\n\t\t\tfor (item in resp.docs) {\n\t\t\t\tarr.push(item.data());\n\t\t\t}\n\t\t\tthis.reminders = arr;\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Reminder(content, when, personal, thread_reply):\n\t\t\t\tif (personal == null) {\n\t\t\t\t\tpersonal = false;\n\t\t\t\t}\n\n\t\t\t\tvar thread_id = '';\n\t\t\t\tif (thread_reply) {\n\t\t\t\t\tif (interaction.channel.isThread()) {\n\t\t\t\t\t\tthread_id = interaction.channel.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t'You marked `thread_reply` to true. Please trigger this command from a thread.'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar channel_id = null;\n\t\t\t\tvar category = interaction.channel.parent.name;\n\t\t\t\tif (category.toLowerCase() == 'offtopic') {\n\t\t\t\t\tchannel_id = interaction.channelId;\n\t\t\t\t}\n\n\t\t\t\tvar obj:TReminder = {\n\t\t\t\t\tchannel_id: channel_id,\n\t\t\t\t\tsent: false,\n\t\t\t\t\tthread_reply: thread_reply,\n\t\t\t\t\tthread_id: thread_id,\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tduration: Duration.fromString(when),\n\t\t\t\t\ttimestamp: Date.now().getTime(),\n\t\t\t\t\tauthor: interaction.user.id,\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tpersonal: personal\n\t\t\t\t}\n\n\t\t\t\tvar min = #if block \"0min\" #else \"4mins\" #end;\n\t\t\t\tvar duration = Duration.fromString(min);\n\n\t\t\t\tif (obj.duration == 0.) {\n\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t'Your time formatting was likely incorrect. Use units like __m__in(s), __h__ou__r__(s), __d__ay(s), __w__ee__k__(s) and __mo__nth(s)'\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (obj.duration <= duration) {\n\t\t\t\t\tinteraction.reply('Please set a reminder that is at least 5mins');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (obj.duration >= Duration.fromString('366days')) {\n\t\t\t\t\tinteraction.reply('A reminder can\\'t be set for longer than 366 days');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar col = Firestore.collection(this.db, 'discord/reminders/entries');\n\t\t\t\tFirestore.addDoc(col, obj).then(function(doc) {\n\t\t\t\t\tvar post_time = Math.round((obj.timestamp + obj.duration) / 1000);\n\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\tephemeral: personal,\n\t\t\t\t\t\tcontent: 'Your reminder has been set for <t:${post_time}>'\n\t\t\t\t\t}).then(function(msg) {\n\t\t\t\t\t\tobj.id = doc.id;\n\t\t\t\t\t\tFirestore.updateDoc(doc, obj).then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\toverride function update(_) {\n\t\tsuper.update(_);\n\n\t\tthis.getChannel(bot_channel);\n\n\t\tif (this.channels[bot_channel] == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (reminder in this.reminders) {\n\t\t\tif (reminder.sent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reminder.channel_id != null && !this.channels.exists(reminder.channel_id)) {\n\t\t\t\tthis.getChannel(reminder.channel_id);\n\t\t\t}\n\n\t\t\tvar post_time = reminder.timestamp + reminder.duration;\n\t\t\tif (Date.now().getTime() < post_time) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treminder.sent = true;\n\t\t\tvar parse = {parse: ['users']};\n\t\t\tvar embed = new MessageEmbed();\n\t\t\tembed.setTitle(\"Reminder\");\n\t\t\tembed.setDescription(reminder.content);\n\t\t\tembed.setFooter({text: '<t:${Math.round(reminder.timestamp / 1000)}>'});\n\t\t\tvar message = '> <@${reminder.author}> Your reminder was sent <t:${Math.round(reminder.timestamp / 1000)}:R>';\n\t\t\tvar content = '$message\\n${reminder.content}';\n\n\t\t\tif (reminder.thread_reply) {\n\t\t\t\tMain.client.channels.fetch(reminder.thread_id).then(function(channel:TextChannel) {\n\t\t\t\t\tchannel.send({content: content, allowedMentions: parse})\n\t\t\t\t\t\t.then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\treminder.sent = false;\n\t\t\t\t\t\t\treminder.duration += Duration.fromString('3hrs');\n\t\t\t\t\t\t\tthis.channel.send({\n\t\t\t\t\t\t\t\tcontent: '<@${reminder.author}> I failed to post a reminder to your thread. Might be an issue.',\n\t\t\t\t\t\t\t\tallowedMentions: parse\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else if (reminder.personal) {\n\t\t\t\tMain.client.users.fetch(reminder.author).then(function(user) {\n\t\t\t\t\tuser.send(content).then(null, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\treminder.sent = false;\n\t\t\t\t\t\treminder.duration += day;\n\t\t\t\t\t\tthis.channel.send({\n\t\t\t\t\t\t\tcontent: '<@${reminder.author}> I tried to DM you a reminder, but it failed. Do you accept messages from this server?',\n\t\t\t\t\t\t\tallowedMentions: parse\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar channel = this.channel;\n\t\t\t\tif (reminder.channel_id != null && this.channels.exists(reminder.channel_id)) {\n\t\t\t\t\tchannel = this.channels.get(reminder.channel_id);\n\t\t\t\t}\n\n\t\t\t\tchannel.send({content: content, allowedMentions: parse}).then(null, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\treminder.sent = false;\n\t\t\t\t\treminder.duration += hour;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (msg in this.reminders) {\n\t\t\tif (!msg.sent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar doc = Firestore.doc(this.db, 'discord/reminders/entries/${msg.id}');\n\t\t\tFirestore.deleteDoc(doc).then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t\tthis.sent.remove(msg);\n\t\t}\n\t}\n\n\tfunction getChannel(channel_id:String) {\n\t\tif (!this.checking && this.channels.get(channel_id) == null) {\n\t\t\tthis.checking = true;\n\t\t\tMain.client.channels.fetch(channel_id).then(function(channel:TextChannel) {\n\t\t\t\tthis.channels.set(channel.id, channel);\n\t\t\t\tthis.checking = false;\n\t\t\t\ttrace('Found ${channel.name} channel');\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tvar channel(get, never):TextChannel;\n\n\tfunction get_channel() {\n\t\treturn this.channels[bot_channel];\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'reminder';\n\t}\n}\n\ntypedef TReminder = {\n\tvar sent:Bool;\n\tvar thread_reply:Bool;\n\tvar id:String;\n\tvar channel_id:String;\n\tvar thread_id:String;\n\tvar duration:Duration;\n\tvar timestamp:Float;\n\tvar author:String;\n\tvar content:String;\n\tvar personal:Bool;\n}\n","package commands;\n\nimport js.node.Http;\nimport js.node.http.Server;\nimport commands.types.Duration;\nimport discord_builder.BaseCommandInteraction;\nimport discord_js.MessageEmbed;\nimport discord_js.TextChannel;\nimport components.Command;\nimport systems.CommandBase;\nimport js.Browser;\nimport discord_js.User;\nimport haxe.Json;\n\nclass Roundup extends CommandBase {\n\t//post once a week\n\tvar posted:Float = -1;\n\tvar last_checked:Float = -1;\n\tvar thursday_check:Float = -1;\n\tvar active:Bool = true;\n\tvar roundup(get, set):Int;\n\tvar channel:TextChannel = null;\n\tvar checking:Bool = false;\n\tvar _check_now:Bool = false;\n\tvar dmlist:Map<String, User> = ['367806496907591682' => null, '151104106973495296' => null];\n\n\tfinal super_mod_id:String = '198916468312637440';\n\tfinal news_role:String = '761714325227700225';\n\tfinal announcement_channel:String = #if block '597067735771381771' #else '286485321925918721' #end;\n\n\tvar sent = false;\n\t// var server:Server;\n\t// override function onEnabled() {\n\t// \ttrace('running');\n\t// \tHttp.createServer((request, response) -> {\n\t// \t\ttrace(request);\n\t// \t\ttrace(response);\n\t// \t});\n\t// }\n\n\tfunction dmUser(title:String, content:String) {\n\t\t#if block\n\t\treturn;\n\t\t#end\n\t\tvar regex = ~/\\((.*?)\\)/gmis;\n\t\tcontent = regex.replace(content, \"(<$1>)\");\n\t\tfor (key => user in dmlist) {\n\t\t\tif (user == null) {\n\t\t\t\ttrace('skipping $key');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tuser.send('## $title');\n\t\t\tvar arr = content.split('\\n');\n\t\t\tvar half = Math.floor(arr.length / 2);\n\t\t\tvar a = '';\n\t\t\tvar b = '';\n\t\t\tfor (i => line in arr) {\n\t\t\t\tif (i <= half) {\n\t\t\t\t\ta += line + '\\n';\n\t\t\t\t} else {\n\t\t\t\t\tb += line + '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\tuser.send(a).then((_) -> {\n\t\t\t\tuser.send(b).then(null, (err) -> trace(err));\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\t}\n\n\tfunction getHaxeIoPage() {\n\t\tvar data = new haxe.Http(\n\t\t\t'https://raw.githubusercontent.com/skial/haxe.io/master/src/roundups/$roundup.md'\n\t\t);\n\t\tvar embed = new MessageEmbed();\n\t\tdata.onError = (error) -> {\n\t\t\ttrace(error);\n\t\t}\n\n\t\tdata.onData = (body) -> {\n\t\t\tvar regex = ~/### News and Articles(.*?)##### _In case you missed it_/gmis;\n\t\t\tif (regex.match(body)) {\n\t\t\t\tembed.setTitle('Haxe Roundup #$roundup');\n\t\t\t\tembed.setURL('https://haxe.io/roundups/$roundup/');\n\n\t\t\t\tvar desc_split = regex.matched(1).trim().split('\\n');\n\t\t\t\tvar desc = '\\n**News And Articles**';\n\t\t\t\tfor (item in desc_split) {\n\t\t\t\t\tif (desc.length + item.trim().length + 3 + 22 >= 2048) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (item.contains(\"#### \")) {\n\t\t\t\t\t\titem = item.replace(\"#### \", \"### \");\n\t\t\t\t\t}\n\t\t\t\t\tdesc += '\\n' + item.trim();\n\t\t\t\t}\n\t\t\t\tdesc += '\\n...';\n\t\t\t\tembed.setDescription(desc);\n\t\t\t\tdmUser('Haxe Roundup #$roundup', desc);\n\t\t\t\tthis.channel.send({\n\t\t\t\t\tcontent: '<@&$news_role>',\n\t\t\t\t\tallowedMentions: {roles: [news_role]},\n\t\t\t\t\tembeds: [embed]\n\t\t\t\t}).then((_) -> {\n\t\t\t\t\tthis.roundup++;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tdata.request();\n\t}\n\n\tvar set_permissions = false;\n\n\toverride function update(_) {\n\t\tsuper.update(_);\n\t\tif (Main.state == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.channel == null && this.checking == false) {\n\t\t\tthis.checking = true;\n\t\t\tMain.client.channels.fetch(this.announcement_channel).then(function(channel) {\n\t\t\t\tthis.channel = cast channel;\n\t\t\t\tthis.checking = false;\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\n\t\t\tfor (key => user in this.dmlist) {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tMain.client.users.fetch(key).then((user) -> {\n\t\t\t\t\t\tthis.dmlist.set(key, user);\n\t\t\t\t\t\ttrace('Got ${user.tag}');\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.roundup == -1 || this.channel == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar today = Date.now();\n\t\tvar diff = today.getTime() - last_checked;\n\t\tvar day = today.getUTCDay() == 4 || today.getUTCDay() == 6;\n\t\tif (day || _check_now) {\n\t\t\tif (!this.shouldCheck()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (diff >= Duration.fromString('1d')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.last_checked = Date.now().getTime();\n\t\t}\n\n\t\tgetHaxeIoPage();\n\t}\n\n\tfunction shouldCheck() {\n\t\tvar today = Date.now();\n\t\tvar hour = today.getUTCHours();\n\n\t\tif (_check_now) {\n\t\t\t_check_now = false;\n\t\t\treturn true;\n\t\t}\n\n\t\tif (hour < 11 || hour > 14) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar min = today.getUTCMinutes();\n\t\tif (min % 30 != 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar diff = today.getTime() - thursday_check;\n\t\tif (diff <= Duration.fromString('25m')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthursday_check = today.getTime();\n\t\treturn true;\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tif (!hasRole(this.super_mod_id, interaction)) {\n\t\t\tinteraction.reply('Invalid permissions').then(null, null);\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (command.content) {\n\t\t\tcase Roundup(number):\n\t\t\t\tif (this.active) {\n\t\t\t\t\tthis.active = false;\n\t\t\t\t\tthis.last_checked = -1;\n\t\t\t\t\tinteraction.reply(\"Disabled haxe roundup monitoring\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (number <= 600) {\n\t\t\t\t\tinteraction.reply(\"Please enter a more recent roundup issue.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.roundup = number.int();\n\n\t\t\t\tinteraction.reply('Will start watching haxe roundups from **#$number**.');\n\t\t\t\tinteraction.client.channels.fetch(this.announcement_channel)\n\t\t\t\t\t.then(function(channel) {\n\t\t\t\t\t\tthis.channel = cast channel;\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tinline function get_roundup() {\n\t\treturn Main.state.next_roundup;\n\t}\n\n\tinline function set_roundup(value:Int) {\n\t\tMain.state.next_roundup = value;\n\t\tMain.updateState('next_roundup', Json.stringify(value));\t\n\n\t\treturn value;\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'roundup';\n\t}\n}\n","package commands;\n\nimport js.Browser;\nimport discord_js.ReactionCollector;\nimport Main.TRoundup;\nimport discord_js.GuildMember;\nimport discord_js.User;\nimport discord_js.Collection;\nimport discord_js.MessageReaction;\nimport discord_js.Message;\nimport discord_js.VoiceState;\nimport discord_js.TextChannel;\nimport commands.types.Duration;\nimport discord_js.VoiceChannel;\nimport discord_js.GuildScheduledEvent;\nimport discord_js.GuildScheduleEventManager;\nimport discord_js.Guild;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandDbBase;\nimport Main.CommandForward;\nimport discord_js.GuildScheduledEvent;\n\ntypedef RoundupEndEvent = {\n\tvar member:GuildMember;\n}\n\nclass RoundupRoundup extends CommandDbBase {\n\tvar guild(get, never):Guild;\n\tvar state(get, never):TRoundup;\n\n\tvar voice_text:TextChannel;\n\tvar announcement:TextChannel;\n\tvar voice_channel:VoiceChannel;\n\tvar host_m:GuildMember;\n\tvar last_checked:Float;\n\tvar schedule(get, never):GuildScheduleEventManager;\n\tvar event:GuildScheduledEvent;\n\tvar waiting:Bool = false;\n\tvar host_active:Bool = false;\n\tvar host_contacted:Bool = false;\n\tvar new_event_collector:ReactionCollector;\n\tvar end_event_collector:ReactionCollector;\n\n\tfinal voice_channel_id = #if block \"416069724657418244\" #else \"198219256687493120\" #end;\n\tfinal announcement_id = #if block \"597067735771381771\" #else \"286485321925918721\" #end;\n\tfinal voice_text_id = #if block \"597067735771381771\" #else \"220626116627529728\" #end;\n\tfinal event_role = #if block \"<@&1114582456381747232>\" #else \"<@&1054432874473996408>\" #end;\n\n\t@:fastFamily var end_event:{data:RoundupEndEvent};\n\t@:fastFamily var voice_update_events:{forward:CommandForward, old:VoiceState, updated:VoiceState};\n\t@:fastFamily var scheduled_event_updates:{forward:CommandForward, event:GuildScheduledEvent};\n\n\toverride function update(_) {\n\t\tsuper.update(_);\n\t\t// this.handleEndEvent();\n\n\t\tif (this.state == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (voice_channel == null && !waiting) {\n\t\t\twaiting = true;\n\t\t\tMain.client.channels.fetch(voice_channel_id).then(function(channel:VoiceChannel) {\n\t\t\t\tthis.voice_channel = channel;\n\t\t\t\twaiting = false;\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\n\t\tif (voice_channel == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (announcement == null && !waiting) {\n\t\t\twaiting = true;\n\t\t\tMain.client.channels.fetch(announcement_id).then(function(channel:TextChannel) {\n\t\t\t\tthis.announcement = channel;\n\t\t\t\twaiting = false;\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\n\t\tif (announcement == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (voice_text == null && !waiting) {\n\t\t\twaiting = true;\n\t\t\tMain.client.channels.fetch(voice_text_id).then(function(channel:TextChannel) {\n\t\t\t\twaiting = false;\n\t\t\t\tthis.voice_text = channel;\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\n\t\tif (voice_text == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (host_m == null && !waiting) {\n\t\t\twaiting = true;\n\t\t\ttrace(this.state.host);\n\t\t\tthis.guild.members.fetch({user: this.state.host, force: true}).then(function(member) {\n\t\t\t\tthis.host_m = member;\n\t\t\t\tthis.waiting = false;\n\t\t\t\ttrace('Roundup host obtained');\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\n\t\tif (this.host_m == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.event == null) {\n\t\t\tthis.getEvent();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.handleEventUpdates();\n\t\tthis.handleVoiceEvents();\n\t\tthis.handleScheduledEvent();\n\t}\n\n\tfunction scheduleNewEvent() {\n\t\tif (host_contacted || waiting) {\n\t\t\ttrace(host_contacted);\n\t\t\ttrace(waiting);\n\t\t\treturn;\n\t\t}\n\t\ttrace(this.host_m.user.tag);\n\t\twaiting = true;\n\t\tvar message = \"Time to schedule a new roundup roundup! How many weeks until the next roundup roundup?\\n\";\n\t\tvar reactions = ['2️⃣', '3️⃣', '4️⃣', '5️⃣'];\n\t\thost_contacted = true;\n\t\tthis.host_m.send(message).then(function(message) {\n\t\t\twaiting = false;\n\t\t\tnew_event_collector = this.addCollection('1w', reactions, message, newEventCollector);\n\t\t}, (err) -> trace(err));\n\t}\n\n\tfunction newEventCollector(reaction:MessageReaction, user:User) {\n\t\tif (user.bot) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar weeks = switch (reaction.emoji.name) {\n\t\t\tcase \"2️⃣\": 2;\n\t\t\tcase \"3️⃣\": 3;\n\t\t\tcase \"4️⃣\": 4;\n\t\t\tcase \"5️⃣\": 5;\n\t\t\tdefault: 2;\n\t\t}\n\t\tvar date = event.scheduledStartTimestamp + Duration.fromString('${weeks}w');\n\t\tthis.createEvent(date);\n\t\tthis.new_event_collector.stop('User selected $weeks weeks');\n\t}\n\n\tfunction handleEventUpdates() {\n\t\tif (this.event == null) {\n\t\t\treturn;\n\t\t}\n\t\titerate(scheduled_event_updates, (entity) -> {\n\t\t\tswitch (forward) {\n\t\t\t\tcase scheduled_event_update:\n\t\t\t\t\tif (event.id != this.event.id) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tevent.client.guilds.fetch({guild: Main.guild_id}).then(function(guild) {\n\t\t\t\t\t\tguild.scheduledEvents.fetch(event.id)\n\t\t\t\t\t\t\t.then(function(event:GuildScheduledEvent) {\n\t\t\t\t\t\t\t\tthis.event = (event);\n\t\t\t\t\t\t\t\thandleEventStatus(event);\n\t\t\t\t\t\t\t\ttrace('Updated event: ${event.status}');\n\t\t\t\t\t\t\t\ttrace('New time: ${Date.fromTime(event.scheduledStartTimestamp)}');\n\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t}, (err) -> trace(err));\n\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\tuniverse.deleteEntity(entity);\n\t\t});\n\t}\n\n\tfunction handleEventStatus(event:GuildScheduledEvent) {\n\t\tswitch (event.status) {\n\t\t\tcase Completed:\n\t\t\t\tthis.scheduleNewEvent();\n\t\t\tcase Active:\n\t\t\t\tif (state.announced || waiting) {\n\t\t\t\t\ttrace('here', state.announced, waiting);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar mention = (state.event_ping >= 3) ? event_role : '@everyone';\n\t\t\t\tvar message = '$mention come and join the haxe roundup where we go over what has been happening in haxe for the last few weeks!';\n\t\t\t\tif (state.event_ping >= 3) {\n\t\t\t\t\tstate.event_ping = 0;\n\t\t\t\t\tmessage += '\\n\\nIf you received this event and want to opt out please go to <#663246792426782730> and type `/notify events`';\n\t\t\t\t} else {\n\t\t\t\t\tstate.event_ping = state.event_ping + 1;\n\t\t\t\t}\n\t\t\t\tthis.voice_text.send({\n\t\t\t\t\tcontent: message,\n\t\t\t\t\tallowedMentions: {\n\t\t\t\t\t\tparse: [everyone, roles]\n\t\t\t\t\t}\n\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\tstate.announced = true;\n\t\t\t\tthis.setState(state);\n\t\t\t\ttrace('Event Started');\n\t\t\t\twaiting = false;\n\t\t\t\tthis.event = event;\n\t\t\tdefault:\n\t\t\t\ttrace(event.status);\n\t\t}\n\t}\n\n\tinline function handleVoiceEvents() {\n\t\titerate(voice_update_events, (entity) -> {\n\t\t\tswitch (forward) {\n\t\t\t\tcase roundup_member_update:\n\t\t\t\t\tif (event != null && event.status == Active) {\n\t\t\t\t\t\tvar member = updated.member;\n\t\t\t\t\t\tif (member != null && member.id == host && updated.channel == null) {\n\t\t\t\t\t\t\tmember.send(\n\t\t\t\t\t\t\t\t'Hi <@$host>, it looks like you left the voice channel. Should I end the event?'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(function(message) {\n\t\t\t\t\t\t\t\t\tvar reactions = [\"✅\", \"❎\"];\n\t\t\t\t\t\t\t\t\tend_event_collector = this.addCollection('1w', reactions,\n\t\t\t\t\t\t\t\t\t\tmessage, endEventCollector);\n\t\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction endEventCollector(reaction:MessageReaction, user:User) {\n\t\tif (user.bot) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (reaction.emoji.name) {\n\t\t\tcase \"✅\":\n\t\t\t\tevent.setStatus(Completed, \"Host ended the event.\").then((event) -> {\n\t\t\t\t\thost_m.send('Event ended, thank you for hosting!').then(function(_) {\n\t\t\t\t\t\thost_active = false;\n\t\t\t\t\t\twaiting = false;\n\t\t\t\t\t\t// this.event = event;\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t}, (err) -> trace(err));\n\t\t\tdefault:\n\t\t}\n\t\tend_event_collector.stop();\n\t}\n\n\tfunction handleScheduledEvent() {\n\t\tif (event.status != Scheduled) {\n\t\t\treturn;\n\t\t}\n\t\tvar now = Date.now().getTime();\n\t\tvar left = event.scheduledStartTimestamp - now;\n\t\tif (left > Duration.fromString('5m')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// check if host is around before considering starting the roundup\n\t\tif (!host_active) {\n\t\t\tif (now - last_checked > Duration.fromString('1m')) {\n\t\t\t\tthis.last_checked = now;\n\t\t\t\tfor (member in voice_channel.members) {\n\t\t\t\t\tif (member.id == host) {\n\t\t\t\t\t\thost_active = true;\n\t\t\t\t\t\ttrace('Host is active');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (left <= Duration.fromString('0s') && !waiting && host_active) {\n\t\t\twaiting = true;\n\t\t\tevent.setStatus(Active, 'Time to start the event!').then(function(_) {\n\t\t\t\twaiting = false;\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\twaiting = true;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction createEvent(date:Float) {\n\t\tvar title = 'Haxe Roundup Roundup';\n\t\tvar description = \"A community hosted discussion event where we go over the latest things that has gone on in the haxe over the last few weeks. We also have a period where people can show off what they're working on - its open floor come and join if you want :D\";\n\t\tthis.guild.scheduledEvents.create({\n\t\t\tname: title,\n\t\t\tchannel: this.voice_channel_id,\n\t\t\tentityType: Voice,\n\t\t\tprivacyLevel: GuildOnly,\n\t\t\tscheduledStartTime: date,\n\t\t\tdescription: description\n\t\t}).then(function(event) {\n\t\t\thost_contacted = false;\n\t\t\tthis.event = event;\n\t\t\tstate.announced = false;\n\t\t\tthis.state.event_id = event.id;\n\t\t\tvar time = 604800;\n\t\t\tevent.createInviteURL({maxAge: time, channel: voice_text_id}).then(function(url) {\n\t\t\t\tthis.voice_text.send(\n\t\t\t\t\t{content: 'Thanks for hanging out :grin: \\nGet ready for the next one! $url'}\n\t\t\t\t)\n\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\tthis.announcement.send(\n\t\t\t\t\t{content: 'Get ready for the next roundup roundup :grin: \\n$url'}\n\t\t\t\t)\n\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t}, (err) -> trace(err));\n\t\t\tthis.setState(state);\n\t\t\ttrace('Event setup!');\n\t\t\tthis.host_m.send(\n\t\t\t\t'New roundup event scheduled for <t:${Math.round(event.scheduledStartTimestamp / 1000)}:R>'\n\t\t\t)\n\t\t\t\t.then(null, (err) -> trace(err));\n\t\t}, (err) -> trace(err));\n\t}\n\n\tfunction getEvent() {\n\t\tif (waiting) {\n\t\t\treturn;\n\t\t}\n\n\t\twaiting = true;\n\t\tschedule.fetch(this.state.event_id).then(function(event) {\n\t\t\twaiting = false;\n\t\t\ttrace('Roundup event retrieved');\n\t\t\tthis.event = event;\n\t\t\thandleEventStatus(event);\n\t\t}, function(err) {\n\t\t\ttrace(err);\n\t\t\twaiting = false;\n\t\t});\n\t}\n\n\tinline function handleEndEvent() {\n\t\titerate(end_event, (entity) -> {\n\t\t\tevent.setStatus(Completed, \"Host ended the event.\").then((_) -> {\n\t\t\t\tdata.member.send('Event ended, thank you for hosting!').then(function(_) {\n\t\t\t\t\thost_active = false;\n\t\t\t\t\twaiting = false;\n\t\t\t\t}, (err) -> trace(err));\n\t\t\t}, (err) -> trace(err));\n\t\t\tuniverse.deleteEntity(entity);\n\t\t});\n\t}\n\n\tfunction addCollection(time:String, emojis:Array<String>, message:Message,\n\t\t\ton_collect:MessageReaction->User->Void,\n\t\t\t?on_end:Collection<String, MessageReaction>->String->Void) {\n\t\tfor (e in emojis) {\n\t\t\tmessage.react(e).then(null, (err) -> trace(err));\n\t\t}\n\n\t\tvar collector = message.createReactionCollector({time: Duration.fromString(time)});\n\t\tcollector.on('collect', on_collect);\n\t\tif (on_end != null) {\n\t\t\tcollector.on('end', on_end);\n\t\t}\n\n\t\treturn collector;\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tfunction addCollector(message:Message, member:GuildMember) {\n\t\tvar time:Float = Duration.fromString('1d');\n\t\tvar collector = message.createReactionCollector({time: time});\n\n\t\tcollector.on('collect', (reaction:MessageReaction, user:User) -> {\n\t\t\tif (user.bot) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (reaction.emoji.name) {\n\t\t\t\tcase \"✅\":\n\t\t\t\t\tvar obj:RoundupEndEvent = {\n\t\t\t\t\t\tmember: member\n\t\t\t\t\t}\n\t\t\t\t\tthis.universe.setComponents(universe.createEntity(), obj);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\tcollector.stop('User responded');\n\t\t});\n\n\t\tcollector.on(\n\t\t\t'end',\n\t\t\t(collected:Collection<String, MessageReaction>, reason:String) -> {}\n\t\t);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'rounduproundup';\n\t}\n\n\tfunction get_guild() {\n\t\treturn Main.client.guilds.cache.get(Main.guild_id);\n\t}\n\n\tfunction get_state() {\n\t\tif (Main.state == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn Main.state.roundup_roundup;\n\t}\n\n\tfunction setState(value) {\n\t\tMain.state.roundup_roundup = value;\n\t\tMain.updateState('roundup_roundup', Json.stringify(Main.state.roundup_roundup));\n\t}\n\n\tfunction get_started() {\n\t\treturn event.status == Active;\n\t}\n\n\tfunction get_schedule() {\n\t\treturn guild.scheduledEvents;\n\t}\n\n\tvar host(get, never):String;\n\n\tfunction get_host() {\n\t\t#if block\n\t\treturn \"151104106973495296\";\n\t\t#end\n\t\treturn this.state.host;\n\t}\n}\n\ntypedef TRoundupEventData = {\n\tvar scheduled:Bool;\n\tvar date:Float;\n\tvar host:String;\n\tvar host_confirmed:Bool;\n\tvar reminders:Bool;\n}\n","package commands;\n\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Rtfm extends CommandBase {\n\tvar data:Array<TRtfmFormat>;\n\n\toverride function onEnabled() {\n\t\tthis.data = loadFile('rtfm');\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tif (this.data == null) {\n\t\t\ttrace(\"failed to read rtfm data\");\n\t\t\treturn;\n\t\t}\n\t\tswitch (command.content) {\n\t\t\tcase Rtfm(channel):\n\t\t\t\tvar compare = channel;\n\t\t\t\tif (channel == null) {\n\t\t\t\t\tcompare = interaction.channel.name;\n\t\t\t\t}\n\n\t\t\t\tfor (item in data) {\n\t\t\t\t\tfor (val in item.keys) {\n\t\t\t\t\t\tif (val == compare) {\n\t\t\t\t\t\t\tinteraction.reply(item.content);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinteraction.reply('No information available.');\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'rtfm';\n\t}\n}\n\ntypedef TRtfmFormat = {\n\tvar keys:Array<String>;\n\tvar content:String;\n}\n","package systems;\n\nimport ecs.System;\nimport components.TextCommand;\nimport discord_js.Message;\n\nabstract class TextCommandBase extends System {\n\t@:fastFamily var commands:{command:TextCommand, message:Message};\n\n\toverride function update(_) {\n\t\tif (!Main.connected || !Main.commands_active) {\n\t\t\treturn;\n\t\t}\n\t\titerate(commands, entity -> {\n\t\t\tif (command == this.name) {\n\t\t\t\tthis.run(message, message.content.replace(this.name, ''));\n\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract function run(message:Message, content:String):Void;\n\n\tpublic var name(get, never):String;\n\n\tabstract function get_name():String;\n}\n","package commands;\n\nimport commands.types.Duration;\nimport systems.TextCommandBase;\nimport components.TextCommand;\nimport util.Random;\nimport js.node.Fs;\nimport haxe.Http;\nimport discord_js.TextChannel;\nimport discord_js.MessageEmbed;\nimport sys.FileSystem;\nimport discord_js.Message;\nimport js.node.ChildProcess.spawn;\nimport js.Browser;\n\nprivate typedef Request = {\n\taction:Action,\n\t?input:String,\n\t?hxml:String,\n};\n\nprivate enum abstract Action(String) {\n\tvar Run = \"run\";\n\tvar HaxeVersion = \"haxe_version\";\n\tvar HaxelibRun = \"haxelib_run\";\n}\n\nprivate enum abstract Status(String) {\n\tvar Ok;\n\tvar OhNo;\n}\n\nprivate typedef Response = {\n\tstatus:Status,\n\t?output:Null<String>,\n\t?error:Null<String>,\n}\n\nclass Run2 extends TextCommandBase {\n\tvar message_id:String;\n\tvar haxe_version:String = null;\n\tvar code_requests:Map<String, Array<Float>> = [];\n\tvar channel:TextChannel;\n\tvar checked:Bool = false;\n\tvar timeout = 5000;\n\tvar last_cleared:Float;\n\tvar site = #if block \"\" #else \"localhost\" #end;\n\n\toverride function onEnabled() {\n\t\t#if block\n\t\tsite = Main.keys.haxeip;\n\t\t#end\n\n\t\tvar http = new Http('http://$site:1337');\n\t\thttp.setHeader('Authorization', \"Basic \" + Main.keys.haxelib);\n\t\thttp.onError = function(error) {\n\t\t\ttrace(error);\n\t\t}\n\n\t\thttp.setPostData('{\n\t\t\t\t\"action\": \"haxe_version\"\n\t\t\t}');\n\n\t\thttp.onData = function(response) {\n\t\t\tvar parse:Response = Json.parse(response);\n\t\t\tswitch (parse.status) {\n\t\t\t\tcase Ok:\n\t\t\t\t\tthis.haxe_version = parse.output;\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(parse.output);\n\t\t\t\t\ttrace(parse.error);\n\t\t\t}\n\t\t}\n\n\n\t\thttp.request(true);\n\t}\n\n\tfunction run(message:Message, content:String) {\n\t\tif (this.haxe_version == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.extractCode(message.content, message);\n\t}\n\n\tfunction codeSource(message:String) {\n\t\tvar remote = ~/^(!run #([a-zA-Z0-9]{5,8}))/gi;\n\t\tvar source = \"\";\n\t\tif (remote.match(message)) {\n\t\t\tsource = 'https://try.haxe.org/#${remote.matched(2)}';\n\t\t}\n\t\treturn source;\n\t}\n\n\tfunction extractCode(message:String, response:Message) {\n\t\tvar check_code = ~/^(!run #([a-zA-Z0-9]{5,8}))/gi;\n\t\tif (check_code.match(message)) {\n\t\t\tvar regex = ~/(<code class=\"prettyprint haxe\">)(.*?)(<\\/code>)/gmius;\n\t\t\tvar get_code = new Http('https://try.haxe.org/embed/${check_code.matched(2)}');\n\t\t\tget_code.onData = (data) -> {\n\t\t\t\tif (regex.match(data)) {\n\t\t\t\t\tthis.parse(regex.matched(2).htmlUnescape(), response);\n\t\t\t\t}\n\t\t\t}\n\t\t\tget_code.request();\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_code = ~/^(!run(\\s|\\n| \\n|).```(haxe|hx|)(.*)```)/gmisu;\n\t\tif (check_code.match(message)) {\n\t\t\tthis.parse(check_code.matched(4), response);\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_code = ~/!run[\\s|\\n| \\n](.*)/gmis;\n\t\tif (check_code.match(message)) {\n\t\t\tthis.parse(check_code.matched(1), response);\n\t\t\treturn;\n\t\t}\n\t\tthis.parse(null, response);\n\t}\n\n\tfunction extractLibs(code:String) {\n\t\tvar check_code = ~/(\\/?\\/?-l\\W.*)/gmiu;\n\t\tif (!check_code.match(code)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar libs = [];\n\t\tvar i = 0;\n\t\twhile (check_code.match(code)) {\n\t\t\tvar split = check_code.matched(1).split(\" \");\n\t\t\t(i > 0) ? libs.push(' -L ') : libs.push('-L ');\n\t\t\t\n\t\t\tlibs.push(split[1]);\n\t\t\tcode = check_code.matchedRight();\n\t\t\ti++;\n\t\t}\n\n\t\treturn libs;\n\t}\n\n\tfunction canRequest(data:Array<Float>) {\n\t\tvar timings = 0.0;\n\t\tvar last = 0.0;\n\t\tvar count = 1;\n\t\tfor (i in 0...data.length) {\n\t\t\tif (data.length % 2 == 1 && (data.length - i) == 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tlast = data[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttimings += data[i] - last;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn (data.length < 6) || (timings / count) > 2000;\n\t}\n\n\tfunction cleanOutput(data:String, filename:String, class_entry) {\n\t\tdata = data.toString();\n\t\tvar remove_vm = ~/(\\[(.*|vm)\\].*)$/igmu;\n\n\t\t//data = data.replace(filename, class_entry).replace('\x1B', '');\n\t\tdata = data.replace(this.base_path, \"\");\n\t\tdata = data.replace(\"/hx/\", \"\");\n\t\tdata = data.replace(\"/bin/\", \"\");\n\t\tvar reg = ~/Main.hx:[0-9].*?: /gm;\n\t\tdata = reg.replace(data, '');\n\n\t\treturn data;\n\t}\n\n\tfunction getImportAndUsings(input:String, index:Int = 0) {\n\t\tvar regex = new EReg('^(import|using)(.*);$', 'igmu');\n\t\tvar matches = [];\n\t\twhile (regex.match(input)) {\n\t\t\tmatches.push(regex.matched(index));\n\t\t\tinput = regex.matchedRight();\n\t\t}\n\n\t\treturn {\n\t\t\tcode: input,\n\t\t\tpaths: matches\n\t\t};\n\t}\n\n\tfunction parse(code:String, response:Message) {\n\t\tif (code == null || code.length == 0) {\n\t\t\tresponse.reply(\n\t\t\t\t{content: 'Your `!run` command formatting is incorrect. Check the pin in <#663246792426782730>.'}\n\t\t\t);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\tvar class_exists = ~/(class.*({|\\n{))/mgu;\n\n\t\tif (class_exists.match(code)) {\n\t\t\tvar check_class = ~/(^class\\s(Test|Main)(\\n|\\s|\\S))/mgu;\n\t\t\tif (!check_class.match(code)) {\n\t\t\t\tresponse.reply({content: 'You must have a class called `Test` or `Main`'});\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tthis.runCodeOnThread(code, response);\n\t}\n\n\tfunction parseError(error:String, code:String) {\n\t\tvar embed = new MessageEmbed();\n\t\tembed.setTitle('Compilation Error');\n\n\t\tvar regex = ~/(Main|Test).hx:([0-9]+): (character|characters) ([0-9]+)(-([0-9]+))? : (.*)/gm;\n\t\tif (regex.match(error)) {\n\t\t\tvar line = regex.matched(2).parseInt();\n\t\t\tvar start_char = regex.matched(4).parseInt();\n\t\t\tvar end_char = regex.matched(6).parseInt();\n\t\t\tvar str = '';\n\t\t\tvar new_code = '';\n\n\t\t\tfor (key => value in code.split('\\n')) {\n\t\t\t\tif (key != (line - 1)) {\n\t\t\t\t\tnew_code += value + '\\n';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (i in 0...value.length) {\n\t\t\t\t\tvar pos = i + 1;\n\t\t\t\t\tvar char = value.charAt(i);\n\t\t\t\t\tif (pos < start_char) {\n\t\t\t\t\t\tstr += char;\n\t\t\t\t\t} else if (pos == start_char) {\n\t\t\t\t\t\tstr += '->$char';\n\t\t\t\t\t} else if (pos == end_char) {\n\t\t\t\t\t\tstr += '${char}<-';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnew_code += str + '\\n';\n\t\t\t}\n\t\t\tif (new_code.length > 3900) {\n\t\t\t\tnew_code = new_code.substr(0, 3900);\n\t\t\t}\n\n\t\t\tif (error.length > 3900) {\n\t\t\t\terror = error.substr(0, 3900);\n\t\t\t}\n\t\t\tembed.setDescription('```hx\\n' + new_code + '``` **Error** \\n $error');\n\t\t\treturn embed;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction runCodeOnThread(code:String, message:Message) {\n\t\tvar mention = '<@${message.author.id}>';\n\n\t\tvar libs = this.extractLibs(code);\n\t\tvar lib_regex = ~/(\\/?\\/?-l\\W.*)/gmiu;\n\t\tif (lib_regex.match(code)) {\n\t\t\tcode = lib_regex.replace(code, \"\");\n\t\t}\n\n\t\tvar get_paths = this.getImportAndUsings(code);\n\t\tvar format = '';\n\n\t\tfor (data in get_paths.paths) {\n\t\t\tformat += data;\n\t\t}\n\t\ttry {\n\t\t\tvar check_class = ~/(^class\\s(Test|Main)(\\n|\\s|\\S))/mg;\n\t\t\tvar code_content = get_paths.code;\n\t\t\tvar class_entry = \"Main\";\n\n\t\t\tif (check_class.match(get_paths.code)) {\n\t\t\t\tvar parsed = check_class.matched(0);\n\t\t\t\tvar replaced = \"\";\n\t\t\t\tif (parsed.contains(\"Test\")) {\n\t\t\t\t\tcode_content = code_content.replace('class Test', 'class Main');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcode_content = 'class $class_entry {\\n\\tstatic function main() {\\n\\t\\t${get_paths.code}\\n\\t}\\n}';\n\t\t\t}\n\n\t\t\tcode_content = format + '\\n' + code_content;\n\t\t\tvar pre_loop = code_content;\n\n\t\t\tvar http = new Http('http://$site:1337');\n\t\t\thttp.setHeader('Authorization', \"Basic \" + Main.keys.haxelib);\n\t\t\thttp.onError = function(error) {\n\t\t\t\ttrace(error);\n\t\t\t}\n\n\t\t\thttp.onData = function(response) {\n\t\t\t\tvar parse:Response = Json.parse(response);\n\t\t\t\tswitch (parse.status) {\n\t\t\t\t\tcase Ok:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar resp = '';\n\t\t\t\t\t\tvar extra = '';\n\n\t\t\t\t\t\tvar x = parse.output.split('\\n');\n\t\t\t\t\t\tvar truncate = false;\n\t\t\t\t\t\tvar max_lines = 40;\n\t\t\t\t\t\tif (parse.output.length > 3500) {\n\t\t\t\t\t\t\ttruncate = true;\n\t\t\t\t\t\t\tif (message.channel.asType0.id == \"663246792426782730\") {\n\t\t\t\t\t\t\t\tmax_lines = 105;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (line in x) {\n\t\t\t\t\t\t\tvar data = line + \"\\n\";\n\t\t\t\t\t\t\tif (resp.length + data.length > 3000) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresp += data;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresp = resp.substring(0, resp.lastIndexOf('\\n'));\n\n\t\t\t\t\t\tvar cembed = new MessageEmbed();\n\t\t\t\t\t\tvar oembed = new MessageEmbed();\n\t\t\t\t\t\t\n\t\t\t\t\t\tcembed.type = 'article';\n\t\t\t\t\t\toembed.type = 'article';\n\n\t\t\t\t\t\tvar code_output = '';\n\t\t\t\t\t\t//resp = parse.output;\n\n\t\t\t\t\t\tvar split = resp.split('\\n');\n\t\t\t\t\t\tfor (key => item in split) {\n\t\t\t\t\t\t\tif (key >= split.length - 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcode_output += '$key. $item \\n';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode_output = cleanOutput(code_output, 'Main.hx', 'Main');\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\tcode_output += '\\n//Output has been trimmed.';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar cdesc = '**Code:**\\n```hx\\n${get_paths.code}\\n```';\n\t\t\t\t\t\tvar odesc = '**Output:**\\n ```markdown\\n' + code_output + '```';\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar embeds = [];\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\toembed.setDescription(odesc);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcdesc += '\\n$odesc';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcembed.setDescription(cdesc);\n\t\t\t\t\t\tembeds.push(cembed);\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\tembeds.push(oembed);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// trace(cdesc);\n\t\t\t\t\t\t// trace(odesc);\n\t\t\t\t\t\t// cembed.setDescription(cdesc);\n\t\t\t\t\t\t// oembed.setDescription(odesc);\n\t\t\t\t\t\tvar url = this.codeSource(message.content);\n\t\t\t\t\t\tvar author = {\n\t\t\t\t\t\t\tname: '@' + message.author.username,\n\t\t\t\t\t\t\ticonURL: message.author.displayAvatarURL()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (url == \"\") {\n\t\t\t\t\t\t\tcembed.setAuthor(author);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar tag = url.split('#')[1];\n\t\t\t\t\t\t\tcembed.setTitle('TryHaxe #$tag');\n\t\t\t\t\t\t\tcembed.setURL(url);\n\t\t\t\t\t\t\tcembed.setAuthor(author);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar date = Date.fromTime(message.createdTimestamp);\n\t\t\t\t\t\tvar format_date = DateTools.format(date, \"%d-%m-%Y %H:%M:%S\");\n\t\t\t\t\t\tvar which = (truncate) ? oembed : cembed;\n\t\t\t\t\t\twhich.setFooter({\n\t\t\t\t\t\t\ttext: 'Haxe ${this.haxe_version}',\n\t\t\t\t\t\t\ticonURL: 'https://cdn.discordapp.com/emojis/567741748172816404.png?v=1'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// trace(resp);\n\t\t\t\t\t\t// trace(parse);\n\t\t\t\t\t\tif (resp.length > 0) {\n\t\t\t\t\t\t\tmessage.reply({allowedMentions: {parse: []}, embeds: embeds})\n\t\t\t\t\t\t\t\t.then((succ) -> {\n\t\t\t\t\t\t\t\t\ttrace('${message.author.tag} at $format_date with file id:');\n\t\t\t\t\t\t\t\t\tif (message.deletable) {\n\t\t\t\t\t\t\t\t\t\tmessage.delete().then(null, function(err) {\n\t\t\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase OhNo:\n\t\t\t\t\t\tvar compile_output = this.cleanOutput(parse.error, null, class_entry);\n\t\t\t\t\t\tvar errs = '';\n\t\t\t\t\t\tfor (line in parse.error.split('\\n')) {\n\t\t\t\t\t\t\tvar split = line.split('/');\n\t\t\t\t\t\t\terrs += split[split.length - 1] + '\\n';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar embed = parseError(errs, code_content);\n\t\t\t\t\t\tif (embed == null) {\n\t\t\t\t\t\t\tmessage.reply({\n\t\t\t\t\t\t\t\tallowedMentions: {parse: []},\n\t\t\t\t\t\t\t\tcontent: mention + '```\\n${compile_output}```'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmessage.reply({allowedMentions: {parse: []}, embeds: [embed]});\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar libstr = \"\";\n\t\t\tfor (lib in libs) {\n\t\t\t\tlibstr += '$lib';\n\t\t\t}\n\n\t\t\tvar request:Request = {\n\t\t\t\taction: Run,\n\t\t\t\tinput: code_content,\n\t\t\t\thxml: libstr\n\t\t\t}\n\t\t\t\n\t\t\ttrace(request);\n\n\t\t\tvar str = Json.stringify(request);\n\t\t\thttp.setPostData(str);\n\t\t\thttp.request(true);\n\t\t\treturn;\n\t\t} catch (e:Dynamic ) {\n\t\t\ttrace(e);\n\t\t\tthis.channel.send({content: mention + \"Code failed to execute.\"});\n\t\t}\n\t}\n\n\tvar base_path(get, never):String;\n\n\tfunction get_base_path():String {\n\t\tvar path = FileSystem.absolutePath('.');\n\t\tif (!FileSystem.exists(path + '/haxebot')) {\n\t\t\tFileSystem.createDirectory(path + '/haxebot');\n\t\t}\n\t\tpath += '/haxebot';\n\t\tvar date = DateTools.format(Date.now(), '%F');\n\t\tpath += '/$date';\n\t\tif (!FileSystem.exists(path)) {\n\t\t\tFileSystem.createDirectory(path);\n\t\t}\n\n\t\tif (!FileSystem.exists(path + '/hx')) {\n\t\t\tFileSystem.createDirectory(path + '/hx');\n\t\t}\n\n\t\tif (!FileSystem.exists(path + '/bin')) {\n\t\t\tFileSystem.createDirectory(path + '/bin');\n\t\t}\n\t\treturn path;\n\t}\n\n\tfunction get_name():String {\n\t\treturn '!run';\n\t}\n}\n","package sys;\n\nimport js.node.Fs;\nimport js.node.Path;\n#if haxe4\nimport js.lib.Error;\n#else\nimport js.Error;\n#end\n\n@:dce\n@:coreApi\nclass FileSystem {\n\tpublic static function exists(path:String):Bool {\n\t\treturn try {\n\t\t\tFs.accessSync(path);\n\t\t\ttrue;\n\t\t} catch (_:Dynamic) false;\n\t}\n\n\tpublic static inline function rename(path:String, newPath:String):Void {\n\t\tFs.renameSync(path, newPath);\n\t}\n\n\tpublic static inline function stat(path:String):sys.FileStat {\n\t\treturn cast Fs.statSync(path);\n\t}\n\n\tpublic static inline function fullPath(relPath:String):String {\n\t\treturn try Fs.realpathSync(relPath) catch (e:Dynamic) null;\n\t}\n\n\tpublic static inline function absolutePath(relPath:String):String {\n\t\tif (haxe.io.Path.isAbsolute(relPath))\n\t\t\treturn relPath;\n\t\treturn js.node.Path.resolve(relPath);\n\t}\n\n\tpublic static function isDirectory(path:String):Bool {\n\t\treturn try Fs.statSync(path).isDirectory() catch (e:Dynamic) false;\n\t}\n\n\tpublic static function createDirectory(path:String):Void {\n\t\ttry {\n\t\t\tFs.mkdirSync(path);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"ENOENT\") {\n\t\t\t\t// parent doesn't exist - create parent and then this dir\n\t\t\t\tcreateDirectory(Path.dirname(path));\n\t\t\t\tFs.mkdirSync(path);\n\t\t\t} else {\n\t\t\t\t// some other error - check if path is a dir, rethrow the error if not\n\t\t\t\t// (the `(e : Error)` cast is here to avoid HaxeError wrapping, though we need to investigate this in Haxe itself)\n\t\t\t\tvar stat = try Fs.statSync(path) catch (_:Dynamic) throw(e : Error);\n\t\t\t\tif (!stat.isDirectory())\n\t\t\t\t\tthrow(e : Error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static inline function deleteFile(path:String):Void {\n\t\tFs.unlinkSync(path);\n\t}\n\n\tpublic static inline function deleteDirectory(path:String):Void {\n\t\tif (exists(path)) {\n\t\t\tfor (file in readDirectory(path)) {\n\t\t\t\tvar curPath = path + \"/\" + file;\n\t\t\t\tif (isDirectory(curPath)) {\n\t\t\t\t\tdeleteDirectory(curPath);\n\t\t\t\t} else {\n\t\t\t\t\tdeleteFile(curPath);\n\t\t\t\t}\n\t\t\t}\n\t\t\tjs.node.Fs.rmdirSync(path);\n\t\t}\n\t}\n\n\tpublic static inline function readDirectory(path:String):Array<String> {\n\t\treturn Fs.readdirSync(path);\n\t}\n}\n","package commands;\n\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\n\nclass Say extends CommandBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Say(message, message_id):\n\t\t\t\tif (message_id == null) {\n\t\t\t\t\tinteraction.channel.sendTyping().then((_) -> {\n\t\t\t\t\t\tinteraction.channel.send({content: message}).then(null, (err) -> trace(err));\n\t\t\t\t\t\tinteraction.reply({content: \"sent\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tinteraction.channel.messages.fetch(message_id).then(function(reply) {\n\t\t\t\t\t\treply.asType0.reply({content: message})\n\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\tinteraction.reply({content: \"sent\", ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'say';\n\t}\n}\n","package commands;\n\nimport discord_js.TextChannel;\nimport js.html.URL;\nimport discord_js.MessageEmbed;\nimport haxe.Json;\nimport haxe.Http;\nimport discord_js.User;\nimport discord_js.Message;\nimport Main.CommandForward;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport js.Browser;\n\nclass ScamPrevention extends CommandBase {\n\t@:fastFamily var messages:{forward:CommandForward, message:Message};\n\tvar time_since:Map<String, Float> = new Map();\n\tvar sequential_tags:Map<String, Int> = new Map();\n\tvar user_list:Map<String, User> = new Map();\n\tvar trigger_messages:Map<String, Array<Message>> = new Map();\n\n\tvar phishing_urls:Array<String> = [];\n\tvar phishing_update_time:Float;\n\n\tvar timestamp(get, never):Float;\n\tfinal last_message_interval = 5000;\n\t\n\tfinal queue_time = 10000; //40 seconds\n\tvar hold_list:Map<String, Message> = [];\n\n\tfunction singleMessageCheck(message:Message) {\n\t\tif (!message.content.contains('@everyone') && !message.content.contains('@here')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (hasLink(message.content)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tvar counter = 0;\n\t\tif (checkContent([message])) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction hasLink(message:String) {\n\t\tvar markdown = ~/\\[.*?\\]\\(.*?\\)/gmi;\n\t\tif (markdown.match(message)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar https = ~/https:\\/\\/.*?\\..*?[\\/|\\s]/gmi;\n\t\tif (https.match(message)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(messages, entity -> {\n\t\t\tif (forward != scam_prevention) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.singleMessageCheck(message)) {\n\t\t\t\thold_list.set(message.id, message);\n\t\t\t}\n\n\t\t\tif (withinTime(message.createdTimestamp, last_message_interval)) {\n\t\t\t\tthis.updateTime(message.author.id);\n\t\t\t\tthis.addMessage(message.author.id, message);\n\t\t\t}\n\n\t\t\tthis.universe.deleteEntity(entity);\n\t\t});\n\n\t\tthis.getPhishingLinks();\n\n\t\tfor (messages in this.trigger_messages) {\n\t\t\tif (this.checkPhishingLinks(messages)) {\n\t\t\t\tthis.banUser(messages);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (messages.length < 3) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (m in messages) {\n\t\t\t\tif (this.hold_list.exists(m.id)) {\n\t\t\t\t\thold_list.remove(m.id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar review = false;\n\t\t\tif (this.checkTags(messages)) {\n\t\t\t\treview = true;\n\t\t\t}\n\n\t\t\tif (this.checkContent(messages)) {\n\t\t\t\treview = true;\n\t\t\t}\n\n\t\t\tif (this.checkEquality(messages)) {\n\t\t\t\treview = true;\n\t\t\t}\n\n\t\t\tif (!this.checkChannels(messages)) {\n\t\t\t\treview = false;\n\t\t\t}\n\n\t\t\tif (!review) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.reviewMessage(messages);\n\t\t\tthis.resetChecks(messages[0].author.id);\n\t\t}\n\n\t\tfor (key => value in hold_list) {\n\t\t\tvar now = Date.now().getTime() + queue_time;\n\t\t\ttrace(value.createdTimestamp);\n\t\t\t\n\t\t\tif (withinTime(value.createdTimestamp, queue_time)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.reviewMessage([value]);\n\t\t\tthis.resetChecks(value.author.id);\n\t\t\tthis.hold_list.remove(key);\n\t\t}\n\n\n\t\tfor (id => value in this.time_since) {\n\t\t\tif (this.timestamp - value > this.last_message_interval) {\n\t\t\t\tthis.resetChecks(id);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction reviewMessage(messages:Array<Message>) {\n\t\tvar message = messages[0];\n\t\tvar embed = this.reformatMessage('SPAM ALERT - Timed out', message);\n\n\t\tthis.timeoutUser(message, function(_) {\n\t\t\tmessage.reply({\n\t\t\t\tcontent: '<@&198916468312637440> Please review this message by: <@${message.author.id}>',\n\t\t\t\tembeds: [embed]\n\t\t\t}).then(function(_) {\n\t\t\t\tfor (message in messages) {\n\t\t\t\t\tmessage.delete().then(null, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tinline function resetChecks(id:String) {\n\t\tthis.time_since.remove(id);\n\t\tthis.user_list.remove(id);\n\t\tthis.trigger_messages.remove(id);\n\t}\n\n\tinline function getPhishingLinks() {\n\t\tif (this.timestamp - this.phishing_update_time < 1000 * 60 * 60 * 6) {\n\t\t\treturn;\n\t\t}\n\t\tphishing_update_time = this.timestamp;\n\t\tvar links = new Http(\n\t\t\t'https://raw.githubusercontent.com/Discord-AntiScam/scam-links/main/urls.json'\n\t\t);\n\t\tlinks.onData = function(data) {\n\t\t\ttry {\n\t\t\t\tphishing_urls = Json.parse(data);\n\t\t\t} catch (e ) {\n\t\t\t\ttrace(e);\n\t\t\t\ttrace('error parsing phishing links');\n\t\t\t\tthis.phishing_update_time = this.timestamp - 1000 * 60 * 60 * 5;\n\t\t\t}\n\t\t}\n\t\tlinks.request();\n\t}\n\n\tfunction timeoutUser(message:Message, ?callback:(_:Dynamic) -> Void) {\n\t\tmessage.guild.members.fetch(message.author.id).then(function(guild_member) {\n\t\t\tthis.logMessage(message.author.id,\n\t\t\t\tthis.reformatMessage('Original Message', message, false), TIMEOUT);\n\t\t\tguild_member.timeout(\n\t\t\t\t1000 * 60 * 60 * 12,\n\t\t\t\t'Stop spamming, a mod will review this at their convenience.'\n\t\t\t)\n\t\t\t\t.then(callback, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tthis.resetChecks(message.author.id);\n\t\t}, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tinline function checkChannels(messages:Array<Message>) {\n\t\tvar channel_count = 0;\n\t\tfor (k => m in messages) {\n\t\t\tif (k == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar last = messages[k - 1];\n\t\t\tif (last.channel.asType0.id != m.channel.asType0.id) {\n\t\t\t\tchannel_count++;\n\t\t\t}\n\t\t}\n\t\treturn channel_count > 2;\n\t}\n\n\tfunction banUser(messages:Array<Message>, ?callback:(_:Dynamic) -> Void) {\n\t\tvar message = messages[0];\n\t\tmessage.guild.members.fetch(message.author.id).then(function(guild_member) {\n\t\t\tfor (message in messages) {\n\t\t\t\tthis.logMessage(message.author.id,\n\t\t\t\t\tthis.reformatMessage('Original Message', message, false), BAN);\n\t\t\t}\n\t\t\tguild_member.ban({\n\t\t\t\tdays: 1,\n\t\t\t\treason: \"found phishing links, auto banned.\"\n\t\t\t}).then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t\tthis.resetChecks(message.author.id);\n\t\t\tmessage.channel.asType0.send(\n\t\t\t\t'User <@${message.author.id}> has been auto banned for sending scam links.'\n\t\t\t)\n\t\t\t\t.then(callback, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t}, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tfunction logMessage(id:String, embed:MessageEmbed, action:UserActions) {\n\t\tembed.description += '\\n\\n Action: **__${action}__**';\n\n\t\tMain.client.channels.fetch('952952631079362650').then(function(channel:TextChannel) {\n\t\t\tchannel.send({content: '<@$id>', embeds: [embed]});\n\t\t}, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tfunction checkContent(messages:Array<Message>) {\n\t\tvar keywords = ['$', 'crypto', 'market', 'profit', '£', 'nudes', 'free', 'gift', 'steam', 'telegram', 'giftcard', 'whatsapp', 'girls', 'sexy', 'teen', 'port', 'nsfw', '%', 'nitro', 'airdrop', 'forex', 'pay'];\n\t\tfor (m in messages) {\n\t\t\tfor (key in keywords) {\n\t\t\t\tif (m.content.toLowerCase().contains(key)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction checkPhishingLinks(messages:Array<Message>) {\n\t\tfor (message in messages) {\n\t\t\tfor (link in this.phishing_urls) {\n\t\t\t\tif (message.content.contains(link)) {\n\t\t\t\t\tvar regex = ~/((((https?:)(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/gm;\n\t\t\t\t\tif (regex.match(message.content)) {\n\t\t\t\t\t\tvar url = new URL(regex.matched(1));\n\t\t\t\t\t\tvar arr = [~/(.*)?.?(discordapp.com)/gu, ~/(.*)?.?(twitch.tv)/gu];\n\t\t\t\t\t\tvar whitelisted = false;\n\t\t\t\t\t\tfor (url_host_regex in arr) {\n\t\t\t\t\t\t\tif (url_host_regex.match(url.hostname)) {\n\t\t\t\t\t\t\t\twhitelisted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (whitelisted) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (url.hostname.length == 0 || url.hostname == null) {\n\t\t\t\t\t\t\ttrace(regex.matched(1));\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (link != url.hostname) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction checkTags(messages:Array<Message>) {\n\t\tvar tag_count = 0;\n\n\t\tfor (message in messages) {\n\t\t\tif (message.content.contains('@everyone') || message.content.contains('@here')) {\n\t\t\t\tif (tag_count >= 3) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttag_count++;\n\t\t\t}\n\t\t}\n\n\t\tif (tag_count >= 3) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction checkEquality(messages:Array<Message>) {\n\t\tvar equality_count = 0;\n\t\tvar channel_count = 0;\n\n\t\tvar compare = messages[0];\n\t\tfor (message in messages) {\n\t\t\ttry {\n\t\t\t\tvar content = message.content;\n\t\t\t\tif (compare.content == content) {\n\t\t\t\t\tequality_count++;\n\t\t\t\t}\n\t\t\t\tif (compare.channel.asType0.id != message.channel.asType0.id) {\n\t\t\t\t\tchannel_count++;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\ttrace(e);\n\t\t\t\ttrace(Json.stringify(messages));\n\t\t\t}\n\t\t}\n\n\t\tif (equality_count == messages.length && equality_count >= 3 && channel_count >= 4) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction reformatMessage(title:String, message:Message, format:Bool = true) {\n\t\tvar embed = new MessageEmbed();\n\t\tvar content = message.content;\n\n\t\tif (title != null) {\n\t\t\tembed.setTitle(title);\n\t\t}\n\n\t\tif (format) {\n\t\t\tvar link_regex = ~/(https?:\\/\\/(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9])(:?\\d*)\\/?([a-z_\\/0-9\\-#.]*)\\??([a-z_\\/0-9\\-#=&]*)/ig;\n\n\t\t\tif (link_regex.match(content)) {\n\t\t\t\tcontent = link_regex.replace(content, '[Link Removed]');\n\t\t\t}\n\n\t\t\tvar markdown_regex = ~/\\[.*\\)/ig;\n\n\t\t\tif (markdown_regex.match(content)) {\n\t\t\t\tcontent = markdown_regex.replace(content, '[Content Removed]');\n\t\t\t}\n\n\t\t\tcontent = content.replace(\"#\", \"\");\n\t\t}\n\n\t\tvar rand = Math.random();\n\t\tvar avatar = if (rand >= 0 && rand < 0.33) {\n\t\t\tmuffin;\n\t\t} else if (rand >= 0.33 && rand < 0.66) {\n\t\t\tbulby;\n\t\t} else {\n\t\t\tbsod;\n\t\t}\n\n\t\tembed.setAuthor({name: '${message.author.tag}', iconURL: avatar});\n\t\tembed.setDescription(content);\n\n\t\treturn embed;\n\t}\n\n\tinline function updateTime(user:String) {\n\t\tthis.time_since.set(user, this.timestamp);\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tprivate inline function get_timestamp() {\n\t\treturn Date.now().getTime();\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'scamprevention';\n\t}\n\n\tfunction addMessage(id:String, message:Message) {\n\t\tvar messages = this.trigger_messages.get(id);\n\t\tif (messages == null) {\n\t\t\tmessages = [];\n\t\t}\n\t\tmessages.push(message);\n\t\tthis.trigger_messages.set(id, messages);\n\t}\n}\n\nenum abstract UserActions(String) {\n\tvar NONE;\n\tvar TIMEOUT;\n\tvar BAN;\n}\n\nenum abstract CopLogo(String) to String {\n\tvar muffin = 'https://github.com/Jarrio/Haxebot/blob/master/bin/resources/images/muffin_haxe_cop.png?raw=true&rf=1';\n\tvar bulby = 'https://github.com/Jarrio/Haxebot/blob/master/bin/resources/images/bulby_haxe_cop.png?raw=true';\n\tvar bsod = 'https://github.com/Jarrio/Haxebot/blob/master/bin/resources/images/bsod_haxe_cop.png?raw=true';\n}\n","package discord_js;\n\nimport haxe.extern.EitherType;\n\ntypedef EmbedAuthorData = {\n\tvar name:String;\n\t@:optional var url:String;\n\t@:optional var iconURL:String;\n}\n\ntypedef EmbedFooterData = {\n\tvar text:String;\n\t@:optional var iconURL:String;\n}\n\n@:jsRequire('@discordjs/builders', 'EmbedBuilder')\nextern class MessageEmbed {\n\tfunction new(?data:ts.AnyOf2<MessageEmbed, MessageEmbedOptions>);\n\tpublic var data:Dynamic;\n\tpublic var author : Null<MessageEmbedAuthor>;\n\tpublic var color : Null<Float>;\n\tpublic final createdAt : Null<js.lib.Date>;\n\tpublic var description(get, set) : Null<String>;\n\tpublic inline function set_description(value:String):String {\n\t\tvar desc = this.data.description;\n\t\tthis.setDescription(desc + value);\n\t\treturn this.data.description;\n\t}\n\tpublic inline function get_description():String {\n\t\treturn this.data.description;\n\t}\n\n\tpublic var fields : Array<EmbedField>;\n\tpublic var files : Array<ts.AnyOf3<String, FileOptions, MessageAttachment>>;\n\tpublic var footer : Null<MessageEmbedFooter>;\n\tpublic final hexColor : Null<String>;\n\tpublic var image : Null<MessageEmbedImage>;\n\tpublic final length : Float;\n\tpublic var provider : Null<MessageEmbedProvider>;\n\tpublic var thumbnail : Null<MessageEmbedThumbnail>;\n\tpublic var timestamp : Null<Float>;\n\tpublic var title : Null<String>;\n\tpublic var type : String;\n\tpublic var url : Null<String>;\n\tpublic final video : Null<MessageEmbedVideo>;\n\tpublic function addFields(fields:...Field):MessageEmbed;\n\tpublic function attachFiles(file:Array<ts.AnyOf3<String, FileOptions, MessageAttachment>>):MessageEmbed;\n\tpublic function setAuthor(options:EmbedAuthorData):MessageEmbed;\n\tpublic function setColor(color:ColorResolvable):MessageEmbed;\n\tpublic function setDescription(description:Dynamic):MessageEmbed;\n\tpublic function setFooter(data:EmbedFooterData):MessageEmbed;\n\tpublic function setImage(url:String):MessageEmbed;\n\tpublic function setThumbnail(url:String):MessageEmbed;\n\tpublic function setTimestamp(?timestamp:ts.AnyOf2<Float, js.lib.Date>):MessageEmbed;\n\tpublic function setTitle(title:String):MessageEmbed;\n\tpublic function setURL(url:String):MessageEmbed;\n\tpublic function spliceFields(index:Float, deleteCount:Float, fields:haxe.extern.Rest<Any>):MessageEmbed;\n\tpublic function toJSON():Dynamic;\n\tstatic var prototype : MessageEmbed;\n\tpublic static function normalizeField(name:Dynamic, value:Dynamic, ?inline_:Bool):{\n\t\tvar name : Dynamic;\n\t\tvar value : Dynamic;\n\t\t@:native(\"inline\")\n\t\tvar inline_ : Bool;\n\t};\n\tpublic static function normalizeFields(fields:haxe.extern.Rest<Any>):Array<{\n\t\tvar name : Dynamic;\n\t\tvar value : Dynamic;\n\t\t@:native(\"inline\")\n\t\tvar inline_ : Bool;\n\t}>;\n}\n\n@:structInit\nclass Field {\n\tvar name:String;\n\tvar value:String;\n\t@:native('inline')\n\tvar _inline:Null<Bool>;\n\tpublic function new(name:String, value:String, ?in_line:Bool) {\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis._inline = in_line;\n\t}\n}","package commands;\n\nimport haxe.PosInfos;\nimport discord_js.WebhookClient;\nimport discord_builder.ButtonBuilder;\nimport discord_js.ThreadChannel;\nimport components.ShowcaseModalSubmit;\nimport discord_builder.APIActionRowComponent;\nimport discord_js.TextChannel;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport systems.CommandBase;\nimport js.Browser;\nclass Showcase extends CommandBase {\n\tvar channel:TextChannel;\n\t#if block\n\tfinal channel_id = '1100053767493255182';\n\t#else\n\tfinal channel_id = '162664383082790912';\n\t#end\n\n\tvar webhook:WebhookClient;\n\tvar checking = false;\n\t@:fastFamily var modal:{command:BaseCommandInteraction, modal:ShowcaseModalSubmit};\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\t@:fastFamily var interactions:{command:CommandForward, interaction:BaseCommandInteraction};\n\n\tpublic function new(_) {\n\t\tsuper(_);\n\t\tvar hook = Main.keys.showcase_hook;\n\t\t#if block\n\t\thook = Main.keys.showcase_hook_debug;\n\t\treturn;\n\t\t#end\n\t\tthis.webhook = new WebhookClient({url: hook});\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\n\t\tif (this.channel == null && !checking) {\n\t\t\tchecking = true;\n\t\t\tMain.client.channels.fetch(this.channel_id).then(function(channel) {\n\t\t\t\tthis.channel = channel;\n\t\t\t\tchecking = false;\n\t\t\t\ttrace('loaded showcase channel');\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\n\t\tif (channel == null) {\n\t\t\treturn;\n\t\t}\n\n\t\titerate(modal, entity -> {\n\t\t\tthis.channel.send('${modal.title_or_link} \\n ${modal.description}').then(function(_) {\n\t\t\t\tcommand.reply('Your post was submitted to the showcase channel!');\n\t\t\t});\n\n\t\t\tthis.universe.deleteEntity(entity);\n\t\t});\n\n\t\titerate(messages, entity -> {\n\t\t\tswitch(command) {\n\t\t\t\tcase showcase_message:\n\t\t\t\t\tvar regex = ~/https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/ig;\n\n\t\t\t\t\tif (!regex.match(message.content) && message.attachments.size == 0) {\n\t\t\t\t\t\tvar content = '```\\n${message.content}\\n```';\n\t\t\t\t\t\tcontent += '\\nYour message was removed due to not having any attachments or links. Please chat within threads only.\\n';\n\t\t\t\t\t\tcontent += '**Showcase Channel guidelines:**\\n\\n';\n\t\t\t\t\t\tcontent += '1. Programming projects must be haxe related\\n2. Comments on posts should be made within threads\\n3. Art and Music showcases are allowed here';\n\n\t\t\t\t\t\tmessage.author.send({content: content}).then(function(succ) {\n\t\t\t\t\t\t\tmessage.delete().then(null, (err) -> trace(err));\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tcase showcase:\n\t\t\t\t\tvar thread = cast(message.channel.asType0, ThreadChannel);\n\t\t\t\t\tif (!message.channel.asType0.isThread()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t#if !block\n\t\t\t\t\tif (thread.id != \"1024905470621798410\") { // TODO: (LD thread id) better solution\n\t\t\t\t\t\tif (thread.ownerId != message.author.id) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t#end\n\t\t\t\t\tvar arr = [];\n\n\t\t\t\t\tvar content = message.content.substring(10).trim();\n\t\t\t\t\tfor (a in message.attachments) {\n\t\t\t\t\t\tarr.push(a);\n\t\t\t\t\t\ttrace(a);\n\t\t\t\t\t}\n\t\t\t\t\tvar name = message.author.displayName;\n\n\t\t\t\t\tvar cont = () -> this.webhook.send({\n\t\t\t\t\t\tcontent: '***Continue the conversation at - <#${thread.id}>***',\n\t\t\t\t\t\tusername: name,\n\t\t\t\t\t\tavatarURL: message.author.avatarURL()\n\t\t\t\t\t});\n\n\t\t\t\t\t// trace(message.attachments);\n\t\t\t\t\tthis.webhook.send({\n\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t\tusername: name,\n\t\t\t\t\t\tavatarURL: message.author.avatarURL(),\n\t\t\t\t\t\tfiles: arr\n\t\t\t\t\t}).then(function(_) {\n\t\t\t\t\t\tcont();\n\t\t\t\t\t}, function(err:{message:String}) {\n\t\t\t\t\t\tif (err != null && err.message.contains(\"Request entity too large\")) {\n\t\t\t\t\t\t\tthis.webhook.send({\n\t\t\t\t\t\t\t\tcontent: content + '\\n' + arr[0].url,\n\t\t\t\t\t\t\t\tusername: name,\n\t\t\t\t\t\t\t\tavatarURL: message.author.avatarURL()\n\t\t\t\t\t\t\t}).then(function(_) {\n\t\t\t\t\t\t\t\tcont();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\n\t\titerate(interactions, entity -> {\n\t\t\tif (command == CommandForward.showcase_agree) {\n\t\t\t\tinteraction.member.roles.add('1021517470080700468').then(function(success) {\n\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\tcontent: 'Thanks! You can now post in <#162664383082790912>',\n\t\t\t\t\t\tephemeral: true\n\t\t\t\t\t});\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (command == CommandForward.showcase_disagree) {\n\t\t\t\tinteraction.reply({content: \"Keep on lurking :)\", ephemeral: true});\n\t\t\t}\n\n\t\t\tswitch(command) {\n\t\t\t\tcase showcase_agree | showcase_disagree:\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tvar text = 'If your post does not contain either an __**attachment**__ or a __**link**__, the post will be removed. Any comments on any of the works posted in the <#162664383082790912> channel should be made within threads. \\n\\n**Guidelines**\\n1. Programming projects must be haxe related\\n2. Comments on posts should be made within threads\\n3. Art and Music showcases are allowed here';\n\t\tvar agree_btn = new ButtonBuilder().setCustomId('showcase_agree')\n\t\t\t.setLabel('Agree')\n\t\t\t.setStyle(Primary);\n\t\tvar disagree_btn = new ButtonBuilder().setCustomId('showcase_disagree')\n\t\t\t.setLabel('Disagree')\n\t\t\t.setStyle(Secondary);\n\t\tvar row = new APIActionRowComponent().addComponents(agree_btn, disagree_btn);\n\n\t\tinteraction.reply({content: text, components: [row], ephemeral: true});\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'showcase';\n\t}\n}\n","package commands;\n\nimport discord_js.Message;\nimport Main.CommandForward;\nimport discord_builder.APIActionRowComponent;\nimport discord_builder.ButtonBuilder;\nimport externs.FuzzySort;\nimport firebase.web.firestore.DocumentSnapshot;\nimport discord_js.MessageEmbed;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandDbBase;\nimport js.Browser;\n\nclass Snippet extends CommandDbBase {\n\tvar sent:Array<TSnippet> = [];\n\tvar tags:Array<{name:String, value:String}> = [];\n\tfinal results_per_page:Int = 5;\n\tfinal results_per_page_no_desc:Int = 20;\n\tvar cache:Map<String, TListState> = [];\n\t@:fastFamily var button_events:{command:CommandForward, interaction:BaseCommandInteraction};\n\n\toverride function onEnabled() {\n\t\tthis.has_subcommands = true;\n\t\tFirestore.onSnapshot(doc(this.db, 'discord/snippets'),\n\t\t\tfunction(resp:DocumentSnapshot<{tags:Array<String>}>) {\n\t\t\t\tvar arr = [];\n\t\t\t\tfor (tag in resp.data().tags) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tname: tag,\n\t\t\t\t\t\tvalue: tag\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.tags = arr;\n\t\t\t\tthis.tags.sort(function(a, b) {\n\t\t\t\t\tif (a.name.charCodeAt(0) > b.name.charCodeAt(0)) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name.charCodeAt(0) < b.name.charCodeAt(0)) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\toverride function update(_) {\n\t\tsuper.update(_);\n\t\titerate(button_events, entity -> {\n\t\t\tvar cache = this.cache.get(interaction.user.id);\n\t\t\tif (cache != null) {\n\t\t\t\tswitch (command) {\n\t\t\t\t\tcase snippet_left:\n\t\t\t\t\t\tif (cache.page - 1 >= 0) {\n\t\t\t\t\t\t\tvar embed = this.formatResultOutput(cache, -1);\n\t\t\t\t\t\t\tcache.message.edit({embeds: [embed]});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcache.interacted_at = Date.now().getTime();\n\t\t\t\t\t\tinteraction.deferUpdate().then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\t\tcase snippet_right:\n\t\t\t\t\t\tvar page = cache.page;\n\t\t\t\t\t\tvar results_pp = (cache.desc) ? results_per_page : results_per_page_no_desc;\n\t\t\t\t\t\tvar max = Math.ceil(cache.results.length / results_pp);\n\t\t\t\t\t\tif (page + 1 < max) {\n\t\t\t\t\t\t\tvar embed = this.formatResultOutput(cache, 1);\n\t\t\t\t\t\t\tcache.message.edit({embeds: [embed]});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcache.interacted_at = Date.now().getTime();\n\t\t\t\t\t\tinteraction.deferUpdate().then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (command == snippet_left || command == snippet_right) {\n\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t}\n\t\t});\n\n\t\tfor (key => item in cache) {\n\t\t\tvar now = Date.now().getTime();\n\t\t\tvar diff = now - item.interacted_at;\n\t\t\tif (diff < 30000) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\titem.interacted_at = now;\n\t\t\tvar embed = this.formatResultOutput(item, 0);\n\t\t\titem.message.edit({embeds: [embed], components: []}).then(function(_) {\n\t\t\t\tthis.cache.remove(key);\n\t\t\t}, function(err) {\n\t\t\t\tif (item.message.deleted) {\n\t\t\t\t\tthis.cache.remove(key);\n\t\t\t\t}\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase SnippetAdd(url, title, description, taga, tagb, tagc, tagd, tage):\n\t\t\t\tvar ac = taga;\n\t\t\t\tvar obj:TSnippet = {\n\t\t\t\t\tid: -1,\n\t\t\t\t\tsubmitted_by: interaction.user.id,\n\t\t\t\t\ttimestamp: Date.now().getTime(),\n\t\t\t\t\ttitle: title,\n\t\t\t\t\tdescription: description,\n\t\t\t\t\turl: url,\n\t\t\t\t\ttags: [taga]\n\t\t\t\t}\n\n\t\t\t\tif (tagb != null) {\n\t\t\t\t\tac = tagb;\n\t\t\t\t\tobj.tags.push(tagb);\n\t\t\t\t}\n\n\t\t\t\tif (tagc != null) {\n\t\t\t\t\tac = tagc;\n\t\t\t\t\tobj.tags.push(tagc);\n\t\t\t\t}\n\n\t\t\t\tif (tagd != null) {\n\t\t\t\t\tac = tagd;\n\t\t\t\t\tobj.tags.push(tagd);\n\t\t\t\t}\n\n\t\t\t\tif (tage != null) {\n\t\t\t\t\tac = tage;\n\t\t\t\t\tobj.tags.push(tage);\n\t\t\t\t}\n\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tvar results = this.autoComplete(ac);\n\t\t\t\t\tinteraction.respond(results);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!validateURL(url)) {\n\t\t\t\t\tinteraction.reply('Invalid URL format');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (url.charAt(url.length - 1) == '/') {\n\t\t\t\t\turl = url.substring(0, url.length - 1);\n\t\t\t\t}\n\n\t\t\t\tfor (tag in obj.tags) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (v in this.tags) {\n\t\t\t\t\t\tif (tag == v.name) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t'The tag __${tag}__ is not available as an option currently.'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar q = query(collection(db, 'discord/snippets/entries'),\n\t\t\t\t\twhere('url', EQUAL_TO, url));\n\t\t\t\tFirestore.getDocs(q).then(function(resp) {\n\t\t\t\t\tif (!resp.empty) {\n\t\t\t\t\t\tinteraction.reply('Snippet already exists');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar doc = doc(db, 'discord/snippets');\n\t\t\t\t\tFirestore.runTransaction(this.db, function(transaction) {\n\t\t\t\t\t\treturn transaction.get(doc).then(function(doc) {\n\t\t\t\t\t\t\tif (!doc.exists()) {\n\t\t\t\t\t\t\t\treturn {id: -1};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar data:{id:Int} = (doc.data());\n\t\t\t\t\t\t\tdata.id = data.id + 1;\n\t\t\t\t\t\t\ttransaction.update(doc.ref, data);\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(function(value) {\n\t\t\t\t\t\tobj.id = value.id;\n\t\t\t\t\t\tobj.tags.insert(0, '${value.id}');\n\n\t\t\t\t\t\tthis.addDoc('discord/snippets/entries', obj, function(_) {\n\t\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t\t'*Snippet #${value.id} added!*\\ntitle: $title\\n$description\\n'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tcase SnippetSearch(taga, tagb, tagc):\n\t\t\t\tvar restraints = [];\n\t\t\t\tvar search = '';\n\t\t\t\tif (taga != null) {\n\t\t\t\t\tsearch = taga;\n\t\t\t\t}\n\n\t\t\t\tif (tagb != null) {\n\t\t\t\t\tsearch = tagb;\n\t\t\t\t}\n\n\t\t\t\tif (tagc != null) {\n\t\t\t\t\tsearch = tagc;\n\t\t\t\t}\n\n\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\tvar results = this.autoComplete(search);\n\t\t\t\t\tinteraction.respond(results);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isValidTag(taga)) {\n\t\t\t\t\tsearch = taga;\n\t\t\t\t\trestraints.push(taga);\n\t\t\t\t}\n\n\t\t\t\tif (isValidTag(tagb)) {\n\t\t\t\t\tsearch = tagb;\n\t\t\t\t\trestraints.push(tagb);\n\t\t\t\t}\n\n\t\t\t\tif (isValidTag(tagc)) {\n\t\t\t\t\tsearch = tagc;\n\t\t\t\t\trestraints.push(tagc);\n\t\t\t\t}\n\n\t\t\t\tif (restraints != null && restraints.length > 0) {\n\t\t\t\t\tvar q = query(collection(this.db, 'discord/snippets/entries'),\n\t\t\t\t\t\twhere('tags', ARRAY_CONTAINS_ANY, restraints));\n\t\t\t\t\tgetDocs(q).then(function(resp) {\n\t\t\t\t\t\tvar res = new Array<TSnippet>();\n\n\t\t\t\t\t\tfor (doc in resp.docs) {\n\t\t\t\t\t\t\tres.push(doc.data());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tres = matchTags(restraints, res);\n\n\t\t\t\t\t\tvar obj = {\n\t\t\t\t\t\t\tpage: 0,\n\t\t\t\t\t\t\tdesc: true,\n\t\t\t\t\t\t\tmessage: null,\n\t\t\t\t\t\t\tresults: res,\n\t\t\t\t\t\t\tinteracted_at: Date.now().getTime()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.handleSearchResponse(interaction, obj);\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcase SnippetList(user, show_desc):\n\t\t\t\tif (show_desc == null) {\n\t\t\t\t\tshow_desc = true;\n\t\t\t\t}\n\n\t\t\t\tvar q = query(collection(this.db, 'discord/snippets/entries'),\n\t\t\t\t\torderBy('id', ASCENDING));\n\t\t\t\tif (user != null) {\n\t\t\t\t\tq = query(collection(this.db, 'discord/snippets/entries'),\n\t\t\t\t\t\twhere('submitted_by', EQUAL_TO, user.id), orderBy('id', ASCENDING));\n\t\t\t\t}\n\n\t\t\t\tgetDocs(q).then(function(resp) {\n\t\t\t\t\tvar res = [];\n\n\t\t\t\t\tfor (doc in resp.docs) {\n\t\t\t\t\t\tres.push(doc.data());\n\t\t\t\t\t}\n\n\t\t\t\t\tvar obj = {\n\t\t\t\t\t\tpage: 0,\n\t\t\t\t\t\tdesc: show_desc,\n\t\t\t\t\t\tmessage: null,\n\t\t\t\t\t\tresults: res,\n\t\t\t\t\t\tinteracted_at: Date.now().getTime()\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.handleSearchResponse(interaction, obj);\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tcase SnippetEdit(id):\n\t\t\t\tvar q = query(collection(this.db, 'discord/snippets/entries'),\n\t\t\t\t\twhere('id', EQUAL_TO, id),\n\t\t\t\t\twhere('submitted_by', EQUAL_TO, interaction.user.id));\n\t\t\t\tgetDocs(q).then(function(resp) {\n\t\t\t\t\tif (resp.empty && !interaction.isAutocomplete()) {\n\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t'No snippets with that id were found that could belong to you'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\t\tvar res = [];\n\t\t\t\t\t\tif (resp.docs.length > 0) {\n\t\t\t\t\t\t\tvar data = (resp.docs[0].data() : TSnippet);\n\t\t\t\t\t\t\tres.push({name: '${data.id} - ${data.title}', value: '${data.id}'});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinteraction.respond(res);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tinteraction.reply('Editting currently not implemented');\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tcase SnippetDelete(id):\n\t\t\t\tvar q = query(collection(this.db, 'discord/snippets/entries'),\n\t\t\t\t\twhere('id', EQUAL_TO, id.parseInt()),\n\t\t\t\t\twhere('submitted_by', EQUAL_TO, interaction.user.id));\n\t\t\t\tgetDocs(q).then(function(resp) {\n\t\t\t\t\tif (resp.empty && !interaction.isAutocomplete()) {\n\t\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\t'No snippets with that id were found that could belong to you'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\t\tvar res = [];\n\t\t\t\t\t\tif (resp.docs.length > 0) {\n\t\t\t\t\t\t\tvar data = (resp.docs[0].data() : TSnippet);\n\t\t\t\t\t\t\tres.push({name: '${data.id} - ${data.title}', value: '${data.id}'});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinteraction.respond(res);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tFirestore.deleteDoc(resp.docs[0].ref).then(function(_) {\n\t\t\t\t\t\tinteraction.reply('Your snippet(#$id) has been deleted.');\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tcase SnippetTags:\n\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\tembed.setTitle('Tags');\n\t\t\t\tfor (i => tag in tags) {\n\t\t\t\t\tif (i % 2 == 0 && i != tags.length - 1) {\n\t\t\t\t\t\tembed.addFields(new Field(tag.name, tags[i + 1].name, true));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == tags.length - 1) {\n\t\t\t\t\t\tembed.addFields(new Field(tag.name, '...', true));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinteraction.reply({embeds: [embed]}).then(null, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction matchTags(tags:Array<String>, results:Array<TSnippet>) {\n\t\tvar arr = [];\n\t\tfor (r in results) {\n\t\t\tvar matches = 0;\n\n\t\t\tfor (rtag in r.tags) {\n\t\t\t\tif (tags.contains(rtag)) {\n\t\t\t\t\tmatches++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matches == tags.length) {\n\t\t\t\tarr.push(r);\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction handleSearchResponse(interaction:BaseCommandInteraction, state:TListState) {\n\t\tvar builder = new APIActionRowComponent();\n\t\tbuilder.addComponents(\n\t\t\tnew ButtonBuilder().setCustomId('snippet_left').setLabel('Prev').setStyle(Primary),\n\t\t\tnew ButtonBuilder().setCustomId('snippet_right').setLabel('Next').setStyle(Primary)\n\t\t);\n\n\t\tvar arr = [];\n\t\tvar results_pp = (state.desc) ? results_per_page : results_per_page_no_desc;\n\t\tvar max = Math.ceil(state.results.length / results_pp);\n\t\tif (max > 1) {\n\t\t\tarr = [builder];\n\t\t}\n\n\t\tvar embed = formatResultOutput(state, 0);\n\t\tvar eph = false;\n\t\tif (embed.description == 'No results found') {\n\t\t\teph = true;\n\t\t}\n\t\tinteraction.reply({\n\t\t\tembeds: [embed],\n\t\t\tcomponents: arr,\n\t\t\tephemeral: eph,\n\t\t\tfetchReply: true\n\t\t}).then(function(message) {\n\t\t\tif (!eph || max == 1) {\n\t\t\t\tstate.message = message;\n\t\t\t\tthis.cache.set(interaction.user.id, state);\n\t\t\t}\n\t\t}, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n\n\tfunction formatResultOutput(state:TListState, forward:Int) {\n\t\tvar embed = new MessageEmbed();\n\t\tvar desc = 'No results found';\n\t\tvar results = state.results;\n\t\tvar results_pp = (state.desc) ? results_per_page : results_per_page_no_desc;\n\t\tvar max = Math.ceil(results.length / results_pp);\n\n\t\tembed.setTitle('Snippets');\n\t\tif (results.length > 0) {\n\t\t\tdesc = '';\n\t\t\tif (forward == -1) {\n\t\t\t\tstate.page = state.page - 1;\n\t\t\t}\n\n\t\t\tif (forward == 1) {\n\t\t\t\tstate.page = state.page + 1;\n\t\t\t}\n\n\t\t\tvar start = 0;\n\t\t\tif (state.page > 0) {\n\t\t\t\tstart = state.page * results_pp;\n\t\t\t}\n\n\t\t\tvar end = start + results_pp;\n\n\t\t\tif (start < 0) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\n\t\t\tif (end > results.length) {\n\t\t\t\tend = results.length;\n\t\t\t}\n\n\t\t\tfor (i => data in results.slice(start, end)) {\n\t\t\t\tvar count = start + i + 1;\n\t\t\t\tdesc += '**$count) [${data.title}](${data.url})**\\n';\n\t\t\t\tif (state.desc) {\n\t\t\t\t\tdesc += '***tags: ${data.tags.slice(1).toString().replace(',', ', ')}***\\n';\n\t\t\t\t\tdesc += data.description + '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tembed.setColor(0xEA8220);\n\t\tembed.setDescription(desc);\n\t\tif (results.length > 0) {\n\t\t\tembed.setFooter({\n\t\t\t\ticonURL: 'https://cdn.discordapp.com/emojis/567741748172816404.png?v=1',\n\t\t\t\ttext: 'Page ${state.page + 1} / ${max}'\n\t\t\t});\n\t\t}\n\n\t\treturn embed;\n\t}\n\n\tfunction validateURL(content:String) {\n\t\tvar regex = ~/((((https?:)(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/gm;\n\t\tif (regex.match(content)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction autoComplete(term:String) {\n\t\tvar results = [];\n\t\tvar algo = FuzzySort.go(term, this.tags, {key: 'name', limit: 15, threshold: -1000});\n\n\t\tfor (a in algo) {\n\t\t\tresults.push(a.obj);\n\t\t}\n\n\t\tif (results.length == 0) {\n\t\t\tresults = this.tags.slice(0, 20);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tfunction isValidTag(tag:String) {\n\t\tvar found = false;\n\t\tfor (v in this.tags) {\n\t\t\tif (tag == v.name) {\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn found;\n\t}\n\n\tfunction createEmbed(obj:TSnippet) {\n\t\tvar embed = new MessageEmbed();\n\t\tembed.setTitle(obj.title);\n\t\tembed.setURL(obj.url);\n\t\tembed.setDescription(obj.description);\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'snippet';\n\t}\n}\n\ntypedef TListState = {\n\tvar page:Int;\n\tvar desc:Bool;\n\tvar interacted_at:Float;\n\tvar message:Message;\n\tvar results:Array<TSnippet>;\n}\n\ntypedef TSnippet = {\n\tvar id:Int;\n\tvar submitted_by:String;\n\tvar timestamp:Float;\n\tvar url:String;\n\tvar title:String;\n\tvar description:String;\n\tvar tags:Array<String>;\n}\n","package commands;\n\nimport sys.FileSystem;\nimport js.Browser;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport sys.io.File;\n\nclass ThreadCount extends CommandBase {\n\tvar count:Map<String, Int> = [];\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\tfinal path = \"./config/threadcount.json\";\n\n\toverride function onEnabled() {\n\t\tif (FileSystem.exists(path)) {\n\t\t\tcount = Json.parse(File.getContent(path));\n\t\t}\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\t#if block\n\t\treturn;\n\t\t#end\n\t\titerate(messages, (entity) -> {\n\t\t\tswitch (command) {\n\t\t\t\tcase thread_count:\n\t\t\t\t\tvar count = -1;\n\t\t\t\t\tvar channel = message.channel.asType0;\n\t\t\t\t\tif (this.count.exists(channel.id)) {\n\t\t\t\t\t\tcount = this.count.get(channel.id) + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcount = 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.count.set(channel.id, count);\n\t\t\t\t\tFile.saveContent(path, Json.stringify(this.count));\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tif (this.count.exists(interaction.channelId)) {\n\t\t\tvar count = this.count.get(interaction.channelId);\n\t\t\tinteraction.reply({content: 'This thread has ${count} messages'})\n\t\t\t\t.then(null, function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tvar content = '';\n\t\t\tcontent = switch (interaction.channel.type) {\n\t\t\t\tcase PUBLIC_THREAD | ANNOUNCEMENT_THREAD | PRIVATE_THREAD:\n\t\t\t\t\t'Either a new thread or was created before 23/04/2024. Check back later.';\n\t\t\t\tdefault:\n\t\t\t\t\t'This is not a thread :angry:';\n\t\t\t}\n\t\t\tinteraction.reply({content: content}).then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'threadcount';\n\t}\n}\n","package commands;\n\nimport externs.Fetch;\nimport discord_builder.BaseCommandInteraction;\nimport components.Command;\nimport systems.CommandBase;\nimport js.Browser;\nclass Translate extends CommandBase {\n\tvar usage:TUsage;\n\n\toverride function onEnabled() {\n\t\tthis.getCount();\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Translate(to, message, from):\n\t\t\t\tif (this.usage == null) {\n\t\t\t\t\tinteraction.reply(\"An error occured\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.usage.character_count + message.length > this.usage.character_limit) {\n\t\t\t\t\tinteraction.reply(\n\t\t\t\t\t\t\"API has reached its limit unfortunately. Please wait till next month.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.getTranslation(interaction, from, to, message);\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction getCount() {\n\t\tthis.request('/v2/usage').then((resp) -> {\n\t\t\tresp.json().then(function(body:TUsage) {\n\t\t\t\tthis.usage = body;\n\t\t\t\ttrace(\n\t\t\t\t\t'Character count: ${this.usage.character_count}/${this.usage.character_limit}'\n\t\t\t\t);\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction getTranslation(interaction:BaseCommandInteraction, from:String, to:String,\n\t\t\tmessage:String) {\n\t\tif (from == null) {\n\t\t\tfrom = '';\n\t\t}\n\n\t\ttry {\n\t\t\tthis.request(\n\t\t\t\t'/v2/translate?source_lang=$from&target_lang=$to&text=$message'\n\t\t\t)\n\t\t\t\t.then((resp) -> {\n\t\t\t\t\tresp.json().then(function(body:{translations:Array<TTranslated>}) {\n\t\t\t\t\t\tvar content = '';\n\t\t\t\t\t\tfor (item in body.translations) {\n\t\t\t\t\t\t\tcontent += item.text + '\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinteraction.reply(content).then((_) -> this.getCount(), function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} catch (e ) {\n\t\t\ttrace('Deepl error');\n\t\t\ttrace(e.details);\n\t\t\ttrace(e.message);\n\t\t\ttrace(e);\n\t\t\tinteraction.reply('Deepl error?').then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getLanguages() {\n\t\tthis.request('/v2/languages').then((resp) -> {\n\t\t\tresp.json().then(function(body:Array<TLanguage>) {\n\t\t\t\tvar str = '[';\n\t\t\t\tfor (item in body) {\n\t\t\t\t\tstr += '{\n\t\t\t\t\t\t\"name\": \"${item.name}\",\n\t\t\t\t\t\t\"value\": \"${item.language}\"\n\t\t\t\t\t},';\n\t\t\t\t}\n\t\t\t\tstr += ']';\n\t\t\t\ttrace(str);\n\t\t\t}, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tinline function request(endpoint:String) {\n\t\treturn Fetch.fetch('https://api-free.deepl.com$endpoint', {\n\t\t\tmethod: HttpMethod.GET,\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'DeepL-Auth-Key ' + Main.keys.deepl_key\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'translate';\n\t}\n}\n\nprivate typedef TUsage = {\n\tvar character_count:Float;\n\tvar character_limit:Float;\n}\n\nprivate typedef TLanguage = {\n\tvar language:String;\n\tvar name:String;\n\tvar supports_formality:Bool;\n}\n\nprivate typedef TTranslated = {\n\tvar text:String;\n\tvar detected_source_language:String;\n}\n","package commands;\n\nimport discord_js.MessageOptions;\nimport discord_js.TextChannel;\nimport discord_js.VoiceChannel;\nimport discord_builder.BaseCommandInteraction;\nimport discord_js.Message;\nimport components.Command;\nimport systems.CommandBase;\nimport discord_js.WebhookClient;\nimport discord_js.Collection;\nimport Main.CommandForward;\nimport discord_js.MessageMentionOptions;\n\nclass VoiceChatBridge extends CommandBase {\n\tvar voice_text_chat:WebhookClient;\n\tvar voice_channel_chat:WebhookClient;\n\n\tfinal mentions:MessageMentionOptions = {parse: []};\n\tfinal voicetext = #if block \"714201892959289500\" #else \"220626116627529728\" #end;\n\tfinal voice = #if block \"416069724657418244\" #else \"198219256687493120\" #end;\n\n\tvar voice_channel:VoiceChannel;\n\tvar text_channel:TextChannel;\n\n\tvar map_cache:Map<String, String> = [];\n\n\t@:fastFamily var messages:{cmd:CommandForward, message:Message};\n\n\toverride function onEnabled() {\n\t\tvar obj = #if block Main.keys.debug_hooks #else Main.keys.hooks #end;\n\t\tvar vc = obj.voice_channel;\n\t\tvar vt_channel = obj.voice_text_channel;\n\n\t\tvoice_channel_chat = new WebhookClient({url: vc});\n\t\tvoice_text_chat = new WebhookClient({url: vt_channel});\n\t\tMain.client.channels.fetch(voicetext).then(function(channel:TextChannel) {\n\t\t\ttrace(\"got voice text channel\");\n\t\t\ttext_channel = channel;\n\t\t}, (err) -> trace(err));\n\n\t\tMain.client.channels.fetch(voice).then(function(channel:VoiceChannel) {\n\t\t\ttrace(\"got voice channel\");\n\t\t\tvoice_channel = channel;\n\t\t}, (err) -> trace(err));\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\n\t\titerate(messages, (entity) -> {\n\t\t\tvar name = message.author.displayName;\n\t\t\tvar msg:MessageOptions = {\n\t\t\t\tcontent: message.content,\n\t\t\t\tusername: name,\n\t\t\t\tavatarURL: message.author.avatarURL(),\n\t\t\t\tattachments: message.attachments,\n\t\t\t\tallowedMentions: {\n\t\t\t\t\tusers: []\n\t\t\t\t}\n\t\t\t}\n\t\t\tmsg.allowedMentions.users.resize(0);\n\t\t\tswitch (cmd) {\n\t\t\t\tcase voice_chat_bridge:\n\t\t\t\t\tif (message.reference?.messageId != null) {\n\t\t\t\t\t\ttext_channel.messages.fetch(message.reference.messageId).then((data:Message) -> {\n\t\t\t\t\t\t\tif (data.webhookId != null) {\n\t\t\t\t\t\t\t\tvoice_channel.messages.fetch({limit: 1, around: message.reference.messageId})\n\t\t\t\t\t\t\t\t\t.then((msgs:Collection<String, Message>) -> {\n\t\t\t\t\t\t\t\t\t\tvar key = \"\";\n\t\t\t\t\t\t\t\t\t\tvar og_msg = null;\n\t\t\t\t\t\t\t\t\t\tfor (k => v in msgs) {\n\t\t\t\t\t\t\t\t\t\t\tkey = k;\n\t\t\t\t\t\t\t\t\t\t\tog_msg = v;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tmsg.content = '${og_msg.url} <@${og_msg.author.id}> ${msg.content}';\n\n\t\t\t\t\t\t\t\t\t\tmsg.allowedMentions.users.push(og_msg.author.id);\n\t\t\t\t\t\t\t\t\t\tvoice_channel_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvoice_channel_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvoice_channel_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tcase voice_channel_bridge:\n\t\t\t\t\tif (message.reference?.messageId != null) {\n\t\t\t\t\t\tvoice_channel.messages.fetch(message.reference.messageId).then((data:Message) -> {\n\t\t\t\t\t\t\tif (data.webhookId != null) {\n\t\t\t\t\t\t\t\ttext_channel.messages.fetch({limit: 1, around: message.reference.messageId})\n\t\t\t\t\t\t\t\t\t.then((msgs:Collection<String, Message>) -> {\n\t\t\t\t\t\t\t\t\t\tvar key = \"\";\n\t\t\t\t\t\t\t\t\t\tvar og_msg = null;\n\t\t\t\t\t\t\t\t\t\tfor (k => v in msgs) {\n\t\t\t\t\t\t\t\t\t\t\tkey = k;\n\t\t\t\t\t\t\t\t\t\t\tog_msg = v;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tmsg.content = '${og_msg.url} <@${og_msg.author.id}> ${msg.content}';\n\n\t\t\t\t\t\t\t\t\t\tmsg.allowedMentions.users.push(og_msg.author.id);\n\t\t\t\t\t\t\t\t\t\tvoice_text_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvoice_text_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvoice_text_chat.send(msg).then(null, (err) -> trace(err));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {}\n\n\tfunction get_name():String {\n\t\treturn '--nocommand';\n\t}\n}\n","package commands.events;\n\nimport sys.FileSystem;\nimport sys.io.File;\nimport js.Browser;\nimport discord_js.Message;\nimport discord_js.ThreadChannel;\nimport Main.CommandForward;\nimport ecs.System;\n\nclass PinMessageInfo extends System {\n\t@:fastFamily var threads:{command:CommandForward, thread:ThreadChannel};\n\tvar messages:Array<Message> = [];\n\tvar notified:Map<String, Bool> = [];\n\tfinal path = './config/pinmessage.json';\n\toverride function onEnabled() {\n\t\tif (FileSystem.exists(path)) {\n\t\t\tthis.notified = Json.parse(File.getContent(path));\n\t\t}\n\t}\n\n\tfunction saveHistory(uid:String) {\n\t\tthis.notified.set(uid, true);\n\t\tFile.saveContent(path, Json.stringify(this.notified));\n\t}\n\n\toverride function update(_dt:Float) {\n\t\titerate(threads, entity -> {\n\t\t\tswitch (command) {\n\t\t\t\tcase thread_pin_message:\n\t\t\t\t\tif (notified.exists(thread.ownerId) || thread.parentId == \"162664383082790912\" /* showcase channel */) {\n\t\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar now = Date.now().getTime();\n\t\t\t\t\tif (now - thread.createdTimestamp < 10000) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthread.send(\n\t\t\t\t\t\t{content: '<@${thread.ownerId}> You can pin messages in your own threads by Right clicking a message -> Apps -> Pin Message\\n\\n*This message will selfdestruct in 30 seconds.*'}\n\t\t\t\t\t)\n\t\t\t\t\t\t.then(function(message) {\n\t\t\t\t\t\t\tsaveHistory(thread.ownerId);\n\t\t\t\t\t\t\tthis.messages.push(message);\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\tif ((err?.message:String).indexOf('Unknown Channel') != -1) {\n\t\t\t\t\t\t\t\treturn; //assume thread was deleted\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\tthis.universe.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t\tvar now = Date.now().getTime();\n\t\tfor (message in messages) {\n\t\t\tif (now - message.createdTimestamp < 30000) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmessage.delete().then(function(_) {\n\t\t\t\tthis.messages.remove(message);\n\t\t\t}, (err) -> trace(err));\n\t\t}\n\t}\n}\n","package commands.mod;\n\nimport discord_js.GuildMember;\nimport util.Duration;\nimport database.DBEvents;\nimport discord_js.MessageEmbed;\nimport discord_js.User;\nimport externs.FuzzySort;\nimport js.Browser;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandBase;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport discord_js.TextChannel;\nimport database.types.DBRateLimit;\nimport Query.query;\n\nprivate typedef TTracker = {\n\tvar counter:Int;\n\tvar member:GuildMember;\n\tvar last_message:Float;\n}\n\nclass RateLimit extends CommandBase {\n\tvar tracking:Map<String, TTracker> = [];\n\tvar limits:Map<String, DBRateLimit> = [];\n\tvar records:Bool = false;\n\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\n\tfinal silence_role = #if block \"1257723900813639801\" #else \"503359600712482827\" #end;\n\n\toverride function onEnabled() {\n\t\tvar e = DBEvents.GetAllRecords('rate_limit', function(response) {\n\t\t\tswitch (response) {\n\t\t\t\tcase Records(data):\n\t\t\t\t\tfor (r in data) {\n\t\t\t\t\t\tvar obj = DBRateLimit.fromRecord(r);\n\t\t\t\t\t\tlimits.set(obj.user_id, obj);\n\t\t\t\t\t\tvar tracker = tracking.get(obj.user_id);\n\t\t\t\t\t\tif (!tracking.exists(obj.user_id)) {\n\t\t\t\t\t\t\tsetTracker(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trecords = true;\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(response);\n\t\t\t}\n\t\t});\n\t\tuniverse.setComponents(universe.createEntity(), e);\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\tif (!records) {\n\t\t\treturn;\n\t\t}\n\t\titerate(messages, (entity) -> {\n\t\t\tswitch (command) {\n\t\t\t\tcase rate_limit:\n\t\t\t\t\tfor (limit in limits) {\n\t\t\t\t\t\tif (message.author.id != limit.user_id\n\t\t\t\t\t\t\t|| limit.silenced > -1\n\t\t\t\t\t\t\t|| message.channel.asType0.id == \"663246792426782730\"\n\t\t\t\t\t\t\t|| message.channel?.asType3?.id == \"1311129828069740604\") {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tracker = tracking.get(limit.user_id);\n\t\t\t\t\t\tif (tracker.counter >= limit.count) {\n\t\t\t\t\t\t\t// silence\n\t\t\t\t\t\t\ttracker.last_message = message.createdTimestamp;\n\t\t\t\t\t\t\ttracker.member.roles.add(silence_role).then(function(resp) {\n\t\t\t\t\t\t\t\t //trace('${Date.now()} user ${limit.user_tag} silenced');\n\t\t\t\t\t\t\t\tlimit.silenced = tracker.last_message;\n\t\t\t\t\t\t\t\tupdateLimit(limit);\n\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttracker.counter++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\n\t\tfor (limit in limits) {\n\t\t\tif (limit.silenced == -1 || !tracking.exists(limit.user_id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar now = Date.now().getTime();\n\t\t\tvar dur:Float = Duration.fromString(limit.time);\n\t\t\tvar diff = limit.silenced + dur;\n\n\t\t\tif (now > diff) {\n\t\t\t\t\n\t\t\t\tvar tracker = tracking.get(limit.user_id);\n\t\t\t\ttracker.member.roles.remove(silence_role).then(function(response) {\n\t\t\t\t\tlimit.silenced = -1;\n\t\t\t\t\ttracker.counter = 1;\n\t\t\t\t\tupdateLimit(limit);\n\t\t\t\t\t //trace('${Date.now()} user ${limit.user_tag} unsilenced');\n\t\t\t\t}, (err) -> trace(err));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateLimit(limit:DBRateLimit) {\n\t\tvar e = DBEvents.Update('rate_limit', limit.record, query($user_id == limit.user_id),\n\t\t\tfunction(response) {\n\t\t\t\tswitch (response) {\n\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttrace(response);\n\t\t\t\t}\n\t\t\t});\n\t\tEcsTools.set(e);\n\t}\n\n\tfunction setTracker(obj:DBRateLimit) {\n\t\tvar tracker = tracking.get(obj.user_id);\n\t\tif (!tracking.exists(obj.user_id)) {\n\t\t\tMain.client.guilds.cache.get(Main.guild_id)\n\t\t\t\t.members.fetch(obj.user_id)\n\t\t\t\t.then(function(member) {\n\t\t\t\t\ttracker = {\n\t\t\t\t\t\tmember: member,\n\t\t\t\t\t\tcounter: 1,\n\t\t\t\t\t\tlast_message: -1\n\t\t\t\t\t}\n\t\t\t\t\ttrace('Added ${obj.user_tag} to list');\n\t\t\t\t\ttracking.set(obj.user_id, tracker);\n\t\t\t\t}, (err) -> trace(err));\n\t\t}\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase RatelimitCreate(user, counter, time, reason):\n\t\t\t\tvar modid = interaction.user.id;\n\t\t\t\tvar modtag = interaction.user.tag;\n\t\t\t\tvar obj = new DBRateLimit(user.id, user.tag, modid, modtag, counter, time);\n\t\t\t\tobj.reason = reason;\n\t\t\t\tsetTracker(obj);\n\t\t\t\t\n\t\t\t\tvar e = DBEvents.SearchAndUpdate('rate_limit', 'user_id', query($user_id == obj.user_id), obj.record, function(response) {\n\t\t\t\t\tswitch (response) {\n\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\tthis.limits.set(user.id, DBRateLimit.fromRecord(data));\n\t\t\t\t\t\t\ttrace('Inserted ${user.tag} rate limit');\n\t\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\t\tcontent: '<@${user.id}> has been rate limited'\n\t\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\t\tcontent: \"An error occured, check logs\"\n\t\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\ttrace(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tEcsTools.set(e);\n\t\t\tcase RatelimitDelete(user):\n\t\t\t\tvar obj = limits.get(user.id);\n\t\t\t\tif (limits.exists(user.id)) {\n\t\t\t\t\tvar e = DBEvents.DeleteByValue('rate_limit', 'user_id', obj.user_id, function(resp) {\n\t\t\t\t\t\tswitch (resp) {\n\t\t\t\t\t\t\tcase Success(message, data):\n\t\t\t\t\t\t\t\ttracking.remove(user.id);\n\t\t\t\t\t\t\t\tlimits.remove(user.id);\n\t\t\t\t\t\t\t\ttrace('removed slow mode from ${user.tag}');\n\t\t\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\t\t\tcontent: 'Slow mode has been removed for <@${user.id}>'\n\t\t\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinteraction.reply({\n\t\t\t\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t\t\t\t\tcontent: \"An error occured, check logs\"\n\t\t\t\t\t\t\t\t}).then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\ttrace(resp);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tEcsTools.set(e);\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'ratelimit';\n\t}\n}\n","package commands.mod;\n\nimport js.Browser;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandDbBase;\n\nclass Social extends CommandDbBase {\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase Social(tag, user):\n\t\t\t\tthis.parseTwitter(interaction, tag, user);\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction parseTwitter(interaction:BaseCommandInteraction, tag:String, user:String) {\n\t\tif (tag == null && user == null) {\n\t\t\tinteraction.reply('Invalid input').then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (tag != null) {\n\t\t\tvar doc = Firestore.doc(db, 'discord/social');\n\t\t\tFirestore.updateDoc(doc, {\n\t\t\t\ttwitter_tags: Firestore.arrayUnion(tag)\n\t\t\t}).then(function(_) {\n\t\t\t\tif (!interaction.replied) {\n\t\t\t\t\tinteraction.reply('Updated collection!');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (user != null) {\n\t\t\tvar doc = Firestore.doc(db, 'discord/social');\n\t\t\tFirestore.updateDoc(doc, {\n\t\t\t\ttwitter_users: Firestore.arrayUnion(user)\n\t\t\t}).then(function(_) {\n\t\t\t\tif (!interaction.replied) {\n\t\t\t\t\tinteraction.reply('Updated collection!');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'social';\n\t}\n}\n\ntypedef TSocial = {\n\tvar twitter_tags:Array<String>;\n\tvar twitter_users:Array<String>;\n}\n\nenum abstract SocialPlatform(String) from String {\n\tvar twitter;\n}\n","package commands.mod;\n\nimport discord_js.MessageEmbed;\nimport discord_js.User;\nimport externs.FuzzySort;\nimport js.Browser;\nimport components.Command;\nimport discord_builder.BaseCommandInteraction;\nimport systems.CommandDbBase;\nimport Main.CommandForward;\nimport discord_js.Message;\nimport discord_js.TextChannel;\nimport firebase.web.firestore.DocumentSnapshot;\n\nclass Tracker extends CommandDbBase {\n\tvar trackers:Map<String, TTracker> = [];\n\tvar dm:Map<String, User> = [];\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\tvar init_trackers:Bool = false;\n\n\toverride function onEnabled() {\n\t\tFirestore.onSnapshot(collection(this.db, 'discord/admin/trackers'), function(resp) {\n\t\t\tif (init_trackers) {\n\t\t\t\tfor (item in resp.docChanges()) {\n\t\t\t\t\tswitch (item.type) {\n\t\t\t\t\t\tcase \"added\" | \"modified\":\n\t\t\t\t\t\t\tvar data = item.doc.data();\n\t\t\t\t\t\t\ttrackers.set(item.doc.id, data);\n\t\t\t\t\t\t\tif (!dm.exists(data.by)) {\n\t\t\t\t\t\t\t\tMain.client.users.fetch(data.by).then(function(user) {\n\t\t\t\t\t\t\t\t\tthis.dm.set(data.by, user);\n\t\t\t\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"removed\":\n\t\t\t\t\t\t\ttrackers.remove(item.doc.id);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttrace('item type not mapped? ${item.type}');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinit_trackers = true;\n\t\t\tfor (item in resp.docs) {\n\t\t\t\tvar data = item.data();\n\t\t\t\ttrackers.set(item.id, cast data);\n\t\t\t\t\n\t\t\t\tif (!dm.exists(data.by)) {\n\t\t\t\t\tMain.client.users.fetch(data.by).then(function(user) {\n\t\t\t\t\t\ttrace('added user ${user.tag}');\n\t\t\t\t\t\tthis.dm.set(data.by, user);\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction string_compare(value:String, array:Array<String>) {\n\t\tfor (a in array) {\n\t\t\tif (a == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction excludeKeywords(message:Message, tracker:TTracker) {\n\t\tvar content = message.content;\n\t\tif (tracker.string_exclude == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (word in tracker.string_exclude) {\n\t\t\tif (content.toLowerCase().contains(word)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction findKeywords(message:Message, tracker:TTracker) {\n\t\tvar content = message.content;\n\t\tfor (word in tracker.keywords) {\n\t\t\tif (content.toLowerCase().contains(word)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction keywordParser(content:String, matcher:Array<String>) {\n\t\t\n\t}\n\n\toverride function update(_:Float) {\n\t\tsuper.update(_);\n\t\titerate(messages, (entity) -> {\n\t\t\tswitch (command) {\n\t\t\t\tcase keyword_tracker:\n\t\t\t\t\tfor (tracker in trackers) {\n\n\t\t\t\t\t\tif (message.author.id == tracker.by) {\n\t\t\t\t\t\t\t#if !block\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar content = message.content;\n\n\t\t\t\t\t\tif (tracker.user_exclude != null\n\t\t\t\t\t\t\t&& string_compare(message.author.id, tracker.user_exclude)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tracker.channel_exclude != null\n\t\t\t\t\t\t\t&& string_compare((message.channel : TextChannel).id,\n\t\t\t\t\t\t\t\ttracker.channel_exclude)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// will improve another time\n\t\t\t\t\t\tif (excludeKeywords(message, tracker)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// will improve another time\n\t\t\t\t\t\tif (findKeywords(message, tracker)) {\n\t\t\t\t\t\t\tif (this.dm.exists(tracker.by) #if block && tracker.by == \"151104106973495296\" #end) {\n\t\t\t\t\t\t\t\tvar embed = new MessageEmbed();\n\t\t\t\t\t\t\t\tembed.setTitle('${tracker.name}');\n\t\t\t\t\t\t\t\tvar description = message.content;\n\t\t\t\t\t\t\t\tvar channel = (message.channel : TextChannel).name;\n\t\t\t\t\t\t\t\tdescription += '\\n ----- \\n [Location: $channel](${message.url})';\n\t\t\t\t\t\t\t\tembed.setDescription(description);\n\t\t\t\t\t\t\t\tembed.setFooter({\n\t\t\t\t\t\t\t\t\ttext: 'Keyword Tracker',\n\t\t\t\t\t\t\t\t\ticonURL: 'https://cdn.discordapp.com/emojis/567741748172816404.png?v=1'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tvar author = {\n\t\t\t\t\t\t\t\t\tname: '@' + message.author.tag,\n\t\t\t\t\t\t\t\t\ticonURL: message.author.displayAvatarURL()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tembed.setAuthor(author);\n\t\t\t\t\t\t\t\tthis.dm[tracker.by].send({embeds: [embed]})\n\t\t\t\t\t\t\t\t.then(null, (err) -> trace(err));\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tuniverse.deleteEntity(entity);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction run(command:Command, interaction:BaseCommandInteraction) {\n\t\tswitch (command.content) {\n\t\t\tcase TrackerCreate(name, keywords, description, string_exclude, channel_exclude,\n\t\t\t\tuser_exclude):\n\t\t\t\tvar keywords = keywords.split(',');\n\t\t\t\tfor (key => value in keywords) {\n\t\t\t\t\tkeywords[key] = value.toLowerCase().trim();\n\t\t\t\t}\n\n\t\t\t\tvar str_exclude = [];\n\t\t\t\tif (string_exclude != null) {\n\t\t\t\t\tstr_exclude = string_exclude.split(',');\n\t\t\t\t\tfor (key => value in str_exclude) {\n\t\t\t\t\t\tstr_exclude[key] = value.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar chl_exclude = [];\n\t\t\t\tif (channel_exclude != null) {\n\t\t\t\t\tchl_exclude = channel_exclude.split(',');\n\t\t\t\t}\n\n\t\t\t\tvar usr_exclude = [];\n\t\t\t\tif (user_exclude != null) {\n\t\t\t\t\tusr_exclude = user_exclude.split(',');\n\t\t\t\t}\n\n\t\t\t\tfor (key => str in str_exclude) {\n\t\t\t\t\tstr_exclude[key] = str.trim();\n\t\t\t\t}\n\n\t\t\t\tfor (key => user in usr_exclude) {\n\t\t\t\t\tusr_exclude[key] = cleanDiscordThings(user).trim();\n\t\t\t\t}\n\n\t\t\t\tfor (key => channel in chl_exclude) {\n\t\t\t\t\tchl_exclude[key] = cleanDiscordThings(channel).trim();\n\t\t\t\t}\n\n\t\t\t\tthis.parseTracker(interaction, name, description, keywords, str_exclude,\n\t\t\t\t\tchl_exclude, usr_exclude);\n\t\t\tcase TrackerDelete(name):\n\t\t\t\tvar col = collection(db, 'discord/admin/trackers');\n\t\t\t\tif (name != null) {\n\t\t\t\t\tvar query = Firestore.query(col, where('name', GREATER_EQUALS, name),\n\t\t\t\t\t\twhere('name', LESS_EQUALS, name + '~'),\n\t\t\t\t\t\twhere('by', EQUAL_TO, interaction.user.id));\n\n\t\t\t\t\tif (interaction.isAutocomplete()) {\n\t\t\t\t\t\tFirestore.getDocs(query).then(function(res) {\n\t\t\t\t\t\t\tvar results = [];\n\t\t\t\t\t\t\tfor (d in res.docs) {\n\t\t\t\t\t\t\t\tvar data = d.data();\n\t\t\t\t\t\t\t\tvar name = data.name;\n\t\t\t\t\t\t\t\tif (data.description != null) {\n\t\t\t\t\t\t\t\t\tname += ' - ' + data.description;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\t\t\tvalue: d.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tinteraction.respond(results).then(null, function(err) {\n\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}).then(null, function(err) {\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tFirestore.deleteDoc(doc(db, 'discord/admin/trackers/$name')).then(function(_) {\n\t\t\t\t\t\ttrackers.remove(name);\n\t\t\t\t\t\tinteraction.reply({content: 'Tracker deleted!', ephemeral: true}).then(null, (err) -> trace(err));\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tBrowser.console.dir(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction parseTracker(interaction:BaseCommandInteraction, name:String, description:String,\n\t\t\tkeywords:Array<String>, string_exclude:Array<String>, channel_exclude:Array<String>,\n\t\t\tuser_exclude:Array<String>) {\n\t\tvar obj:TTracker = {\n\t\t\tname: name,\n\t\t\tby: interaction.user.id,\n\t\t\tdiscord_name: interaction.user.username,\n\t\t\tkeywords: keywords,\n\t\t\ttimestamp: Date.now().getTime()\n\t\t}\n\n\t\tif (description != null) {\n\t\t\tobj.description = description;\n\t\t}\n\n\t\tif (string_exclude.length > 0) {\n\t\t\tobj.string_exclude = string_exclude;\n\t\t}\n\n\t\tif (channel_exclude.length > 0) {\n\t\t\tobj.channel_exclude = channel_exclude;\n\t\t}\n\n\t\tif (channel_exclude.length > 0) {\n\t\t\tobj.channel_exclude = channel_exclude;\n\t\t}\n\n\t\tFirestore.addDoc(collection(this.db, 'discord/admin/trackers'), obj).then(function(_) {\n\t\t\tinteraction.reply({content: 'Your tracker is now active!', ephemeral: true})\n\t\t\t\t.then(null, (err) -> trace(err));\n\t\t}, (err) -> trace(err));\n\t}\n\n\tinline function cleanDiscordThings(string:String) {\n\t\tstring = string.replace('<', '');\n\t\tstring = string.replace('>', '');\n\t\tstring = string.replace('#', '');\n\t\tstring = string.replace('@', '');\n\t\tstring = string.replace('&', '');\n\t\ttrace(string);\n\t\treturn string;\n\t}\n\n\tfunction get_name():String {\n\t\treturn 'tracker';\n\t}\n}\n\ntypedef TTracker = {\n\tvar by:String;\n\tvar name:String;\n\tvar discord_name:String;\n\tvar timestamp:Float;\n\tvar keywords:Array<String>;\n\t@:optional var description:String;\n\t@:optional var string_exclude:Array<String>;\n\t@:optional var channel_exclude:Array<String>;\n\t@:optional var user_exclude:Array<String>;\n}\n","package commands.types;\n\nenum abstract Duration(Float) to Float {\n\tvar minute = 60000;\n\tvar hour = 3600000;\n\tvar day = 86400000;\n\tvar week = 604800000;\n\tvar month = 2419200000;\n\n\tpublic function new(value) {\n\t\tthis = value;\n\t}\n\n\t@:op(A > B) static function gt(a:Duration, b:Duration):Bool;\n\n\t@:op(A >= B) static function gtequalto(a:Duration, b:Duration):Bool;\n\n\t@:op(A < B) static function lt(a:Duration, b:Duration):Bool;\n\n\t@:op(A <= B) static function ltequalto(a:Duration, b:Duration):Bool;\n\n\t@:op(A == B) static function equality(a:Duration, b:Duration):Bool;\n\n\t@:op(A > B) static function gtfloat(a:Float, b:Duration):Bool;\n\n\t@:op(A >= B) static function gtequaltofloat(a:Float, b:Duration):Bool;\n\n\t@:op(A < B) static function ltfloat(a:Float, b:Duration):Bool;\n\n\t@:op(A <= B) static function ltequaltofloat(a:Float, b:Duration):Bool;\n\n\t@:op(A == B) static function equalityFloat(a:Float, b:Duration):Bool;\n\n\t@:op(A + B) static function addition(a:Duration, b:Duration):Duration;\n\t@:op(A / B) static function division(a:Duration, b:Duration):Duration;\n\t@:op(A / B) static function divisionb(a:Duration, b:Float):Duration;\n\n\t@:from public static function fromString(input:String):Duration {\n\t\tvar time = 0.;\n\n\t\tvar min_regex = ~/([0-9]+)[ ]?(m|min|mins)\\b/gi;\n\t\tif (min_regex.match(input)) {\n\t\t\tvar num = min_regex.matched(1).parseFloat();\n\t\t\ttime = num * 60000;\n\t\t}\n\n\t\tvar hour_regex = ~/([0-9]+)[ ]?(h|hr|hrs|hours)\\b/gi;\n\t\tif (hour_regex.match(input)) {\n\t\t\tvar num = hour_regex.matched(1).parseFloat();\n\t\t\ttime = num * 3600000;\n\t\t}\n\n\t\tvar day_regex = ~/([0-9]+)[ ]?(d|day|days)\\b/gi;\n\t\tif (day_regex.match(input)) {\n\t\t\tvar num = day_regex.matched(1).parseFloat();\n\t\t\ttime = num * 86400000;\n\t\t}\n\n\t\tvar week_regex = ~/([0-9]+)[ ]?(w|wk|wks|week|weeks)\\b/gi;\n\t\tif (week_regex.match(input)) {\n\t\t\tvar num = week_regex.matched(1).parseFloat();\n\t\t\ttime = num * 604800000;\n\t\t}\n\n\t\tvar month_regex = ~/([0-9]+)[ ]?(mo|mos|mths|month|months)\\b/gi;\n\t\tif (month_regex.match(input)) {\n\t\t\tvar num = month_regex.matched(1).parseFloat();\n\t\t\ttime = num * 2419200000;\n\t\t}\n\n\t\treturn new Duration(time);\n\t}\n}","package components;\n\nimport discord_builder.BaseCommandInteraction;\n\nclass ShowcaseModalSubmit {\n\tpublic var title_or_link:String;\n\tpublic var description:String;\n\tpublic function new(title:String, ?description:String) {\n\t\tthis.title_or_link = title;\n\t\tthis.description = description;\n\t}\n}\n","package components;\n\nenum abstract TextCommand(String) to String {\n\tvar mention = '!mention';\n\tvar run = '!run';\n\n\tpublic static function list() {\n\t\treturn [mention, run];\n\t}\n}","package database;\n\nimport db.Record;\n\n@:autoBuild(database.DBMacros.makeRecord())\nabstract class MyRecord {\n\tvar _record:Record = new Record();\n\tpublic var record(get, never):Record;\n\tabstract function get_record():Record;\n}\n","package database.types;\n\nimport database.MyRecord;\n\nclass DBEmoji extends MyRecord {\n\t@crecord public var author_id:String;\n\t@crecord public var author_tag:String;\n\t@crecord public var name:String;\n\t@crecord public var url:String;\n\t@crecord public var description:String = null;\n\t@record public var timestamp:Float;\n\t@record public var id:Int;\n\n\tpublic function new(author_id:String, author_tag:String, name:String, url:String,\n\t\t\tdescription:String = null) {\n\t\tthis.author_id = author_id;\n\t\tthis.author_tag = author_tag;\n\t\tthis.url = url;\n\t\tthis.name = name.toLowerCase();\n\t\tthis.description = description;\n\t\tthis.timestamp = Date.now().getTime();\n\t}\n}","package database;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\n\nclass DBMacros {\n\tpublic static function makeRecord() {\n\t\tvar call = Context.getLocalClass();\n\t\tvar cfields = Context.getBuildFields();\n\n\t\tvar gblock = [];\n\t\tvar sblock = [];\n\n\t\tvar init_class = 'var p = new ${call.get().name}(';\n\t\tvar constructor = null;\n\n\t\tvar fields = [];\n\n\t\tfor (field in cfields) {\n\t\t\tif (field.meta == null) {\n\t\t\t\tif (field.name == \"new\") {\n\t\t\t\t\tconstructor = field;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar id = field.name;\n\t\t\tfor (meta in field.meta) {\n\t\t\t\tif (StringTools.contains(meta.name, 'record')) {\n\t\t\t\t\t// getter\n\t\t\t\t\tgblock.push(macro _record.field($v{id}, $i{id}));\n\t\t\t\t\t// static fromRecord function\n\t\t\t\t\tsblock.push(macro var $id = record.field($v{field.name}));\n\t\t\t\t\tif (meta.name == 'crecord') {\n\t\t\t\t\t\tinit_class += id + ',';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar getter:Field = {\n\t\t\tname: 'get_record',\n\t\t\tkind: FFun({\n\t\t\t\targs: [],\n\t\t\t\texpr: macro $b{gblock}\n\t\t\t}),\n\t\t\tpos: Context.currentPos()\n\t\t}\n\t\t\n\t\tgblock.push(macro return _record);\n\t\tcfields.push(getter);\n\n\t\tinit_class = init_class.substr(0, init_class.length - 1) + ')';\n\t\tvar exp = Context.parseInlineString(init_class, Context.currentPos());\n\t\tsblock.push(macro $exp);\n\n\t\tfor (f in fields) {\n\t\t\tvar id = f.name;\n\t\t\tsblock.push(macro p.$id = $i{f.name});\n\t\t}\n\n\t\tsblock.push(macro return p);\n\t\tvar from_record:Field = {\n\t\t\tname: 'fromRecord',\n\t\t\taccess: [APublic, AStatic],\n\t\t\tkind: FFun({\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'record',\n\t\t\t\t\t\ttype: TPath({\n\t\t\t\t\t\t\tpack: ['db'],\n\t\t\t\t\t\t\tname: 'Record'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\texpr: macro $b{sblock}\n\t\t\t}),\n\t\t\tpos: Context.currentPos()\n\t\t}\n\n\t\tcfields.push(from_record);\n\t\treturn cfields;\n\t}\n}\n#end","package database.types;\n\nimport database.MyRecord;\n\nclass DBQuote extends MyRecord {\n\t@crecord public var author_id:String;\n\t@crecord public var author_tag:String;\n\t@crecord public var title:String;\n\t@crecord public var description:String;\n\t@record public var timestamp:Float;\n\t@record public var id:Int;\n\n\tpublic function new(author_id:String, author_tag:String, title:String, description:String) {\n\t\tthis.author_id = author_id;\n\t\tthis.author_tag = author_tag;\n\t\tthis.title = title;\n\t\tthis.description = description;\n\t\tthis.timestamp = Date.now().getTime();\n\t}\n}","package database.types;\n\nimport database.MyRecord;\n\nclass DBRateLimit extends MyRecord {\n\t@crecord public var user_id:String;\n\t@crecord public var user_tag:String;\n\t@crecord public var mod_id:String;\n\t@crecord public var mod_tag:String;\n\t@crecord public var count:Int;\n\t@crecord public var time:String;\n\t@record public var reason:String;\n\t@record public var silenced:Float = -1;\n\t@record public var created:Float;\n\t@record public var id:Int;\n\n\tpublic function new(user_id:String, user_tag:String, mod_id:String, mod_tag:String, count:Int,\n\t\t\ttime:String) {\n\t\tthis.user_id = user_id;\n\t\tthis.user_tag = user_tag;\n\t\tthis.mod_id = mod_id;\n\t\tthis.mod_tag = mod_tag;\n\t\tthis.count = count;\n\t\tthis.time = time;\n\t\tthis.created = Date.now().getTime();\n\t}\n}","package database.types;\n\nimport database.MyRecord;\n\nclass DBReminder extends MyRecord {\n\t@record public var id:Int;\n\t\n\t@crecord public var author_id:String;\n\t@crecord public var content:String;\n\t@crecord public var duration:Float;\n\t@crecord public var channel_id:String;\n\t@crecord public var is_thread:Int = 0;\n\t\n\t@record public var sent:Int = 0;\n\t@record public var personal:Int = 0;\n\t@record public var thread_reply:Int = 0;\n\t@record public var timestamp:Float;\n\t\n\tpublic function new(author_id:String, content:String, duration:Float, channel_id:String, is_thread:Int) {\n\t\tthis.author_id = author_id;\n\t\tthis.content = content;\n\t\tthis.duration = duration;\n\t\tthis.channel_id = channel_id;\n\t\tthis.is_thread = is_thread;\n\t\tthis.timestamp = Date.now().getTime();\n\t}\n}","package database.types;\n\nimport database.MyRecord;\n\nclass DBSnippet extends MyRecord {\n\t@crecord public var author_id:String;\n\t@crecord public var title:String;\n\t@crecord public var url:String;\n\t@crecord public var description:String;\n\t@record public var timestamp:Float;\n\t@record public var snippet_id:Int;\n\n\tpublic function new(author_id:String, title:String, description:String, url:String) {\n\t\tthis.url = url;\n\t\tthis.title = title;\n\t\tthis.author_id = author_id;\n\t\tthis.description = description;\n\t\tthis.timestamp = Date.now().getTime();\n\t}\n}","package db;\n\n@:structInit\nclass ColumnDefinition {\n    public var name:String;\n    public var type:ColumnType;\n    @:optional public var options:Null<Array<ColumnOptions>>;\n\n    public function clone():ColumnDefinition {\n        var c:ColumnDefinition = {\n            name: this.name,\n            type: this.type\n        }\n        if (this.options != null) {\n            c.options = this.options.copy();\n        }\n        return c;\n    }\n\n    public function debugString() {\n        var sb = new StringBuf();\n        sb.add(name);\n        sb.add(\": \");\n        sb.add(type);\n        sb.add(\", \");\n        sb.add(options);\n        return sb.toString();\n    }\n}","package db;\n\nclass DatabaseError {\n    public var message:String;\n    public var call:String;\n\n    public function new(message:String, call:String = null) {\n        this.message = message;\n        this.call = call;\n    }\n}","package db;\n\nimport haxe.Exception;\n\n@:build(db.macros.DatabaseTypes.build())\nclass DatabaseFactory {\n    private static var _instance:DatabaseFactory = null;\n    public static var instance(get, null):DatabaseFactory;\n    private static function get_instance():DatabaseFactory {\n        if (_instance == null) {\n            _instance = new DatabaseFactory();\n        }\n        return _instance;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////\n    private var _databaseTypes:Map<String, Void->IDatabase> = [];\n\n    private function new() {\n        init();\n    }\n\n    private function init() {\n        loadTypes();\n    }\n\n    private function loadTypes() { // macro will fill this up\n\n    }\n\n    public function createDatabase<T>(typeId:String, config:Dynamic = null):IDatabase {\n        if (!_databaseTypes.exists(typeId)) {\n            throw new Exception('database type \"${typeId}\" not registered');\n        }\n        var ctor = _databaseTypes.get(typeId);\n        var instance = ctor();\n        if (config != null) {\n            instance.config(config);\n        }\n        return instance;\n    }\n}","package db.macros;\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n\nusing StringTools;\n\nclass DatabaseTypes {\n    private static var typeClasses:Map<String, String> = [];\n\n    macro static function register(id:String, c:String) {\n        Sys.println('registering database type ${c} (${id})');\n        var parts = c.split(\".\");\n        var name = parts.pop();\n        #if (haxe >= version(\"4.3.0\"))\n        Context.onAfterInitMacros(() -> {\n            Context.resolveType(TPath({pack: parts, name: name}), Context.currentPos());\n        });\n        #else\n        Context.resolveType(TPath({pack: parts, name: name}), Context.currentPos());\n        #end\n        if (!typeClasses.exists(id)) {\n            typeClasses.set(id, c);\n        }\n\n        return null;\n    }\n\n    macro static function build():Array<Field> {\n        var fields = Context.getBuildFields();\n\n\n        var typeIds:Array<String> = [];\n        var typeExprs:Array<Expr> = [];\n        for (typeId in typeClasses.keys()) {\n            typeIds.push(typeId);\n            var c = typeClasses.get(typeId);\n            var parts = c.split(\".\");\n            var name = parts.pop();\n            var t:TypePath = {\n                pack: parts,\n                name: name\n            }\n            typeExprs.push(macro {\n                var p:db.macros.IDatabaseType = new $t();\n                var typeInfo = p.typeInfo();\n                _databaseTypes.set($v{typeId}, typeInfo.ctor);\n                //Sys.println(\" - registering database type \" + typeInfo.id);\n            });\n        }\n\n        for (f in fields) {\n            if (f.name == \"loadTypes\") {\n                switch (f.kind) {\n                    case FFun(f):\n                        switch(f.expr.expr) {\n                            case EBlock(exprs): \n                                for (e in typeExprs) {\n                                    exprs.push(e);\n                                }\n                            case _:\n                        }\n                    case _:    \n                }\n                break;\n            }\n        }\n\n        for (typeId in typeIds) {\n            fields.push({\n                name: typeId.toUpperCase().replace(\"-\", \"_\"),\n                kind: FVar(\n                    macro: String,\n                    macro $v{typeId}\n                ),\n                access: [AStatic, APublic, AInline],\n                pos: Context.currentPos()\n            });\n        }\n\n        return fields;\n    }\n}\n","package db;\n\nclass DatabaseResult<T> {\n    public var database:IDatabase;\n    public var table:ITable;\n    public var data:T;\n    public var itemsAffected:Null<Int> = null;\n\n    public function new(database:IDatabase, table:ITable = null, data:T = null, itemsAffected:Null<Int> = null) {\n        this.database = database;\n        this.table = table;\n        this.data = data;\n        this.itemsAffected = itemsAffected;\n    }\n}","package db;\n\n@:structInit\nclass DatabaseSchema {\n    @:optional public var tables:Array<TableSchema> = [];\n\n    public function findTable(name:String):TableSchema {\n        for (t in tables) {\n            if (t.name.toLowerCase() == name.toLowerCase()) {\n                return t;\n            }\n        }\n        return null;\n    }\n\n    public function setTableSchema(name:String, schema:TableSchema) {\n        for (i in 0...tables.length) {\n            if (tables[i].name.toLowerCase() == name.toLowerCase()) {\n                tables[i] = schema;\n                break;\n            }\n        }\n    }\n\n    public function clone():DatabaseSchema {\n        var c:DatabaseSchema = {\n            tables: []\n        };\n        for (t in this.tables) {\n            c.tables.push(t.clone());\n        }\n        return c;\n    }\n\n    public function debugString() {\n        var sb = new StringBuf();\n        for (table in tables) {\n            sb.add(table.debugString());\n        }\n        return sb.toString();\n    }\n}","package db;\n\nusing StringTools;\n\nclass DebugUtils {\n    public static function printRecords(records:Array<Record>, name:String = null) {\n        var colSizes:Map<String, Int> = [];\n        if (records == null || records.length == 0) {\n            if (name != null) {\n                Sys.println(name + \": no records!\");\n            } else {\n                Sys.println(\"no records!\");\n            }\n            return;\n        }\n        // first get max sizes\n        var r = records[0];\n        for (fieldName in r.fieldNames) {\n            colSizes.set(fieldName, fieldName.length);\n        }\n        for (r in records) {\n            for (fieldName in r.fieldNames) {\n                var value = Std.string(r.field(fieldName));\n                var existingSize = colSizes.get(fieldName);\n                var newSize = value.length;\n                if (newSize > existingSize) {\n                    colSizes.set(fieldName, newSize);\n                }\n            }\n        }\n\n        // now lets actually print\n        Sys.println(\"\");\n        if (name != null) {\n            Sys.println(name + \" (\" + records.length + \"):\");\n        }\n        var r = records[0];\n        for (fieldName in r.fieldNames) {\n            var size = colSizes.get(fieldName);\n            Sys.print(\"| \");\n            Sys.print(fieldName.rpad(\" \", size));\n            Sys.print(\" \");\n        }\n        Sys.println(\"|\");\n\n        for (fieldName in r.fieldNames) {\n            var size = colSizes.get(fieldName);\n            Sys.print(\"|-\");\n            Sys.print(\"\".rpad(\"-\", size));\n            Sys.print(\"-\");\n        }\n        Sys.println(\"|\");\n\n        for (r in records) {\n            for (fieldName in r.fieldNames) {\n                var size = colSizes.get(fieldName);\n                var value = Std.string(r.field(fieldName)).trim();\n                Sys.print(\"| \");\n                Sys.print(value.rpad(\" \", size));\n                Sys.print(\" \");\n             }\n             Sys.println(\"|\");\n        }\n        Sys.println(\"\");\n\n    }\n}","package db;\n\nclass Record {\n    private var data:Map<String, Any> = [];\n\n    public function new() {\n    }\n\n    public var fieldNames(get, null):Array<String>;\n    private function get_fieldNames():Array<String> {\n        var list = [];\n        for (f in data.keys()) {\n            list.push(f);\n        }\n        return list;\n    }\n\n    public var fieldCount(get, null):Int;\n    private function get_fieldCount():Int {\n        var n = 0;\n        for (_ in data.keys()) {\n            n++;\n        }\n        return n;\n    }\n\n    public function hasField(name:String):Bool {\n        if (data == null) {\n            return false;\n        }\n        return data.exists(name);\n    }\n\n    public function renameField(fieldName:String, newFieldName:String) {\n        if (data.exists(fieldName)) {\n            var v = data.get(fieldName);\n            data.set(newFieldName, v);\n            data.remove(fieldName);\n        }\n    }\n\n    public function copyField(fieldName:String, newFieldName:String) {\n        if (data.exists(fieldName)) {\n            var v = data.get(fieldName);\n            data.set(newFieldName, v);\n        }\n    }\n\n    public function filterFields(callback:String->Any->Bool) {\n        var newData:Map<String, Any> = [];\n        for (fieldName in data.keys()) {\n            var fieldValue = data.get(fieldName);\n            if (callback(fieldName, fieldValue)) {\n                newData.set(fieldName, fieldValue);\n            }\n        }\n        data = newData;\n    }\n\n    public function findFields(callback:String->Bool):Array<String> {\n        var list = [];\n        for (fieldName in data.keys()) {\n            if (callback(fieldName)) {\n                list.push(fieldName);\n            }\n        }\n        return list;\n    }\n\n    public function findFieldValues<T>(callback:String->T->Bool):Array<T> {\n        var list:Array<T> = [];\n        for (fieldName in data.keys()) {\n            var fieldValue = data.get(fieldName);\n            if (fieldValue == null) {\n                continue;\n            }\n            if (callback(fieldName, fieldValue)) {\n                list.push(fieldValue);\n            }\n        }\n        return list;\n    }\n\n    public function field(name:String, value:Any = null):Any { // if value is non null, this is effectively a setter\n        if (value != null) {\n            data.set(name, value);\n            return value;\n        }\n\n        return data.get(name);\n    }\n\n    public function empty(name:String) {\n        data.set(name, null);\n    }\n\n    public function values():Array<Any> {\n        var v = [];\n        for (k in data.keys()) {\n            v.push(data.get(k));\n        }\n        return v;\n    }\n\n    public function stringValues():Array<String> {\n        var v = [];\n        for (k in data.keys()) {\n            v.push(Std.string(data.get(k)));\n        }\n        return v;\n    }\n\n    public function removeField(name:String) {\n        data.remove(name);\n    }\n\n    public function copy():Record {\n        var c = new Record();\n        c.data = this.data.copy();\n        return c;\n    }\n\n    public function debugString():String {\n        var sb = new StringBuf();\n        for (f in data.keys()) {\n            sb.add(f);\n            sb.add(\"=\");\n            sb.add(data.get(f));\n            sb.add(\"; \");\n        }\n        return sb.toString();\n    }\n\n    public function merge(other:Record) {\n        for (key in other.data.keys()) {\n            var value = other.data.get(key);\n            data.set(key, value);\n        }\n    }\n\n    public function equals(other:Record) {\n        var thisFieldNames = this.fieldNames;\n        var otherFieldNames = other.fieldNames;\n        if (thisFieldNames.length != otherFieldNames.length) {\n            return false;\n        }\n\n        var thisData = this.data;\n        var otherData = other.data;\n\n        for (thisFieldName in thisFieldNames) {\n            if (!otherData.exists(thisFieldName)) {\n                return false;\n            }\n        }\n\n        for (otherFieldName in otherFieldNames) {\n            if (!thisData.exists(otherFieldName)) {\n                return false;\n            }\n        }\n\n        for (thisFieldName in thisFieldNames) {\n            if (thisData.get(thisFieldName) != otherData.get(thisFieldName)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public static function fromDynamic(data:Dynamic):Record {\n        var r = new Record();\n        for (f in Reflect.fields(data)) {\n            var v = Reflect.field(data, f);\n            r.data.set(f, v);\n        }\n        return r;\n    }\n}","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","package db;\n\nclass RelationshipDefinitions {\n    public var complexRelationships:Bool = false;\n\n    private var _defs:Map<String, Array<RelationshipDefinition>> = [];\n\n    public function new() {\n    }\n\n    public var relationships:Map<String, String>;\n\n    public function add(field1:String, field2:String) {\n        if (has(field1, field2)) {\n            return;\n        }\n        var parts1 = field1.split(\".\");\n        var parts2 = field2.split(\".\");\n        var table1 = parts1.shift();\n        var table2 = parts2.shift();\n        var field1 = parts1.join(\".\");\n        var field2 = parts2.join(\".\");\n\n        var array = _defs.get(table1);\n        if (array == null) {\n            array = [];\n            _defs.set(table1, array);\n        }\n\n        array.push({\n            table1: table1,\n            table2: table2,\n            field1: field1,\n            field2: field2\n        });\n    }\n\n    public function has(field1:String, field2:String):Bool {\n        var parts1 = field1.split(\".\");\n        var parts2 = field2.split(\".\");\n        var table1 = parts1.shift();\n        var table2 = parts2.shift();\n        var field1 = parts1.join(\".\");\n        var field2 = parts2.join(\".\");\n\n        var array = _defs.get(table1);\n        if (array == null) {\n            return false;\n        }\n\n        for (item in array) {\n            if (item.table1 == table1 && item.table2 == table2 && item.field1 == field1 && item.field2 == field2) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public function get(table:String):Array<RelationshipDefinition> {\n        return _defs.get(table);\n    }\n\n    public function all():Array<RelationshipDefinition> {\n        var list = [];\n        for (key in _defs.keys()) {\n            list = list.concat(_defs.get(key));\n        }\n        return list;\n    }\n\n    public function keys():Iterator<String> {\n        return _defs.keys();\n    }\n\n    public function debugString() {\n        var sb = new StringBuf();\n        for (key in _defs.keys()) {\n            sb.add(key);\n            sb.add(\"\\n\");\n            for (item in _defs.get(key)) {\n                sb.add(\"    \");\n                sb.add(item.table1 + \".\" + item.field1 + \" <==> \" + item.table2 + \".\" + item.field2);\n                sb.add(\"\\n\");\n            }\n        }\n        return sb.toString();\n    }\n}","package db;\n\n@:structInit\nclass TableSchema {\n    @:optional public var name:String;\n    @:optional public var columns:Array<ColumnDefinition> = [];\n    @:optional public var data:RecordSet;\n\n    public function equals(other:TableSchema) {\n        if (this.name != other.name) {\n            return false;\n        }\n\n        if (this.columns.length != other.columns.length) {\n            return false;\n        }\n\n        for (column in this.columns) {\n            if (other.findColumn(column.name) == null) {\n                return false;\n            }\n        }\n\n        for (column in other.columns) {\n            if (this.findColumn(column.name) == null) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public function findPrimaryKeyColumns():Array<ColumnDefinition> {\n        var primaryKeyColumns = [];\n        for (column in columns) {\n            if (column.options != null && column.options.contains(PrimaryKey)) {\n                primaryKeyColumns.push(column);\n            }\n        }\n        return primaryKeyColumns;\n    }\n\n    public function findColumn(name:String):ColumnDefinition {\n        for (column in columns) {\n            if (column.name == name) {\n                return column;\n            }\n        }\n        return null;\n    }\n\n    public function diff(other:TableSchema):TableSchemaDiff {\n        var d = new TableSchemaDiff();\n\n        for (column in this.columns) {\n            if (other.findColumn(column.name) == null) {\n                d.removedColumns.push(column);\n            }\n        }\n\n        for (column in other.columns) {\n            if (this.findColumn(column.name) == null) {\n                d.addedColumns.push(column);\n            }\n        }\n\n        return d;\n    }\n\n    public function clone():TableSchema {\n        var c:TableSchema = {\n            name: this.name,\n            columns: []\n        };\n        c.name = this.name;\n        for (col in this.columns) {\n            c.columns.push(col.clone());\n        }\n        if (this.data != null) {\n            c.data = this.data.copy();\n        }\n        return c;\n    }\n\n    public function debugString() {\n        var sb = new StringBuf();\n        sb.add(name);\n        sb.add(\":\");\n        sb.add(\"\\n\");\n        for (column in columns) {\n            sb.add(\"    \");\n            sb.add(column.debugString());\n            sb.add(\"\\n\");\n        }\n        return sb.toString();\n    }\n}","package db;\n\nclass TableSchemaDiff {\n    public var addedColumns:Array<ColumnDefinition> = [];\n    public var removedColumns:Array<ColumnDefinition> = [];\n    public var updatedColumns:Array<ColumnDefinition> = [];\n    \n    public function new() {\n    }\n}","package db.mysql;\n\nimport haxe.io.Bytes;\n\nclass MySqlDataTypeMapper implements IDataTypeMapper {\n    private static var _instance:IDataTypeMapper = null;\n    public static function get():IDataTypeMapper {\n        if (_instance == null) {\n            _instance = new MySqlDataTypeMapper();\n        }\n        return _instance;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////\n\n    public function new() {\n    }\n\n    public function shouldConvertValueToDatabase(value:Any):Bool {\n        if ((value is Bytes)) {\n            return true;\n        }\n        return false;\n    }\n\n    public function convertValueToDatabase(value:Any):Any {\n        if ((value is Bytes)) {\n            var bytes:Bytes = cast value;\n            return bytes.toString(); // TODO, is this right? Test with binary image or something\n        }\n        return value;\n    }\n\n    public function haxeTypeToDatabaseType(haxeType:ColumnType):String {\n        return switch (haxeType) {\n            case Number:        'INT';\n            case Decimal:       'DOUBLE';\n            case Boolean:       'INT';\n            case Text(n):       'VARCHAR($n)';\n            case Memo:          'TEXT';\n            case Binary:        'BLOB';\n            case Unknown:       'TEXT';\n        }\n    }\n\n    public function databaseTypeToHaxeType(databaseType:String):ColumnType {\n        var parts = databaseType.split(\":\");\n        var type = parts[0].toUpperCase();\n        var len = parts[1];\n        if (type == \"INT\") {\n            return Number;\n        } else if (type == \"DOUBLE\") {\n            return Decimal;\n        } else if (type == \"VARCHAR\") {\n            return Text(Std.parseInt(len));\n        } else if (type == \"TEXT\") {\n            return Memo;\n        } else if (type == \"BLOB\") {\n            return Binary;\n        }\n        return Unknown;\n    }\n}\n","package logging;\n\n#if (!macro && (modular && !modular_host))\n\nextern class Logger implements ILogger {\n    public function new(ref:Class<Dynamic> = null, instanceId:String = null, generateInstanceId:Bool = false);\n    public function info(message:String, data:Any = null):Void;\n    public function debug(message:String, data:Any = null):Void;\n    public function error(message:String, data:Any = null):Void;\n    public function warn(message:String, data:Any = null):Void;\n    public function data(message:String, data:Any = null):Void;\n    public function performance(message:String, data:Any = null):Void;\n}\n\n#else\n\nimport haxe.crypto.Sha1;\n\n@:keep @:expose\nclass Logger implements ILogger {\n    private var _ref:String = null;\n    private var _instanceId:String = null;\n    \n    public function new(ref:Class<Dynamic> = null, instanceId:String = null, generateInstanceId:Bool = false) {\n        if (ref != null) {\n            _ref = Type.getClassName(ref);\n        }\n        _instanceId = instanceId;\n        if (_instanceId == null && generateInstanceId) {\n            _instanceId = generateUuid();\n        }\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function info(message:String, data:Dynamic = null) {\n        log(LogLevel.Info, message, data);\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function debug(message:String, data:Dynamic = null) {\n        log(LogLevel.Debug, message, data);\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function error(message:String, data:Dynamic = null) {\n        log(LogLevel.Error, message, data);\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function warn(message:String, data:Dynamic = null) {\n        log(LogLevel.Warning, message, data);\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function data(message:String, data:Dynamic = null) {\n        log(LogLevel.Data, message, data);\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function performance(message:String, data:Dynamic = null) {\n        log(LogLevel.Performance, message, data);\n    }\n\n    private var _measurements:Map<String, Float> = null;\n    #if !no_inlined_logger\n    inline\n    #end\n    public function beginMeasure(name:String) {\n        if (_measurements == null) {\n            _measurements = [];\n        }\n\n        _measurements.set(name, Date.now().getTime());\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    public function endMeasure(name:String) {\n        if (_measurements == null) {\n            _measurements = [];\n        }\n\n        if (_measurements.exists(name)) {\n            var start = _measurements.get(name);\n            var time = Math.round(Date.now().getTime() - start);\n            performance(name + \" \" + time + \"ms\");\n            _measurements.remove(name);\n        }\n    }\n\n    #if !no_inlined_logger\n    inline\n    #end\n    private function log(level:LogLevel, message:String, data:Dynamic = null) {\n        LogManager.instance.log({\n            timestamp: Date.now().toString(),\n            level: level,\n            message: message,\n            data: data,\n            ref: _ref,\n            instanceId: _instanceId\n        });\n    }\n\n    private static var _uniqueIds:Map<String, Int> = null;\n    public function createUniqueInstanceId(prefix:String = null) {\n        if (_uniqueIds == null) {\n            _uniqueIds = [];\n        }\n        var key = _ref;\n        if (prefix != null) {\n            key += \"_\" + prefix;\n        }\n        var n = 0;\n        if (_uniqueIds.exists(key)) {\n            n = _uniqueIds.get(key);\n            n++;\n        }\n        _uniqueIds.set(key, n);\n        if (prefix != null) {\n            _instanceId = prefix + n;\n        } else {\n            _instanceId = \"instance\" + n;\n        }\n    }\n\n    // certainly not unique, but probably \"unique enough\" (for logging)\n    private function generateUuid():String {\n        var uuid = \"\";\n        for (i in 0...8) {\n            var n = Date.now().getTime() + Std.random(0xffffff) * Std.random(0xffffff);\n            var hash = Sha1.encode(Std.string(n));\n            var c1 = hash.charAt(Std.random(hash.length));\n            var c2 = hash.charAt(Std.random(hash.length));\n            var c3 = hash.charAt(Std.random(hash.length));\n            var c4 = hash.charAt(Std.random(hash.length));\n            uuid += c1 + c2 + c3 + c4;\n            if (i == 1 || i == 2 || i == 3 || i == 4) {\n                uuid += \"-\";\n            }\n        }\n        return uuid;\n    }\n}\n\n#end","package db.mysql;\n\nimport sys.db.Mysql;\nimport mysql.MySqlError;\nimport promises.Promise;\nimport mysql.DatabaseConnection as MySqlDatabaseConnection;\nimport db.mysql.Utils.*;\nimport db.utils.SqlUtils.*;\nimport logging.Logger;\n\nclass MySqlDatabase implements IDatabase {\n    private static var log = new Logger(MySqlDatabase, true);\n\n    private var _connection:MySqlDatabaseConnection = null;\n    private var _relationshipDefs:RelationshipDefinitions = null;\n    private var _config:Dynamic;\n\n    public function new() {\n    }\n\n    private var _properties:Map<String, Any> = [];\n    public function setProperty(name:String, value:Any):Void {\n        if (name == \"complexRelationships\") {\n            if (_relationshipDefs == null) {\n                _relationshipDefs = new RelationshipDefinitions();\n            }\n            _relationshipDefs.complexRelationships = value;\n        }\n\n        log.debug(\"setting property\", [name, value]);\n\n        _properties.set(name, value);\n    }\n    public function getProperty(name:String, defaultValue:Any):Any {\n        if (_properties == null || !_properties.exists(name)) {\n            return defaultValue;\n        }\n        return _properties.get(name);\n    }\n\n    public function config(details:Dynamic) {\n        _config = details;\n        // TODO: validate details\n\n        log.debug(\"config\", _config);\n    }\n\n    private function createConnection() {\n        if (_connection != null) {\n            return;\n        }\n\n        log.debug(\"creating connection\");\n\n        _connection = new MySqlDatabaseConnection({\n            //database: details.database,\n            host: _config.host,\n            user: _config.user,\n            pass: _config.pass\n        });\n        var autoReconnect = getProperty(\"autoReconnect\", null);\n        var autoReconnectIntervalMS = getProperty(\"autoReconnectIntervalMS\", null);\n        var replayQueriesOnReconnection = getProperty(\"replayQueriesOnReconnection\", null);\n        if (autoReconnect != null) {\n            _connection.autoReconnect = autoReconnect;\n        }\n        if (autoReconnectIntervalMS != null) {\n            _connection.autoReconnectIntervalMS = autoReconnectIntervalMS;\n        }\n        if (replayQueriesOnReconnection != null) {\n            _connection.replayQueriesOnReconnection = replayQueriesOnReconnection;\n        }\n    }\n\n    public function create():Promise<DatabaseResult<IDatabase>> {\n        return new Promise((resolve, reject) -> {\n            if (_config.database == null) {\n                resolve(new DatabaseResult(this));\n                return;\n            } else {\n                log.beginMeasure(\"create \" + _config.database);\n                log.debug(\"creating database:\", _config.database);\n                _connection.connectionDetails.database = _config.database;\n                _connection.exec(buildCreateDatabase(_config.database)).then(response -> {\n                    clearCachedSchema();\n                    return _connection.query(buildSelectDatabase(_config.database));\n                }).then(_ -> {\n                    log.endMeasure(\"create \" + _config.database);\n                    resolve(new DatabaseResult(this));\n                }, (error:MySqlError) -> {\n                    log.endMeasure(\"create \" + _config.database);\n                    log.error(\"error creating database:\", error);\n                    reject(MySqlError2DatabaseError(error, \"delete\"));\n                });\n            }\n        });\n    }\n\n    public function delete():Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            if (_config.database == null) {\n                resolve(new DatabaseResult(this, true));\n                return;\n            } else {\n                log.beginMeasure(\"delete \" + _config.database);\n                log.debug(\"deleting database:\", _config.database);\n                _connection.exec(buildDropDatabase(_config.database)).then(response -> {\n                    clearCachedSchema();\n                    log.endMeasure(\"delete \" + _config.database);\n                    resolve(new DatabaseResult(this, true));\n                }, (error:MySqlError) -> {\n                    log.endMeasure(\"delete \" + _config.database);\n                    log.error(\"error deleting database:\", error);\n                    reject(MySqlError2DatabaseError(error, \"delete\"));\n                });\n            }\n        });\n    }\n\n    private var _schema:DatabaseSchema = null;\n    public function schema(force:Bool = false):Promise<DatabaseResult<DatabaseSchema>> {\n        return new Promise((resolve, reject) -> {\n            if (force) {\n                clearCachedSchema();\n            }\n            if (_schema == null) {\n                log.beginMeasure(\"schema\");\n                log.debug(\"loading database schema for:\", _config.database);\n                Utils.loadFullDatabaseSchema(_connection, _config, MySqlDataTypeMapper.get()).then(schema -> {\n                    _schema = schema;\n                    log.endMeasure(\"schema\");\n                    resolve(new DatabaseResult(this, _schema));\n                }, (error:MySqlError) -> {\n                    log.endMeasure(\"schema\");\n                    log.error(\"error loading database schema:\", error);\n                    reject(MySqlError2DatabaseError(error, \"schema\"));\n                });\n            } else {\n                resolve(new DatabaseResult(this, _schema));\n            }\n        });\n    }\n\n    public function clearCachedSchema() {\n        _schema = null;\n    }\n\n    public function defineTableRelationship(field1:String, field2:String) {\n        if (_relationshipDefs == null) {\n            _relationshipDefs = new RelationshipDefinitions();\n        }\n        log.debug(\"defining relationship\", [field1, field2]);\n        _relationshipDefs.add(field1, field2);\n    }\n\n    public function definedTableRelationships():RelationshipDefinitions {\n        return _relationshipDefs;\n    }\n\n    public function clearTableRelationships() {\n        _relationshipDefs = null;\n    }\n\n    public function connect():Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            log.beginMeasure(\"connect\");\n            log.debug(\"connecting\");\n            createConnection();\n            _connection.open().then(response -> {\n                if (_config.database == null) {\n                    return null;\n                }\n                log.debug(\"checking for database:\", _config.database);\n                return _connection.query(buildHasDatabase(_config.database));\n            }).then(result -> {\n                if (result == null || result.data == null || result.data.length == 0) {\n                    return null;\n                }\n                log.debug(\"database exists:\", _config.database);\n                return _connection.query(buildSelectDatabase(_config.database));\n            }).then(_ -> {\n                log.endMeasure(\"connect\");\n                _connection.connectionDetails.database = _config.database;\n                resolve(new DatabaseResult(this, true));\n            }, (error:MySqlError) -> {\n                log.endMeasure(\"connect\");\n                log.error(\"error connecting:\", error);\n                reject(MySqlError2DatabaseError(error, \"connect\"));\n            });\n        });\n    }\n\n    public function disconnect():Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            log.debug(\"disconnecting\");\n            _connection.close();\n            _connection = null;\n            clearCachedSchema();\n            resolve(new DatabaseResult(this, true));\n        });\n    }\n\n    public function table(name:String):Promise<DatabaseResult<ITable>> {\n        return new Promise((resolve, reject) -> {\n            log.beginMeasure(\"table \" + name);\n            log.debug(\"looking for table:\", [_config.database, name]);\n            _connection.get(SQL_TABLE_EXISTS, [_config.database, name]).then(response -> {\n                var table:ITable = new MySqlTable(this);\n                table.name = name;\n                table.exists = !(response.data == null);\n                log.endMeasure(\"table \" + name);\n                if (table.exists) {\n                    log.debug(\"table found:\", [_config.database, name]);\n                } else {\n                    log.debug(\"table not found:\", [_config.database, name]);\n                }\n                resolve(new DatabaseResult(this, table));\n            }, (error:MySqlError) -> {\n                log.endMeasure(\"table \" + name);\n                log.error(\"error looking for table:\", error);\n                reject(MySqlError2DatabaseError(error, \"table\"));\n            });\n        });\n    }\n\n    public function createTable(name:String, columns:Array<ColumnDefinition>):Promise<DatabaseResult<ITable>> {\n        return new Promise((resolve, reject) -> {\n            log.beginMeasure(\"createTable \" + name);\n            log.debug(\"creating table\", [name, columns]);\n            var sql = buildCreateTable(name, columns, MySqlDataTypeMapper.get());\n            _connection.exec(sql).then(response -> {\n                var table:ITable = new MySqlTable(this);\n                table.name = name;\n                table.exists = true;\n\n                log.endMeasure(\"createTable \" + name);\n                _schema = null;\n                resolve(new DatabaseResult(this, table));\n            }, (error:MySqlError) -> {\n                log.endMeasure(\"createTable \" + name);\n                log.error(\"error creating table\", error);\n                reject(MySqlError2DatabaseError(error, \"createTable\"));\n            });\n        });\n    }\n\n    public function deleteTable(name:String):Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            _schema = null;\n            reject(new DatabaseError(\"not implemented\", \"deleteTable\"));\n        });\n    }\n\n    #if allow_raw\n    public function raw(data:String, values:Array<Any> = null):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (values == null) {\n                values = [];\n            }\n            var sql = data;\n            _connection.all(sql, values).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                resolve(new DatabaseResult(this, records));\n            }, (error:MySqlError) -> {\n                reject(MySqlError2DatabaseError(error, \"raw\"));\n            });\n        });\n    }\n    #end\n}","package db.mysql;\n\nimport db.macros.IDatabaseType;\nimport db.macros.DatabaseTypeInfo;\n\n#if (js && !(nodejs))\n#error \"haxe nodejs lib needed for js builds\"\n#end\n\nclass MySqlDatabaseType implements IDatabaseType {\n    public function new() {\n    }\n\n    public function typeInfo():DatabaseTypeInfo {\n        return {\n            ctor: MySqlDatabase.new\n        };\n    }\n}\n","package db.mysql;\n\nimport logging.LogManager;\nimport promises.PromiseUtils;\nimport promises.Promise;\nimport mysql.DatabaseConnection as MySqlDatabaseConnection;\nimport mysql.MySqlError;\nimport db.mysql.Utils.*;\nimport db.utils.SqlUtils.*;\nimport Query.QueryExpr;\nimport logging.Logger;\n\nclass MySqlTable implements ITable {\n    private static var log = new Logger(MySqlTable, true);\n\n    public var db:IDatabase;\n    public var name:String;\n    public var exists:Bool;\n\n    public function new(db:IDatabase) {\n        this.db = db;\n    }\n\n    private var _tableSchema:TableSchema = null;\n    public function schema(force:Bool = false):Promise<DatabaseResult<TableSchema>> {\n        return new Promise((resolve, reject) -> {\n            if (force) {\n                clearCachedSchema();\n            }\n            if (_tableSchema != null) {\n                resolve(new DatabaseResult(db, this, _tableSchema));\n                return;\n            }\n\n            this.db.schema(force).then(result -> {\n                _tableSchema = result.data.findTable(this.name);\n                resolve(new DatabaseResult(db, this, _tableSchema));\n            }, (error:DatabaseError) -> {\n                reject(error);\n            });\n        });\n    }\n\n    public function clearCachedSchema() {\n        _tableSchema = null;\n    }\n\n    public function applySchema(newSchema:TableSchema):Promise<DatabaseResult<TableSchema>> {\n        return new Promise((resolve, reject) -> {\n            \n            var schemaChanged:Bool = false;\n\n            log.beginMeasure(\"applying schema\");\n            log.debug(\"applying schema\");\n            schema().then(result -> {\n                var promises = [];\n                var currentSchema = result.data;\n                if (currentSchema != null && !currentSchema.equals(newSchema)) {\n                    var diff = currentSchema.diff(newSchema);\n\n                    for (added in diff.addedColumns) {\n                        promises.push(addColumn.bind(added));\n                        schemaChanged = true;\n                    }\n\n                    for (removed in diff.removedColumns) {\n                        promises.push(removeColumn.bind(removed));\n                        schemaChanged = true;\n                    }\n                }\n                return PromiseUtils.runSequentially(promises);\n            }).then(result -> {\n                if (schemaChanged) {\n                    clearCachedSchema();\n                    cast(db, MySqlDatabase).clearCachedSchema();\n                }\n                log.endMeasure(\"applying schema\");\n                resolve(new DatabaseResult(db, this, newSchema));\n            }, (error:DatabaseError) -> {\n                log.error(\"error applying schema\");\n                reject(error);\n            });\n        });\n    }\n\n    public function all():Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'all'));\n                return;\n            }\n\n            log.beginMeasure(\"all\");\n            log.debug(\"all\");\n            refreshSchema().then(schemaResult -> {\n                var values = [];\n                var sql = buildSelect(this, null, null, null, values, db.definedTableRelationships(), schemaResult.data);\n                return connection.all(sql);\n            }).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                log.endMeasure(\"all\");\n                resolve(new DatabaseResult(db, this, records));\n            }, (error:MySqlError) -> {\n                log.error(\"all\", error);\n                reject(MySqlError2DatabaseError(error, \"all\"));\n            });\n        });\n    }\n\n    public function page(pageIndex:Int, pageSize:Int = 100, query:QueryExpr = null, allowRelationships:Bool = true):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'find'));\n                return;\n            }\n\n            log.beginMeasure(\"page\");\n            log.debug(\"page\", [pageIndex, pageSize]);\n            refreshSchema().then(schemaResult -> {\n                var relationshipDefinintions = db.definedTableRelationships();\n                if (!allowRelationships) {\n                    relationshipDefinintions = null;\n                }\n                var values = [];\n                var sql = buildSelect(this, null, pageSize, pageIndex * pageSize, values, relationshipDefinintions, schemaResult.data);\n                return connection.all(sql, values);\n            }).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                log.endMeasure(\"page\");\n                resolve(new DatabaseResult(db, this, records));\n            }, (error:MySqlError) -> {\n                log.error(\"page\", error);\n                reject(MySqlError2DatabaseError(error, \"page\"));\n            });\n        });\n    }\n\n    public function add(record:Record):Promise<DatabaseResult<Record>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'add'));\n                return;\n            }\n\n            log.beginMeasure(\"add\");\n            if (LogManager.instance.shouldLogDebug) {\n                log.debug(\"add\", record.debugString());\n            }\n            var insertedId:Int = -1;\n            var schema:DatabaseSchema = null;\n            refreshSchema(true).then(schemaResult -> {\n                schema = schemaResult.data;\n                var values = [];\n                var sql = buildInsert(this, record, values, MySqlDataTypeMapper.get());\n                return connection.get(sql, values);\n            }).then(response -> {\n                insertedId = response.data.insertId;\n\n                var tableSchema = schema.findTable(this.name);\n                if (tableSchema != null) {\n                    var primaryKeyColumns = tableSchema.findPrimaryKeyColumns();\n                    if (primaryKeyColumns.length == 1) { // we'll only \"auto set\" the primary key column if there is _only_ one of them\n                        record.field(primaryKeyColumns[0].name, insertedId);\n                    }\n                }\n\n                record.field(\"_insertedId\", insertedId);\n                log.endMeasure(\"add\");\n                var result = new DatabaseResult(db, this, record);\n                result.itemsAffected = response.affectedRows;\n                resolve(result);\n            }, (error:MySqlError) -> {\n                log.error(\"add\", error);\n                reject(MySqlError2DatabaseError(error, \"add\"));\n            });\n        });\n    }\n\n    public function addAll(records:RecordSet):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'addAll'));\n                return;\n            }\n\n            log.beginMeasure(\"addAll\");\n            log.debug(\"addAll\");\n            var promises = [];\n            for (record in records) {\n                promises.push(add.bind(record));\n            }\n\n            PromiseUtils.runSequentially(promises).then(results -> {\n                log.endMeasure(\"addAll\");\n                var itemsAffected = 0;\n                for (result in results) {\n                    itemsAffected += result.itemsAffected;\n                }\n                var result = new DatabaseResult(db, this, records);\n                result.itemsAffected = itemsAffected;\n                resolve(result);\n            }, (error:MySqlError) -> {\n                log.error(\"addAll\", error);\n                reject(MySqlError2DatabaseError(error, \"addAll\"));\n            });\n        });\n    }\n\n    public function delete(record:Record):Promise<DatabaseResult<Record>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'delete'));\n                return;\n            }\n\n            log.beginMeasure(\"delete\");\n            if (LogManager.instance.shouldLogDebug) {\n                log.debug(\"delete\", record.debugString());\n            }\n            refreshSchema().then(schemaResult -> {\n                var values = [];\n                var sql = buildDeleteRecord(this, record, values);\n                return connection.get(sql, values);\n            }).then(response -> {\n                log.endMeasure(\"delete\");\n                var result = new DatabaseResult(db, this, record);\n                result.itemsAffected = response.affectedRows;\n                resolve(result);\n            }, (error:MySqlError) -> {\n                log.error(\"delete\", error);\n                reject(MySqlError2DatabaseError(error, \"delete\"));\n            });\n        });\n    }\n\n    public function deleteAll(query:QueryExpr = null):Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'deleteAll'));\n                return;\n            }\n\n            log.beginMeasure(\"deleteAll\");\n            refreshSchema().then(schemaResult -> {\n                return connection.exec(buildDeleteWhere(this, query));\n            }).then(response -> {\n                log.endMeasure(\"deleteAll\");\n                var result = new DatabaseResult(db, this, true);\n                result.itemsAffected = response.affectedRows;\n                resolve(result);\n            }, (error:MySqlError) -> {\n                log.error(\"deleteAll\", error);\n                reject(MySqlError2DatabaseError(error, \"deleteAll\"));\n            });\n        });\n    }\n\n    public function update(query:QueryExpr, record:Record):Promise<DatabaseResult<Record>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'update'));\n                return;\n            }\n\n            log.beginMeasure(\"update\");\n            if (LogManager.instance.shouldLogDebug) {\n                log.debug(\"update\", record.debugString());\n            }\n            refreshSchema().then(schemaResult -> {\n                var values = [];\n                var sql = buildUpdate(this, query, record, values, MySqlDataTypeMapper.get());\n                return connection.get(sql, values);\n            }).then(response -> {\n                log.endMeasure(\"update\");\n                var result = new DatabaseResult(db, this, record);\n                result.itemsAffected = response.affectedRows;\n                resolve(result);\n            }, (error:MySqlError) -> {\n                log.error(\"update\", error);\n                reject(MySqlError2DatabaseError(error, \"update\"));\n            });\n        });\n    }\n\n    public function find(query:QueryExpr, allowRelationships:Bool = true):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'find'));\n                return;\n            }\n\n            log.beginMeasure(\"find\");\n            log.debug(\"find\");\n            refreshSchema().then(schemaResult -> {\n                var relationshipDefinintions = db.definedTableRelationships();\n                if (!allowRelationships) {\n                    relationshipDefinintions = null;\n                }\n                var values = [];\n                var sql = buildSelect(this, query, null, null, values, relationshipDefinintions, schemaResult.data);\n                return connection.all(sql, values);\n            }).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                log.endMeasure(\"find\");\n                resolve(new DatabaseResult(db, this, records));\n            }, (error:MySqlError) -> {\n                log.error(\"find\");\n                reject(MySqlError2DatabaseError(error, \"find\"));\n            });\n        });\n    }\n\n    public function findOne(query:QueryExpr, allowRelationships:Bool = true):Promise<DatabaseResult<Record>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'findOne'));\n                return;\n            }\n\n            log.beginMeasure(\"findOne\");\n            log.debug(\"findOne\");\n            refreshSchema().then(schemaResult -> {\n                var relationshipDefinintions = db.definedTableRelationships();\n                if (!allowRelationships) {\n                    relationshipDefinintions = null;\n                }\n                var values = [];\n                var sql = buildSelect(this, query, 1, values, relationshipDefinintions, schemaResult.data);\n                return connection.get(sql, values);\n            }).then(response -> {\n                var record:Record = null;\n                if (response.data != null && (response.data is Array)) {\n                    record = Record.fromDynamic(response.data[0]);\n                } else if (response.data != null) {\n                    record =  Record.fromDynamic(response.data);\n                }\n                log.endMeasure(\"findOne\");\n                resolve(new DatabaseResult(db, this, record));\n            }, (error:MySqlError) -> {\n                log.error(\"findOne\", error);\n                reject(MySqlError2DatabaseError(error, \"findOne\"));\n            });\n        });\n    }\n\n    public function findUnique(columnName:String, query:QueryExpr = null, allowRelationships:Bool = true):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'findOne'));\n                return;\n            }\n\n            log.beginMeasure(\"findUnique\");\n            log.debug(\"findUnique\");\n            refreshSchema().then(schemaResult -> {\n                var relationshipDefinintions = db.definedTableRelationships();\n                if (!allowRelationships) {\n                    relationshipDefinintions = null;\n                }\n                var values = [];\n                var sql = buildDistinctSelect(this, query, columnName, null, null, values, relationshipDefinintions, schemaResult.data);\n                return connection.all(sql, values);\n            }).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                log.endMeasure(\"findUnique\");\n                resolve(new DatabaseResult(db, this, records));\n            }, (error:MySqlError) -> {\n                log.error(\"findUnique\", error);\n                reject(MySqlError2DatabaseError(error, \"findUnique\"));\n            });\n        });\n    }\n\n    public function count(query:QueryExpr = null):Promise<DatabaseResult<Int>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'findOne'));\n                return;\n            }\n\n            log.beginMeasure(\"count\");\n            log.debug(\"count\");\n            refreshSchema().then(schemaResult -> {\n                var sql = buildCount(this, query);\n                return connection.get(sql);\n            }).then(response -> {\n                var record = Record.fromDynamic(response.data);\n                log.endMeasure(\"count\");\n                resolve(new DatabaseResult(db, this, cast record.values()[0]));\n            }, (error:MySqlError) -> {\n                log.error(\"count\", error);\n                reject(MySqlError2DatabaseError(error, \"count\"));\n            });\n        });\n    }\n\n    public function addColumn(column:ColumnDefinition):Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'addColumn'));\n                return;\n            }\n\n            log.beginMeasure(\"addColumn\");\n            log.debug(\"addColumn\");\n            var sql = buildAddColumns(this.name, [column], MySqlDataTypeMapper.get());\n            connection.exec(sql).then(result -> {\n                clearCachedSchema();\n                cast(db, MySqlDatabase).clearCachedSchema();\n                log.endMeasure(\"addColumn\");\n                resolve(new DatabaseResult(db, this, true));\n            }, (error:MySqlError) -> {\n                log.error(\"addColumn\", error);\n                reject(MySqlError2DatabaseError(error, \"addColumn\"));\n            });\n        });\n    }\n\n    public function removeColumn(column:ColumnDefinition):Promise<DatabaseResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            if (!exists) {\n                reject(new DatabaseError('table \"${name}\" does not exist', 'addColumn'));\n                return;\n            }\n\n            log.beginMeasure(\"removeColumn\");\n            log.debug(\"removeColumn\");\n            var sql = buildRemoveColumns(this.name, [column], MySqlDataTypeMapper.get());\n            connection.exec(sql).then(result -> {\n                clearCachedSchema();\n                cast(db, MySqlDatabase).clearCachedSchema();\n                log.endMeasure(\"removeColumn\");\n                resolve(new DatabaseResult(db, this, true));\n            }, (error:MySqlError) -> {\n                log.error(\"removeColumn\", error);\n                reject(MySqlError2DatabaseError(error, \"addColumn\"));\n            });\n        });\n    }\n\n    #if allow_raw\n    public function raw(data:String, values:Array<Any> = null):Promise<DatabaseResult<RecordSet>> {\n        return new Promise((resolve, reject) -> {\n            if (values == null) {\n                values = [];\n            }\n            var sql = data;\n            connection.all(sql, values).then(response -> {\n                var records:RecordSet = [];\n                for (item in response.data) {\n                    records.push(Record.fromDynamic(item));\n                }\n                resolve(new DatabaseResult(db, this, records));\n            }, (error:MySqlError) -> {\n                reject(MySqlError2DatabaseError(error, \"raw\"));\n            });\n        });\n    }\n    #end\n\n    private var connection(get, null):MySqlDatabaseConnection;\n    private function get_connection():MySqlDatabaseConnection {\n        return @:privateAccess cast(db, MySqlDatabase)._connection;\n    }\n\n    private function refreshSchema(force:Bool = false):Promise<DatabaseResult<DatabaseSchema>> { // we'll only refresh the data schema if there are table relationships, since the queries might need them\n        return new Promise((resolve, reject) -> {\n            var alwaysAliasResultFields:Bool = this.db.getProperty(\"alwaysAliasResultFields\", false);\n            if (force == false && alwaysAliasResultFields == false && db.definedTableRelationships() == null) {\n                resolve(new DatabaseResult(db, this, null));\n                return;\n            }\n\n            db.schema().then(result -> {\n                resolve(result);\n            }, (error) -> {\n                reject(error);\n            });\n        });\n    }\n}","package db.mysql;\n\nimport mysql.MySqlError;\nimport promises.Promise;\nimport mysql.DatabaseConnection as MySqlDatabaseConnection;\n\nusing StringTools;\n\nclass Utils {\n    public static inline var SQL_TABLE_EXISTS = \"SELECT * FROM information_schema.TABLES WHERE TABLE_SCHEMA=? AND TABLE_NAME=?;\";\n    public static inline var SQL_LIST_TABLES_AND_FIELDS = \"SELECT * FROM information_schema.columns\n                                                           WHERE table_schema = ?\n                                                           ORDER BY table_name,ordinal_position;\";\n\n    public static function MySqlError2DatabaseError(error:MySqlError, call:String) {\n        var dbError = new DatabaseError(error.message, call);\n        return dbError;\n    }\n\n    public static function buildCreateDatabase(databaseName:String):String {\n        return 'CREATE DATABASE IF NOT EXISTS ${databaseName};';\n    }\n\n    public static function buildDropDatabase(databaseName:String):String {\n        return 'DROP DATABASE IF EXISTS ${databaseName};';\n    }\n\n    public static function buildSelectDatabase(databaseName:String):String {\n        return 'USE ${databaseName};';\n    }\n\n    public static function buildHasDatabase(databaseName:String):String {\n        return 'SHOW DATABASES LIKE \\'${databaseName}\\';';\n    }\n\n    public static function buildCreateTable(tableName:String, columns:Array<ColumnDefinition>, typeMapper:IDataTypeMapper) {\n        var sql = 'CREATE TABLE ${tableName} (\\n';\n\n        var columnParts = [];\n        var primaryKey:String = null;\n        for (column in columns) {\n            var type = typeMapper.haxeTypeToDatabaseType(column.type);\n            var columnSql = '    ${column.name}';\n            columnSql += ' ${type}';\n            var suffix = '';\n            if (column.options != null) {\n                for (option in column.options) {\n                    switch (option) {\n                        case PrimaryKey:\n                            primaryKey = column.name;\n                        case AutoIncrement:        \n                            suffix += ' AUTO_INCREMENT';\n                        case NotNull:\n                            suffix += ' NOT NULL';\n                    }\n                }\n            }\n            if (suffix.length > 0) {\n                columnSql += suffix;\n            }\n\n            columnParts.push(columnSql);\n        }\n\n        if (primaryKey != null) {\n            columnParts.push('    PRIMARY KEY ($primaryKey)');\n        }\n\n        sql += columnParts.join(\",\\n\");\n\n        sql += ');';\n        return sql;\n    }\n\n    public static function loadFullDatabaseSchema(connection:MySqlDatabaseConnection, config:Dynamic, typeMapper:IDataTypeMapper):Promise<DatabaseSchema> {\n        return new Promise((resolve, reject) -> {\n            var database:String = null;\n            if (config != null && config.database != null) {\n                database = config.database;\n            }\n            if (database == null) {\n                reject(\"no database name\");\n            } else {\n                var schema:DatabaseSchema = {};\n                connection.all(SQL_LIST_TABLES_AND_FIELDS, [database]).then(result -> {\n                    for (r in result.data) {\n                        var table = schema.findTable(r.TABLE_NAME);\n                        if (table == null) {\n                            table = {\n                                name: r.TABLE_NAME\n                            };\n                            schema.tables.push(table);\n                        }\n\n                        var dbType = r.DATA_TYPE;\n                        if (r.CHARACTER_MAXIMUM_LENGTH != null) {\n                            dbType += \":\" + r.CHARACTER_MAXIMUM_LENGTH;\n                        }\n\n                        var options = [];\n                        var columnKey:String = r.COLUMN_KEY;\n                        if (columnKey != null && columnKey.contains(\"PRI\")) {\n                            options.push(ColumnOptions.PrimaryKey);\n                        }\n                        var extra:String = r.EXTRA;\n                        if (extra != null && extra.contains(\"auto_increment\")) {\n                            options.push(ColumnOptions.AutoIncrement);\n                        }\n\n                        table.columns.push({\n                            name: r.COLUMN_NAME,\n                            type: typeMapper.databaseTypeToHaxeType(dbType),\n                            options: options\n\n                        });\n                    }\n                    resolve(schema);\n                }, error -> {\n                    reject(error);\n                });\n            }\n        });\n    }\n\n    public static function buildAddColumns(tableName:String, columns:Array<ColumnDefinition>, typeMapper:IDataTypeMapper):String {\n        var sql = 'ALTER TABLE ${tableName}\\n';\n\n        for (column in columns) {\n            var type = typeMapper.haxeTypeToDatabaseType(column.type);\n            sql += 'ADD ${column.name} ${type}';\n        }\n\n        sql += ';';\n\n        return sql;\n    }\n\n    public static function buildRemoveColumns(tableName:String, columns:Array<ColumnDefinition>, typeMapper:IDataTypeMapper):String {\n        var sql = 'ALTER TABLE ${tableName}\\n';\n\n        for (column in columns) {\n            sql += 'DROP COLUMN ${column.name}';\n        }\n\n        sql += ';';\n\n        return sql;\n    }\n}","package db.utils;\n\nimport Query.QueryExpr;\nimport haxe.io.Bytes;\n\nusing StringTools;\n\nclass SqlUtils {\n    public static function buildInsert(table:ITable, record:Record, values:Array<Any> = null, typeMapper:IDataTypeMapper = null):String {\n        var fieldNames = fieldNamesFromRecord(record);\n        var sql = 'INSERT INTO ${table.name} (${fieldNames.join(\", \")}) VALUES ';\n        var placeholders = [];\n        for (f in record.fieldNames) {\n            placeholders.push('?');\n            if (values != null) {\n                values.push(record.field(f));\n            }\n        }\n        if (typeMapper != null) {\n            for (i in 0...values.length) {\n                var v = values[i];\n                if (typeMapper.shouldConvertValueToDatabase(v)) {\n                    v = typeMapper.convertValueToDatabase(v);\n                    values[i] = v;\n                }\n            }\n        }\n        sql += '(${placeholders.join(\", \")})';\n        sql += ';';\n        return sql;\n    }\n\n    public static function buildSelect(table:ITable, query:QueryExpr = null, limit:Null<Int> = null, offset:Null<Int> = null, values:Array<Any> = null, relationships:RelationshipDefinitions = null, databaseSchema:DatabaseSchema = null):String {\n        var alwaysAliasResultFields:Bool = table.db.getProperty(\"alwaysAliasResultFields\", false);\n        var fieldAliases = [];\n        var sqlJoin = buildJoins(table.name, null, relationships, databaseSchema, fieldAliases);\n        if (alwaysAliasResultFields == true || (fieldAliases != null && fieldAliases.length > 0)) {\n            if (databaseSchema != null) {\n                var tableSchema = databaseSchema.findTable(table.name);\n                if (tableSchema != null) {\n                    for (tableColumn in tableSchema.columns) {\n                        fieldAliases.insert(0, '${table.name}.${tableColumn.name} AS `${table.name}.${tableColumn.name}`');\n                    }\n                }\n            }\n        }\n\n        var fieldList = '*';\n        if (fieldAliases.length > 0) {\n            fieldList = fieldAliases.join(\", \");\n        }\n        var sql = 'SELECT ${fieldList} FROM ${table.name}';\n        sql += sqlJoin;\n\n        if (query != null) {\n            sql += '\\nWHERE (${Query.queryExprToSql(query, values, table.name)})';\n        }\n        if (limit != null) {\n            sql += ' LIMIT ' + limit;\n        }\n        if (offset != null) {\n            sql += ' OFFSET ' + offset;\n        }\n        sql += ';';\n        return sql;\n    }\n\n    public static function buildCount(table:ITable, query:QueryExpr = null, values:Array<Any> = null):String {\n        var fieldList = 'COUNT(*)';\n        var sql = 'SELECT ${fieldList} FROM ${table.name}';\n\n        if (query != null) {\n            sql += '\\nWHERE (${Query.queryExprToSql(query, values, table.name)})';\n        }\n        sql += ';';\n        return sql;\n    }\n\n    public static function buildDistinctSelect(table:ITable, query:QueryExpr = null, distinctColumn:String = null, limit:Null<Int> = null, offset:Null<Int> = null, values:Array<Any> = null, relationships:RelationshipDefinitions = null, databaseSchema:DatabaseSchema = null):String {\n        var alwaysAliasResultFields:Bool = table.db.getProperty(\"alwaysAliasResultFields\", false);\n        var fieldAliases = [];\n\n        var fieldList = '*';\n        if (distinctColumn != null) {\n            fieldAliases.push('distinct(${distinctColumn})');\n        }\n        if (fieldAliases.length > 0) {\n            fieldList = fieldAliases.join(\", \");\n        }\n        var sql = 'SELECT ${fieldList} FROM ${table.name}';\n\n        if (query != null) {\n            sql += '\\nWHERE (${Query.queryExprToSql(query, values, table.name)})';\n        }\n        if (limit != null) {\n            sql += ' LIMIT ' + limit;\n        }\n        if (offset != null) {\n            sql += ' OFFSET ' + offset;\n        }\n        sql += ';';\n        return sql;\n    }\n\n    private static function buildJoins(tableName:String, prefix:String, relationships:RelationshipDefinitions, databaseSchema:DatabaseSchema, fieldAliases:Array<String>) {\n        if (relationships == null) {\n            return \"\";\n        }\n        var sql = \"\";\n\n        var tableRelationships = relationships.get(tableName);\n        if (tableRelationships == null) {\n            return \"\";\n        }\n        \n\n        for (tableRelationship in tableRelationships) {\n            var table1 = tableRelationship.table1;\n            var field1 = tableRelationship.field1;\n            var table2 = tableRelationship.table2;\n            var field2 = tableRelationship.field2;\n            if (prefix == null) {\n                prefix = table1;\n            }\n            var joinName = table1 + \".\" + table2;\n            if (relationships.complexRelationships) {\n                joinName = prefix + \".\" + field1 + \".\" + table2 + \".\" + field2;\n            }\n\n            var tableSchema = databaseSchema.findTable(table2);\n            if (tableSchema == null) {\n                continue;\n            }\n\n            for (tableColumn in tableSchema.columns) {\n                fieldAliases.push('`${joinName}`.`${tableColumn.name}` AS `${joinName}.${tableColumn.name}`');\n            }\n\n            sql += '\\n    LEFT JOIN `${table2}` AS `${joinName}` ON `${joinName}`.`${field2}` = `${prefix}`.`${field1}`';\n            sql += buildJoins(table2, joinName, relationships, databaseSchema, fieldAliases);\n        }\n        \n        return sql;\n    }\n\n    public static function buildDeleteRecord(table:ITable, record:Record, values:Array<Any> = null):String {\n        var fieldNames = fieldNamesFromRecord(record);\n        var sql = 'DELETE FROM ${table.name} WHERE ';\n        var placeholders = [];\n        for (f in record.fieldNames) {\n            var v = record.field(f);\n            f = quoteFieldName(f);\n            if ((v is Bytes)) {\n                continue;\n            }\n            placeholders.push('${f} = ?');\n            if (values != null) {\n                values.push(v);\n            }\n        }\n        sql += '(${placeholders.join(\" AND \")})';\n        sql += ';';\n        return sql;\n    }\n\n    public static function buildDeleteWhere(table:ITable, query:QueryExpr):String {\n        var sql = 'DELETE FROM ${table.name}';\n        if (query != null) {\n            sql += ' WHERE (${Query.queryExprToSql(query, null, table.name)})';\n        }\n        sql += ';';\n        return sql;\n    }\n\n    public static function buildUpdate(table:ITable, query:QueryExpr, record:Record, values:Array<Any> = null, typeMapper:IDataTypeMapper = null):String {\n        var fieldNames = fieldNamesFromRecord(record);\n        var sql = 'UPDATE ${table.name} SET ';\n        var placeholders = [];\n        for (f in record.fieldNames) {\n            var v = record.field(f);\n            f = quoteFieldName(f);\n            if (v == null) {\n                placeholders.push('${f} = NULL');\n            } else {\n                if (typeMapper != null && typeMapper.shouldConvertValueToDatabase(v)) {\n                    v = typeMapper.convertValueToDatabase(v);\n                }\n                placeholders.push('${f} = ?');\n                if (values != null) {\n                    values.push(v);\n                }\n            }\n        }\n        sql += '${placeholders.join(\", \")}';\n        sql += ' WHERE (${Query.queryExprToSql(query, values, table.name)})';\n        sql += ';';\n        return sql;\n    }\n\n    private static function fieldNamesFromRecord(record:Record):Array<String> {\n        var names = [];\n        for (f in record.fieldNames) {\n            names.push('`${f}`');\n        }\n        return names;\n    }\n\n    private static inline function quoteFieldName(f:String) {\n        return '`${f}`';\n    }\n}\n","package discord_builder;\n\nimport haxe.Rest;\n\nclass APIActionRowComponent<T> extends APIBaseComponent {\n\n\tvar components:Array<T> = [];\n\tpublic function new() {\n\t\tthis.type = ActionRow;\n\t}\n\n\tpublic function addComponents(components:Rest<T>) {\n\t\tfor (c in components) {\n\t\t\tthis.components.push(c);\n\t\t}\n\t\treturn this;\n\t}\n}\n","package haxe.iterators;\n\nclass RestIterator<T> {\n\tfinal args:Rest<T>;\n\tvar current:Int = 0;\n\n\t@:allow(haxe.Rest)\n\tinline function new(args:Any) {\n\t\tthis.args = args;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn current < args.length;\n\t}\n\n\tpublic inline function next():T {\n\t\treturn args[current++];\n\t}\n}","package discord_builder;\n\nclass APIButtonComponentBase extends APIBaseComponent {\n\tpublic function new () {\n\t\tthis.type = Button;\n\t}\n}","package discord_builder;\n\nclass APITextInputComponent extends APIBaseComponent {\t\n\tvar style:TextInputStyle;\n\tvar custom_id:String;\n\tvar label:String;\n\tvar placeholder:String;\n\tvar value:String;\n\tvar min_length:Int;\n\tvar max_length:Int;\n\tvar required:Bool;\n\n\tpublic function new () {\n\t\tthis.type = TextInput;\n\t}\n\tpublic function setStyle(style:TextInputStyle):APITextInputComponent {\n\t\tthis.style = style;\n\t\treturn this;\n\t}\n\tpublic function setCustomId(custom_id:String):APITextInputComponent {\n\t\tthis.custom_id = custom_id;\n\t\treturn this;\n\t}\n\tpublic function setLabel(label:String):APITextInputComponent {\n\t\tthis.label = label;\n\t\treturn this;\n\t}\n\tpublic function setPlaceholder(placeholder:String):APITextInputComponent {\n\t\tthis.placeholder = placeholder;\n\t\treturn this;\n\t}\n\tpublic function setValue(value:String):APITextInputComponent {\n\t\tthis.value = value;\n\t\treturn this;\n\t}\n\tpublic function setMinLength(min_length:Int):APITextInputComponent {\n\t\tthis.min_length = min_length;\n\t\treturn this;\n\t}\n\n\tpublic function setMaxLength(max_length:Int):APITextInputComponent {\n\t\tthis.max_length = max_length;\n\t\treturn this;\n\t}\n\n\tpublic function setRequired(required:Bool = true):APITextInputComponent {\n\t\tthis.required = required;\n\t\treturn this;\n\t}\n}\n\nenum abstract TextInputStyle(Int) {\n\tvar Short = 1;\n\tvar Paragraph = 2;\n}","package discord_builder;\n\nimport discord_api_types.ButtonStyle;\nimport discord_builder.APIBaseComponent.ComponentType;\nimport discord_builder.JSONEncodable;\n\n//@:jsRequire('@discordjs/builders', 'ButtonBuilder')\nclass ButtonBuilder extends APIButtonComponentBase {\n\tvar label:String;\n\tvar custom_id:String;\n\tvar style:ButtonStyle;\n\tvar emoji:String;\n\tvar url:String;\n\tvar disabled:Bool;\n\n\tpublic function setDisabled(disabled:Bool = true):ButtonBuilder {\n\t\tthis.disabled = disabled;\n\t\treturn this;\n\t}\n\n\tpublic function setCustomId(custom_id:String):ButtonBuilder {\n\t\tthis.custom_id = custom_id;\n\t\treturn this;\n\t}\n\tpublic function setEmoji(emoji:String):ButtonBuilder {\n\t\tthis.emoji = emoji;\n\t\treturn this;\n\t}\n\tpublic function setLabel(label:String):ButtonBuilder {\n\t\tthis.label = label;\n\t\treturn this;\n\t}\n\tpublic function setStyle(style:ButtonStyle):ButtonBuilder {\n\t\tthis.style = style;\n\t\treturn this;\n\t}\n\n\tpublic function setUrl(url:String):ButtonBuilder {\n\t\tthis.url = url;\n\t\treturn this;\n\t}\n}\n\n\n\nenum abstract ButtonStyle(Int) {\n\t//blurple\n\tvar Primary = 1;\n\t//grey\n\tvar Secondary = 2;\n\t//green\n\tvar Success = 3;\n\t//red\n\tvar Danger = 4;\n\t//grey\n\tvar Link = 5;\n}","package discord_builder;\n\nimport haxe.Rest;\nimport discord_builder.JSONEncodable;\n\n@:jsRequire('@discordjs/builders', 'ModalBuilder')\nextern class ModalBuildera {\n\tpublic var components:Array<ActionRowBuilder<TextInputBuilder>>;\n\tpublic function new();\n\n\tpublic function addComponents(components:Array<ActionRowBuilder<TextInputBuilder>>):ModalBuilder;\n\tpublic function setComponents(components:Array<ActionRowBuilder<TextInputBuilder>>):ModalBuilder;\n\n\tpublic function setCustomId(custom_id:String):ModalBuilder;\n\tpublic function setTitle(title:String):ModalBuilder;\n\tpublic function toJSON():Dynamic;\n}\n\n//@:jsRequire('@discordjs/builders', 'ButtonBuilder')\nclass ModalBuilder {\n\tvar title:String;\n\tvar custom_id:String;\n\t/**\n\t * @TODO - Broaden the type declaration \n\t */\n\tpublic var components:Array<APIActionRowComponent<APITextInputComponent>> = [];\n\tpublic function new() {}\n\n\tpublic function setCustomId(custom_id:String):ModalBuilder {\n\t\tthis.custom_id = custom_id;\n\t\treturn this;\n\t}\n\n\tpublic function setTitle(title:String):ModalBuilder {\n\t\tthis.title = title;\n\t\treturn this;\n\t}\n\n\tpublic function addComponents(components:Rest<APIActionRowComponent<APITextInputComponent>>) {\n\t\tfor (c in components) {\n\t\t\tthis.components.push(c);\n\t\t}\n\t\treturn this;\n\t}\n}\n","package discord_builder;\n\nimport discord_builder.SlashCommandUserOption;\nimport discord_builder.SlashCommandBuilder;\n\n@:jsRequire('@discordjs/builders', 'SharedSlashCommandOptions')\nextern class SharedSlashCommandOptions extends SharedNameAndDescription {\n\t@:overload(function(input:SlashCommandUserOption):SlashCommandUserOption {})\n\t@:overload(function(input:(builder:SlashCommandUserOption)->SlashCommandUserOption):SlashCommandUserOption {})\n\tpublic function addUserOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandBooleanOption):SlashCommandBooleanOption {})\n\t@:overload(function(input:(builder:SlashCommandBooleanOption)->SlashCommandBooleanOption):SlashCommandBooleanOption {})\n\tpublic function addBooleanOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandChannelOption):SlashCommandChannelOption {})\n\t@:overload(function(input:(builder:SlashCommandChannelOption)->SlashCommandChannelOption):SlashCommandChannelOption {})\n\tpublic function addChannelOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandStringOption):SlashCommandStringOption {})\n\t@:overload(function(input:(builder:SlashCommandStringOption)->SlashCommandStringOption):SlashCommandStringOption {})\n\tpublic function addStringOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandRoleOption):SlashCommandRoleOption {})\n\t@:overload(function(input:(builder:SlashCommandRoleOption)->SlashCommandRoleOption):SlashCommandRoleOption {})\n\tpublic function addRoleOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandMentionableOption):SlashCommandMentionableOption {})\n\t@:overload(function(input:(builder:SlashCommandMentionableOption)->SlashCommandMentionableOption):SlashCommandMentionableOption {})\n\tpublic function addMentionableOption():SlashCommandBuilder;\n\n\t@:overload(function(input:SlashCommandNumberOption):SlashCommandNumberOption {})\n\t@:overload(function(input:(builder:SlashCommandNumberOption)->SlashCommandNumberOption):SlashCommandNumberOption {})\n\tpublic function addNumberOption():SlashCommandBuilder;\n\t@:overload(function(input:SlashCommandSubcommandBuilder):SlashCommandSubcommandBuilder {})\n\t@:overload(function(input:(builder:SlashCommandSubcommandBuilder)->SlashCommandSubcommandBuilder):SlashCommandSubcommandBuilder {})\n\tpublic function addSubcommand():SlashCommandBuilder;\n\t\n}\n\n@:forward\nabstract AnySlashCommand(SlashCommandBuilder) {\n\tprivate function new(builder:SlashCommandBuilder) {\n\t\tthis = builder;\n\t}\n\t@:from static function fromBase(base:SlashCommandBuilder) {\n\t\treturn new AnySlashCommand(cast base);\n\t}\n\t@:from static function fromUser(user:SlashCommandUserOption) {\n\t\treturn new AnySlashCommand(cast user);\n\t}\n\t@:from static function fromBool(bool:SlashCommandBooleanOption) {\n\t\treturn new AnySlashCommand(cast bool);\n\t}\n\t@:from static function fromString(string:SlashCommandStringOption) {\n\t\treturn new AnySlashCommand(cast string);\n\t}\n\t@:from static function fromChannel(channel:SlashCommandChannelOption) {\n\t\treturn new AnySlashCommand(cast channel);\n\t}\n\t@:from static function fromRole(role:SlashCommandRoleOption) {\n\t\treturn new AnySlashCommand(cast role);\n\t}\n\t@:from static function fromNumber(number:SlashCommandNumberOption) {\n\t\treturn new AnySlashCommand(cast number);\n\t}\n\t@:from static function fromMentionable(mentionable:SlashCommandMentionableOption) {\n\t\treturn new AnySlashCommand(cast mentionable);\n\t}\n\t@:from static function fromSubcommand(subcommand:SlashCommandSubcommandBuilder) {\n\t\treturn new AnySlashCommand(cast subcommand);\n\t}\n\t\n\t@:from static function fromContextMenu(menu:ContextMenuCommandBuilder) {\n\t\treturn new AnySlashCommand(cast menu);\n\t}\n}","package ecs;\n\nimport haxe.ds.Vector;\n\nclass Components<T>\n{\n    final components : Vector<T>;\n\n    public function new(_size)\n    {\n        components = new Vector(_size);\n    }\n\n    public function set(_entity : Entity, _component : T)\n    {\n        components[_entity.id()] = _component;\n    }\n\n    public function get(_entity : Entity) : T\n    {\n        return components[_entity.id()];\n    }\n}","package ecs;\n\nabstract Entity(Int)\n{\n    public static final none = new Entity(-1);\n\n    public function new(_id)\n    {\n        this = _id;\n    }\n\n    public function id()\n    {\n        return this;\n    }\n}","package ecs;\n\nimport haxe.Exception;\nimport haxe.ds.Vector;\n\nclass Phase\n{\n    var enabled : Bool;\n\n    final systems : Vector<System>;\n\n    final enabledSystems : Vector<Bool>;\n\n    public final name : String;\n\n    public function new(_enabled, _name, _systems, _enabledSystems)\n    {\n        enabled        = _enabled;\n        name           = _name;\n        systems        = _systems;\n        enabledSystems = _enabledSystems;\n    }\n\n    public function update(_dt : Float)\n    {\n        if (!enabled)\n        {\n            return;\n        }\n\n        for (idx in 0...systems.length)\n        {\n            if (enabledSystems[idx])\n            {\n                systems[idx].update(_dt);\n            }\n        }\n    }\n\n    public function enable()\n    {\n        if (enabled)\n        {\n            return;\n        }\n\n        enabled = true;\n\n        for (idx in 0...systems.length)\n        {\n            if (enabledSystems[idx])\n            {\n                systems[idx].onEnabled();\n            }\n        }\n    }\n\n    public function disable()\n    {\n        if (!enabled)\n        {\n            return;\n        }\n\n        enabled = false;\n\n        for (idx in 0...systems.length)\n        {\n            if (enabledSystems[idx])\n            {\n                systems[idx].onDisabled();\n            }\n        }\n    }\n\n    @:generic public function enableSystem<T : System>(_type : Class<T>)\n    {\n        for (idx in 0...systems.length)\n        {\n            switch Std.downcast(systems[idx], _type)\n            {\n                case null:\n                    continue;\n                case system:\n                    if (!enabledSystems[idx])\n                    {\n                        enabledSystems[idx] = true;\n\n                        system.onEnabled();\n                    }\n\n                    return;\n            }\n        }\n\n        throw new Exception('Unable to find system with the specified type');\n    }\n\n    @:generic public function disableSystem<T : System>(_type : Class<T>)\n    {\n        for (idx in 0...systems.length)\n        {\n            switch Std.downcast(systems[idx], _type)\n            {\n                case null:\n                    continue;\n                case system:\n                    if (enabledSystems[idx])\n                    {\n                        enabledSystems[idx] = false;\n\n                        system.onDisabled();\n                    }\n\n                    return;\n            }\n        }\n\n        throw new Exception('Unable to find system with the specified type');\n    }\n\n    @:generic public function getSystem<T : System>(_type : Class<T>)\n    {\n        for (system in systems)\n        {\n            switch Std.downcast(system, _type)\n            {\n                case null:\n                    continue;\n                case casted:\n                    return casted;\n            }\n        }\n\n        throw new Exception('Unable to find system with the specified type');\n    }\n}\n","package ecs;\n\nabstract TableType(String) from String to String\n{\n\tfunction new(value)\n    {\n        this = value;\n\t}\n\t\n\t@:from static function fromClass(input:Class<Dynamic>)\n    {\n        return new TableType(Type.getClassName(input));\n\t}\n}","package ecs.core;\n\nimport haxe.ds.Vector;\nimport bits.Bits;\n\nclass ComponentManager\n{\n    final entities : EntityManager;\n\n    /**\n     * All components stored in this system.\n     * Index into the vector with the components ID to get all components of that type.\n     */\n    final components : Vector<Any>;\n\n    /**\n     * Bit flags for each entity in the universe.\n     * If a bit is set then it has the component of that index / id.\n     */\n    public final flags : Vector<Bits>;\n\n    public function new(_entities, _components)\n    {\n        entities   = _entities;\n        components = _components;\n        flags      = {\n            final v = new Vector(_entities.capacity());\n\n            for (i in 0...v.length)\n            {\n                v[i] = new Bits();\n            }\n\n            v;\n        }\n    }\n\n    /**\n     * Get the components table for the specified component ID.\n     * @param _compID Unique component ID.\n     */\n    public function getTable<T>(_compID : Int) : Any\n    {\n        return components[_compID];\n    }\n\n    public function set<T>(_entity : Entity, _id : Int, _component : T)\n    {\n        (components[_id] : Components<T>).set(_entity, _component);\n\n        flags[_entity.id()].set(_id);\n    }\n\n    public function remove(_entity : Entity, _id : Int)\n    {\n        flags[_entity.id()].unset(_id);\n    }\n\n    public function clear(_entity : Entity)\n    {\n        for (set in components)\n        {\n            (set : Components<Any>).set(_entity, null);\n        }\n\n        flags[_entity.id()].clear();\n    }\n}","package ecs.core;\n\nimport haxe.ds.Vector;\n\nclass EntityManager\n{\n    final storage : Vector<Entity>;\n    final recycleBin : Vector<Int>;\n    \n    var nextID : Int;\n    var binSize : Int;\n\n    public function new(_max)\n    {\n        storage = new Vector(_max);\n        recycleBin = new Vector(_max);\n        nextID  = 0;\n\tbinSize = 0;\n    }\n\n    public function create()\n    {\n        if (binSize > 0)\n        {\n            return storage[recycleBin[--binSize]];\n        }\n\t   \n        final idx = nextID++;\n\t\n\tif (idx >= storage.length)\n        {\n            throw \"ECS entity limit exceeded\";\n        }\n\t\n        final e   = new Entity(idx);\n\n        storage[idx] = e;\n\n        return e;\n    }\n    \n    public function destroy(_id : Int)\n    {\n        recycleBin[binSize++] = _id;\n    }\n\n    public function get(_id : Int)\n    {\n        return storage[_id];\n    }\n\n    public function capacity()\n    {\n        return storage.length;\n    }\n}\n","package ecs.core;\n\nimport haxe.ds.Vector;\nimport ecs.core.ComponentManager;\n\nclass FamilyManager\n{\n    final components : ComponentManager;\n\n    final resources : ResourceManager;\n\n    final families : Vector<Family>;\n\n    public final number : Int;\n\n    public function new(_components, _resources, _families)\n    {\n        components = _components;\n        resources  = _resources;\n        families   = _families;\n        number     = families.length;\n    }\n\n    public function get(_index : Int)\n    {\n        return families[_index];\n    }\n\n    public function tryActivate(_id : Int)\n    {\n        if (!families[_id].isActive() && resources.flags.areSet(families[_id].resourcesMask))\n        {\n            families[_id].activate();\n        }\n    }\n\n    public function tryDeactivate(_id : Int, resourceID : Int)\n    {\n        if (!resources.flags.isSet(resourceID))\n        {\n            return;\n        }\n        if (!families[_id].isActive())\n        {\n            return;\n        }\n        if (families[_id].resourcesMask.isSet(resourceID))\n        {\n            families[_id].deactivate();\n        }\n    }\n\n    public function whenEntityDestroyed(_entity : Entity)\n    {\n        for (family in families)\n        {          \n            family.remove(_entity);\n        }\n    }\n}","package ecs.core;\n\nimport haxe.ds.Vector;\nimport bits.Bits;\n\nclass ResourceManager\n{\n    /**\n     * Bits which indicate which resources are currently stored in the system.\n     */\n    public final flags : Bits;\n\n    /**\n     * Vector for storing all active resources.\n     */\n    final resources : Vector<Any>;\n\n    public function new(_flags, _resources)\n    {\n        flags     = _flags;\n        resources = _resources;\n    }\n\n    /**\n     * Gets the resource with the provided ID.\n     * If the resource is not in the system null is returned.\n     * @param _id Resource ID.\n     */\n    public function get(_id : Int)\n    {\n        return resources[_id];\n    }\n\n    /**\n     * Add a resource into the world.\n     * @param _id Resource ID.\n     * @param _resource Resource object.\n     */\n    public function insert(_id : Int, _resource : Any)\n    {\n        resources[_id] = _resource;\n\n        flags.set(_id);\n    }\n\n    /**\n     * Remove a resource from the world.\n     * @param _id Resource ID.\n     */\n    public function remove(_id : Int)\n    {\n        flags.unset(_id);\n\n        resources[_id] = null;\n    }\n}","package ecs.ds;\n\n@:generic class Signal<T>\n{\n    final subscribers : Array<T->Void>;\n\n    public function new()\n    {\n        subscribers = [];\n    }\n\n    public function subscribe(_func : T->Void)\n    {\n        if (subscribers.indexOf(_func) == -1)\n        {\n            subscribers.push(_func);\n        }\n    }\n\n    public function unsubscribe(_func : T->Void)\n    {\n        subscribers.remove(_func);\n    }\n\n    public function notify(_data : T)\n    {\n        for (func in subscribers)\n        {\n            func(_data);\n        }\n    }\n}","package ecs.ds;\n\nimport haxe.ds.Vector;\n\n/**\n * Sparse set of entities contains both a dense and sparse vector for storage.\n * This allows O(1) insertion, removal, and searching of entities and allows them to be iterated over in a dense array.\n * Entities are not guarenteed to be in the order they were inserted.\n */\nclass SparseSet\n{\n    /**\n     * Sparse vector which contains indices into the dense vector.\n     * Index using an entity to find the corresponding dense vector position.\n     */\n    final sparse : Vector<Int>;\n\n    /**\n     * Packed array of all entity values\n     */\n    final dense : Vector<Entity>;\n\n    /**\n     * Number of entities currently stored in the dense vector.\n     */\n    var number : Int;\n\n    /**\n     * Create a new sparse set of entities.\n     * On creation all sparse values point to the first element of the dense array and all dense array values contain -1 (null entity).\n     * @param _size Maximum number of entities this set can contain.\n     */\n    public function new(_size)\n    {\n        sparse = new Vector(_size);\n        dense  = new Vector(_size);\n        number = 0;\n\n        for (i in 0...sparse.length)\n        {\n            sparse[i] = 0;\n        }\n        for (i in 0...dense.length)\n        {\n            dense[i] = Entity.none;\n        }\n    }\n\n    /**\n     * Check if the provided entity is stored in the sparse set.\n     * @param _entity Entity to check.\n     */\n    public function has(_entity : Entity)\n    {\n        return sparse[_entity.id()] < number && dense[sparse[_entity.id()]] == _entity;\n    }\n\n    /**\n     * Insert an entity into the sparse set.\n     * @param _entity Entity to insert.\n     */\n    public function insert(_entity : Entity)\n    {\n        dense[number] = _entity;\n        sparse[_entity.id()] = number;\n\n        number++;\n    }\n\n    /**\n     * Removes an entity from the sparse set.\n     * Does not check if the entity is in the set before removing.\n     * @param _entity Entity to remove.\n     */\n    public function remove(_entity : Entity)\n    {\n        final temp = dense[number - 1];\n        dense[sparse[_entity.id()]] = temp;\n        sparse[temp.id()] = sparse[_entity.id()];\n\n        number--;\n    }\n\n    /**\n     * Get the entity at the provided dense vector location.\n     * @param _idx Dense vector index.\n     */\n    public function getDense(_idx : Int)\n    {\n        return dense[_idx];\n    }\n\n    /**\n     * Get the index into the dense vector that the provided entity is stored in.\n     * @param _entity Entity to get index of.\n     */\n    public function getSparse(_entity : Entity)\n    {\n        return sparse[_entity.id()];\n    }\n\n    /**\n     * Number of entity currently stored in the dense vector.\n     */\n    public function size()\n    {\n        return number;\n    }\n}","package ecs.ds;\n\nabstract Unit(Dynamic)\n{\n    public static final unit = new Unit();\n\n    function new()\n    {\n        this = null;\n    }\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule(m:String);\n\tFilePos(s:Null<StackItem>, file:String, line:Int, ?column:Int);\n\tMethod(classname:Null<String>, method:String);\n\tLocalFunction(?v:Int);\n}\n\n/**\n\tGet information about the call stack.\n**/\n@:allow(haxe.Exception)\n@:using(haxe.CallStack)\nabstract CallStack(Array<StackItem>) from Array<StackItem> {\n\t/**\n\t\tThe length of this stack.\n\t**/\n\tpublic var length(get,never):Int;\n\tinline function get_length():Int return this.length;\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack():Array<StackItem> {\n\t\treturn NativeStackTrace.toHaxe(NativeStackTrace.callStack());\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t\tSet `fullStack` parameter to true in order to return the full exception stack.\n\n\t\tMay not work if catch type was a derivative from `haxe.Exception`.\n\t**/\n\tpublic static function exceptionStack( fullStack = false ):Array<StackItem> {\n\t\tvar eStack:CallStack = NativeStackTrace.toHaxe(NativeStackTrace.exceptionStack());\n\t\treturn (fullStack ? eStack : eStack.subtract(callStack())).asArray();\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tstatic public function toString(stack:CallStack):String {\n\t\tvar b = new StringBuf();\n\t\tfor (s in stack.asArray()) {\n\t\t\tb.add('\\nCalled from ');\n\t\t\titemToString(b, s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\t/**\n\t\tReturns a range of entries of current stack from the beginning to the the\n\t\tcommon part of this and `stack`.\n\t**/\n\tpublic function subtract(stack:CallStack):CallStack {\n\t\tvar startIndex = -1;\n\t\tvar i = -1;\n\t\twhile(++i < this.length) {\n\t\t\tfor(j in 0...stack.length) {\n\t\t\t\tif(equalItems(this[i], stack[j])) {\n\t\t\t\t\tif(startIndex < 0) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\t++i;\n\t\t\t\t\tif(i >= this.length) break;\n\t\t\t\t} else {\n\t\t\t\t\tstartIndex = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(startIndex >= 0) break;\n\t\t}\n\t\treturn startIndex >= 0 ? this.slice(0, startIndex) : this;\n\t}\n\n\t/**\n\t\tMake a copy of the stack.\n\t**/\n\tpublic inline function copy():CallStack {\n\t\treturn this.copy();\n\t}\n\n\t@:arrayAccess public inline function get(index:Int):StackItem {\n\t\treturn this[index];\n\t}\n\n\tinline function asArray():Array<StackItem> {\n\t\treturn this;\n\t}\n\n\tstatic function equalItems(item1:Null<StackItem>, item2:Null<StackItem>):Bool {\n\t\treturn switch([item1, item2]) {\n\t\t\tcase [null, null]: true;\n\t\t\tcase [CFunction, CFunction]: true;\n\t\t\tcase [Module(m1), Module(m2)]:\n\t\t\t\tm1 == m2;\n\t\t\tcase [FilePos(item1, file1, line1, col1), FilePos(item2, file2, line2, col2)]:\n\t\t\t\tfile1 == file2 && line1 == line2 && col1 == col2 && equalItems(item1, item2);\n\t\t\tcase [Method(class1, method1), Method(class2, method2)]:\n\t\t\t\tclass1 == class2 && method1 == method2;\n\t\t\tcase [LocalFunction(v1), LocalFunction(v2)]:\n\t\t\t\tv1 == v2;\n\t\t\tcase _: false;\n\t\t}\n\t}\n\n\tstatic function exceptionToString(e:Exception):String {\n\t\tif(e.previous == null) {\n\t\t\treturn 'Exception: ${e.toString()}${e.stack}';\n\t\t}\n\t\tvar result = '';\n\t\tvar e:Null<Exception> = e;\n\t\tvar prev:Null<Exception> = null;\n\t\twhile(e != null) {\n\t\t\tif(prev == null) {\n\t\t\t\tresult = 'Exception: ${e.message}${e.stack}' + result;\n\t\t\t} else {\n\t\t\t\tvar prevStack = @:privateAccess e.stack.subtract(prev.stack);\n\t\t\t\tresult = 'Exception: ${e.message}${prevStack}\\n\\nNext ' + result;\n\t\t\t}\n\t\t\tprev = e;\n\t\t\te = e.previous;\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic function itemToString(b:StringBuf, s) {\n\t\tswitch (s) {\n\t\t\tcase CFunction:\n\t\t\t\tb.add(\"a C function\");\n\t\t\tcase Module(m):\n\t\t\t\tb.add(\"module \");\n\t\t\t\tb.add(m);\n\t\t\tcase FilePos(s, file, line, col):\n\t\t\t\tif (s != null) {\n\t\t\t\t\titemToString(b, s);\n\t\t\t\t\tb.add(\" (\");\n\t\t\t\t}\n\t\t\t\tb.add(file);\n\t\t\t\tb.add(\" line \");\n\t\t\t\tb.add(line);\n\t\t\t\tif (col != null) {\n\t\t\t\t\tb.add(\" column \");\n\t\t\t\t\tb.add(col);\n\t\t\t\t}\n\t\t\t\tif (s != null)\n\t\t\t\t\tb.add(\")\");\n\t\t\tcase Method(cname, meth):\n\t\t\t\tb.add(cname == null ? \"<unknown>\" : cname);\n\t\t\t\tb.add(\".\");\n\t\t\t\tb.add(meth);\n\t\t\tcase LocalFunction(n):\n\t\t\t\tb.add(\"local function #\");\n\t\t\t\tb.add(n);\n\t\t}\n\t}\n}\n","package haxe;\n\nimport js.lib.Error;\n\n@:coreApi\nclass Exception extends NativeException {\n\tpublic var message(get,never):String;\n\tpublic var stack(get,never):CallStack;\n\tpublic var previous(get,never):Null<Exception>;\n\tpublic var native(get,never):Any;\n\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\t@:noCompletion var __skipStack:Int;\n\t@:noCompletion var __exceptionStack(get,set):Null<CallStack>;\n\t@:noCompletion var __nativeException:Any;\n\t@:noCompletion var __previousException:Null<Exception>;\n\n\tstatic function caught(value:Any):Exception {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn value;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn new Exception((cast value:Error).message, null, value);\n\t\t} else {\n\t\t\treturn new ValueException(value, null, value);\n\t\t}\n\t}\n\n\tstatic function thrown(value:Any):Any {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn (value:Exception).native;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tvar e = new ValueException(value);\n\t\t\tuntyped __feature__(\"haxe.Exception.get_stack\", e.__shiftStack());\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tpublic function new(message:String, ?previous:Exception, ?native:Any) {\n\t\tsuper(message);\n\t\t(cast this).message = message;\n\t\t__previousException = previous;\n\t\t__nativeException = native != null ? native : this;\n\t\tuntyped __feature__('haxe.Exception.stack', {\n\t\t\t__skipStack = 0;\n\t\t\tvar old = js.Syntax.code('Error.prepareStackTrace');\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = function(e) { return e.stack; }');\n\t\t\tif(Std.isOfType(native, Error)) {\n\t\t\t\t(cast this).stack = native.stack;\n\t\t\t} else {\n\t\t\t\tvar e:Error = null;\n\t\t\t\tif ((cast Error).captureStackTrace) {\n\t\t\t\t\t(cast Error).captureStackTrace(this, Exception);\n\t\t\t\t\te = cast this;\n\t\t\t\t} else {\n\t\t\t\t\te = new Error();\n\t\t\t\t\t//Internet Explorer provides call stack only if error was thrown\n\t\t\t\t\tif(js.Syntax.typeof(e.stack) == \"undefined\") {\n\t\t\t\t\t\tjs.Syntax.code('try { throw {0}; } catch(_) {}', e);\n\t\t\t\t\t\t__skipStack++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(cast this).stack = e.stack;\n\t\t\t}\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = {0}', old);\n\t\t});\n\t}\n\n\tfunction unwrap():Any {\n\t\treturn __nativeException;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n\n\tpublic function details():String {\n\t\treturn inline CallStack.exceptionToString(this);\n\t}\n\n\t@:noCompletion\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\tinline function __shiftStack():Void {\n\t\t__skipStack++;\n\t}\n\n\tfunction get_message():String {\n\t\treturn (cast this:Error).message;\n\t}\n\n\tfunction get_previous():Null<Exception> {\n\t\treturn __previousException;\n\t}\n\n\tfinal function get_native():Any {\n\t\treturn __nativeException;\n\t}\n\n\t@:ifFeature('haxe.NativeStackTrace.exceptionStack')\n\tfunction get_stack():CallStack {\n\t\treturn switch __exceptionStack {\n\t\t\tcase null:\n\t\t\t\t__exceptionStack = NativeStackTrace.toHaxe(NativeStackTrace.normalize((cast this).stack), __skipStack);\n\t\t\tcase s: s;\n\t\t}\n\t}\n\n\t@:noCompletion\n\tfunction setProperty(name:String, value:Any):Void {\n\t\ttry {\n\t\t\tjs.lib.Object.defineProperty(this, name, {value:value});\n\t\t} catch(e:Exception) {\n\t\t\tjs.Syntax.code('{0}[{1}] = {2}', this, name, value);\n\t\t}\n\t}\n\n\t@:noCompletion\n\tinline function get___exceptionStack():CallStack {\n\t\treturn (cast this).__exceptionStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___exceptionStack(value:CallStack):CallStack {\n\t\tsetProperty('__exceptionStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___skipStack():Int {\n\t\treturn (cast this).__skipStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___skipStack(value:Int):Int {\n\t\tsetProperty('__skipStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___nativeException():Any {\n\t\treturn (cast this).__nativeException;\n\t}\n\n\t@:noCompletion\n\tinline function set___nativeException(value:Any):Any {\n\t\tsetProperty('__nativeException', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___previousException():Null<Exception> {\n\t\treturn (cast this).__previousException;\n\t}\n\n\t@:noCompletion\n\tinline function set___previousException(value:Null<Exception>):Null<Exception> {\n\t\tsetProperty('__previousException', value);\n\t\treturn value;\n\t}\n}\n\n@:dox(hide)\n@:noCompletion\n@:native('Error')\nprivate extern class NativeException {\n\t// private var message:String; //redefined in haxe.Exception\n\t// private var stack(default, null):String; //redefined in haxe.Exception\n\n\tfunction new(?message:String);\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tInt32 provides a 32-bit integer with consistent overflow behavior across\n\tall platforms.\n**/\n@:transitive\nabstract Int32(Int) from Int to Int {\n\t@:op(-A) private inline function negate():Int32\n\t\treturn clamp(~this + 1);\n\n\t@:op(++A) private inline function preIncrement():Int32\n\t\treturn this = clamp(++this);\n\n\t@:op(A++) private inline function postIncrement():Int32 {\n\t\tvar ret = this++;\n\t\tthis = clamp(this);\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement():Int32\n\t\treturn this = clamp(--this);\n\n\t@:op(A--) private inline function postDecrement():Int32 {\n\t\tvar ret = this--;\n\t\tthis = clamp(this);\n\t\treturn ret;\n\t}\n\n\t@:op(A + B) private static inline function add(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) + (b : Int));\n\n\t@:op(A + B) @:commutative private static inline function addInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) + (b : Int));\n\n\t@:op(A + B) @:commutative private static function addFloat(a:Int32, b:Float):Float;\n\n\t@:op(A - B) private static inline function sub(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) - (b : Int));\n\n\t@:op(A - B) private static inline function subInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) - (b : Int));\n\n\t@:op(A - B) private static inline function intSub(a:Int, b:Int32):Int32\n\t\treturn clamp((a : Int) - (b : Int));\n\n\t@:op(A - B) private static function subFloat(a:Int32, b:Float):Float;\n\n\t@:op(A - B) private static function floatSub(a:Float, b:Int32):Float;\n\n\t#if (js || php || python || lua)\n\t#if js\n\t// on JS we want to try using Math.imul, but we have to assign that function to Int32.mul only once,\n\t// or else V8 will deoptimize it, so we need to be a bit funky with this.\n\t// See https://github.com/HaxeFoundation/haxe/issues/5367 for benchmarks.\n\t@:op(A * B) inline static function mul(a:Int32, b:Int32):Int32\n\t\treturn _mul(a, b);\n\n\tstatic var _mul:Int32->Int32->Int32 = untyped if (Math.imul != null)\n\t\t\tMath.imul\n\t\telse\n\t\t\tfunction(a:Int32, b:Int32):Int32 return clamp((a : Int) * ((b : Int) & 0xFFFF) + clamp((a : Int) * ((b : Int) >>> 16) << 16));\n\t#else\n\t@:op(A * B) private static function mul(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) * ((b : Int) & 0xFFFF) + clamp((a : Int) * ((b : Int) >>> 16) << 16));\n\t#end\n\n\t@:op(A * B) @:commutative private static inline function mulInt(a:Int32, b:Int):Int32\n\t\treturn mul(a, b);\n\t#else\n\t@:op(A * B) private static function mul(a:Int32, b:Int32):Int32;\n\n\t@:op(A * B) @:commutative private static function mulInt(a:Int32, b:Int):Int32;\n\t#end\n\n\t@:op(A * B) @:commutative private static function mulFloat(a:Int32, b:Float):Float;\n\n\t@:op(A / B) private static function div(a:Int32, b:Int32):Float;\n\n\t@:op(A / B) private static function divInt(a:Int32, b:Int):Float;\n\n\t@:op(A / B) private static function intDiv(a:Int, b:Int32):Float;\n\n\t@:op(A / B) private static function divFloat(a:Int32, b:Float):Float;\n\n\t@:op(A / B) private static function floatDiv(a:Float, b:Int32):Float;\n\n\t@:op(A % B) private static function mod(a:Int32, b:Int32):Int32;\n\n\t@:op(A % B) private static function modInt(a:Int32, b:Int):Int;\n\n\t@:op(A % B) private static function intMod(a:Int, b:Int32):Int;\n\n\t@:op(A % B) private static function modFloat(a:Int32, b:Float):Float;\n\n\t@:op(A % B) private static function floatMod(a:Float, b:Int32):Float;\n\n\t@:op(A == B) private static function eq(a:Int32, b:Int32):Bool;\n\n\t@:op(A == B) @:commutative private static function eqInt(a:Int32, b:Int):Bool;\n\n\t@:op(A == B) @:commutative private static function eqFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A != B) private static function neq(a:Int32, b:Int32):Bool;\n\n\t@:op(A != B) @:commutative private static function neqInt(a:Int32, b:Int):Bool;\n\n\t@:op(A != B) @:commutative private static function neqFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A < B) private static function lt(a:Int32, b:Int32):Bool;\n\n\t@:op(A < B) private static function ltInt(a:Int32, b:Int):Bool;\n\n\t@:op(A < B) private static function intLt(a:Int, b:Int32):Bool;\n\n\t@:op(A < B) private static function ltFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A < B) private static function floatLt(a:Float, b:Int32):Bool;\n\n\t@:op(A <= B) private static function lte(a:Int32, b:Int32):Bool;\n\n\t@:op(A <= B) private static function lteInt(a:Int32, b:Int):Bool;\n\n\t@:op(A <= B) private static function intLte(a:Int, b:Int32):Bool;\n\n\t@:op(A <= B) private static function lteFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A <= B) private static function floatLte(a:Float, b:Int32):Bool;\n\n\t@:op(A > B) private static function gt(a:Int32, b:Int32):Bool;\n\n\t@:op(A > B) private static function gtInt(a:Int32, b:Int):Bool;\n\n\t@:op(A > B) private static function intGt(a:Int, b:Int32):Bool;\n\n\t@:op(A > B) private static function gtFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A > B) private static function floatGt(a:Float, b:Int32):Bool;\n\n\t@:op(A >= B) private static function gte(a:Int32, b:Int32):Bool;\n\n\t@:op(A >= B) private static function gteInt(a:Int32, b:Int):Bool;\n\n\t@:op(A >= B) private static function intGte(a:Int, b:Int32):Bool;\n\n\t@:op(A >= B) private static function gteFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A >= B) private static function floatGte(a:Float, b:Int32):Bool;\n\n\t#if (lua || python || php)\n\t@:op(~A) private static inline function complement(a:Int32):Int32\n\t\t#if lua return lua.Boot.clampInt32(~a); #else return clamp(~a); #end\n\t#else\n\t@:op(~A) private function complement():Int32;\n\t#end\n\n\t@:op(A & B) private static function and(a:Int32, b:Int32):Int32;\n\n\t@:op(A & B) @:commutative private static function andInt(a:Int32, b:Int):Int32;\n\n\t#if (lua || python || php)\n\t@:op(A | B) private static #if (python || php) inline #end function or(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) | (b : Int));\n\n\t@:op(A | B) @:commutative private #if (python || php) inline #end static function orInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) | b);\n\t#else\n\t@:op(A | B) private static function or(a:Int32, b:Int32):Int32;\n\n\t@:op(A | B) @:commutative private static function orInt(a:Int32, b:Int):Int32;\n\t#end\n\n\t#if (lua || python || php)\n\t@:op(A ^ B) private static #if (python || php) inline #end function xor(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) ^ (b : Int));\n\n\t@:op(A ^ B) @:commutative private static #if (python || php) inline #end function xorInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) ^ b);\n\t#else\n\t@:op(A ^ B) private static function xor(a:Int32, b:Int32):Int32;\n\n\t@:op(A ^ B) @:commutative private static function xorInt(a:Int32, b:Int):Int32;\n\t#end\n\n\t#if (lua || python || php)\n\t@:op(A >> B) private static #if (python || php) inline #end function shr(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) >> (b : Int));\n\n\t@:op(A >> B) private static #if (python || php) inline #end function shrInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) >> b);\n\n\t@:op(A >> B) private static #if (python || php) inline #end function intShr(a:Int, b:Int32):Int32\n\t\treturn clamp(a >> (b : Int));\n\t#else\n\t@:op(A >> B) private static function shr(a:Int32, b:Int32):Int32;\n\n\t@:op(A >> B) private static function shrInt(a:Int32, b:Int):Int32;\n\n\t@:op(A >> B) private static function intShr(a:Int, b:Int32):Int32;\n\t#end\n\n\t@:op(A >>> B) private static function ushr(a:Int32, b:Int32):Int32;\n\n\t@:op(A >>> B) private static function ushrInt(a:Int32, b:Int):Int32;\n\n\t@:op(A >>> B) private static function intUshr(a:Int, b:Int32):Int32;\n\n\t#if (php || python || lua)\n\t// PHP may be 64-bit, so shifts must be clamped\n\t@:op(A << B) private static inline function shl(a:Int32, b:Int32):Int32\n\t\treturn clamp((a : Int) << (b : Int));\n\n\t@:op(A << B) private static inline function shlInt(a:Int32, b:Int):Int32\n\t\treturn clamp((a : Int) << b);\n\n\t@:op(A << B) private static inline function intShl(a:Int, b:Int32):Int32\n\t\treturn clamp(a << (b : Int));\n\t#else\n\t@:op(A << B) private static function shl(a:Int32, b:Int32):Int32;\n\n\t@:op(A << B) private static function shlInt(a:Int32, b:Int):Int32;\n\n\t@:op(A << B) private static function intShl(a:Int, b:Int32):Int32;\n\t#end\n\n\t@:to private inline function toFloat():Float\n\t\treturn this;\n\n\t/**\n\t\tCompare `a` and `b` in unsigned mode.\n\t**/\n\tpublic static function ucompare(a:Int32, b:Int32):Int {\n\t\tif (a < 0)\n\t\t\treturn b < 0 ? (~b - ~a) : 1;\n\t\treturn b < 0 ? -1 : (a - b);\n\t}\n\n\t#if php\n\tstatic var extraBits:Int = php.Const.PHP_INT_SIZE * 8 - 32;\n\t#end\n\n\t#if !lua\n\tinline\n\t#end\n\tstatic function clamp(x:Int):Int {\n\t\t// force to-int conversion on platforms that require it\n\t\t#if js\n\t\treturn x | 0;\n\t\t#elseif php\n\t\t// we might be on 64-bit php, so sign extend from 32-bit\n\t\treturn (x << extraBits) >> extraBits;\n\t\t#elseif python\n\t\treturn (python.Syntax.code(\"{0} % {1}\", (x + python.Syntax.opPow(2, 31)), python.Syntax.opPow(2, 32)) : Int) - python.Syntax.opPow(2, 31);\n\t\t#elseif lua\n\t\treturn lua.Boot.clampInt32(x);\n\t\t#else\n\t\treturn (x);\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\nusing haxe.Int64;\n\nimport StringTools;\n\n/**\n\tHelper for parsing to `Int64` instances.\n**/\nclass Int64Helper {\n\t/**\n\t\tCreate `Int64` from given string.\n\t**/\n\tpublic static function parseString(sParam:String):Int64 {\n\t\tvar base = Int64.ofInt(10);\n\t\tvar current = Int64.ofInt(0);\n\t\tvar multiplier = Int64.ofInt(1);\n\t\tvar sIsNegative = false;\n\n\t\tvar s = StringTools.trim(sParam);\n\t\tif (s.charAt(0) == \"-\") {\n\t\t\tsIsNegative = true;\n\t\t\ts = s.substring(1, s.length);\n\t\t}\n\t\tvar len = s.length;\n\n\t\tfor (i in 0...len) {\n\t\t\tvar digitInt = s.charCodeAt(len - 1 - i) - '0'.code;\n\n\t\t\tif (digitInt < 0 || digitInt > 9) {\n\t\t\t\tthrow \"NumberFormatError\";\n\t\t\t}\n\n\t\t\tif (digitInt != 0) {\n\t\t\t\tvar digit:Int64 = Int64.ofInt(digitInt);\n\t\t\t\tif (sIsNegative) {\n\t\t\t\t\tcurrent = Int64.sub(current, Int64.mul(multiplier, digit));\n\t\t\t\t\tif (!Int64.isNeg(current)) {\n\t\t\t\t\t\tthrow \"NumberFormatError: Underflow\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcurrent = Int64.add(current, Int64.mul(multiplier, digit));\n\t\t\t\t\tif (Int64.isNeg(current)) {\n\t\t\t\t\t\tthrow \"NumberFormatError: Overflow\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmultiplier = Int64.mul(multiplier, base);\n\t\t}\n\t\treturn current;\n\t}\n\n\t/**\n\t\tCreate `Int64` from given float.\n\t**/\n\tpublic static function fromFloat(f:Float):Int64 {\n\t\tif (Math.isNaN(f) || !Math.isFinite(f)) {\n\t\t\tthrow \"Number is NaN or Infinite\";\n\t\t}\n\n\t\tvar noFractions = f - (f % 1);\n\n\t\t// 2^53-1 and -2^53+1: these are parsable without loss of precision.\n\t\t// In theory 2^53 and -2^53 are parsable too, but then there's no way to\n\t\t// distinguish 2^53 from 2^53+1\n\t\t// (i.e. trace(9007199254740992. + 1. > 9007199254740992.); // false!)\n\t\tif (noFractions > 9007199254740991) {\n\t\t\tthrow \"Conversion overflow\";\n\t\t}\n\t\tif (noFractions < -9007199254740991) {\n\t\t\tthrow \"Conversion underflow\";\n\t\t}\n\n\t\tvar result = Int64.ofInt(0);\n\t\tvar neg = noFractions < 0;\n\t\tvar rest = neg ? -noFractions : noFractions;\n\n\t\tvar i = 0;\n\t\twhile (rest >= 1) {\n\t\t\tvar curr = rest % 2;\n\t\t\trest = rest / 2;\n\t\t\tif (curr >= 1) {\n\t\t\t\tresult = Int64.add(result, Int64.shl(Int64.ofInt(1), i));\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tif (neg) {\n\t\t\tresult = Int64.neg(result);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tLog primarily provides the `trace()` method, which is invoked upon a call to\n\t`trace()` in Haxe code.\n**/\nclass Log {\n\t/**\n\t\tFormat the output of `trace` before printing it.\n\t**/\n\tpublic static function formatOutput(v:Dynamic, infos:Null<PosInfos>):String {\n\t\tvar str = Std.string(v);\n\t\tif (infos == null)\n\t\t\treturn str;\n\t\tvar pstr = infos.fileName + \":\" + infos.lineNumber;\n\t\tif (infos.customParams != null)\n\t\t\tfor (v in infos.customParams)\n\t\t\t\tstr += \", \" + Std.string(v);\n\t\treturn pstr + \": \" + str;\n\t}\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the `trace()` call was made.\n\n\t\tThis method can be rebound to a custom function:\n\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v, ?infos) {\n\t\t\t  // handle trace\n\t\t\t}\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to `trace()` will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace(v:Dynamic, ?infos:PosInfos):Void {\n\t\tvar str = formatOutput(v, infos);\n\t\t#if js\n\t\tif (js.Syntax.typeof(untyped console) != \"undefined\" && (untyped console).log != null)\n\t\t\t(untyped console).log(str);\n\t\t#elseif lua\n\t\tuntyped __define_feature__(\"use._hx_print\", _hx_print(str));\n\t\t#elseif sys\n\t\tSys.println(str);\n\t\t#else\n\t\tthrow new haxe.exceptions.NotImplementedException()\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n#if (target.threaded && !cppia)\nimport sys.thread.Thread;\nimport sys.thread.EventLoop;\n#end\n\n/**\n\tThe `Timer` class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the `Timer` class with a given\n\tinterval, set its `run()` method to a custom function to be invoked and\n\teventually call `stop()` to stop the `Timer`.\n\n\tNote that a running `Timer` may or may not prevent the program to exit\n\tautomatically when `main()` returns.\n\n\tIt is also possible to extend this class and override its `run()` method in\n\tthe child class.\n\n\tNotice for threaded targets:\n\t`Timer` instances require threads they were created in to run with Haxe's event loops.\n\tMain thread of a Haxe program always contains an event loop. For other cases use \n\t`sys.thread.Thread.createWithEventLoop` and `sys.thread.Thread.runWithEventLoop` methods.\n**/\nclass Timer {\n\t#if (flash || js)\n\tprivate var id:Null<Int>;\n\t#elseif (target.threaded && !cppia)\n\tvar thread:Thread;\n\tvar eventHandler:EventHandler;\n\t#else\n\tprivate var event:MainLoop.MainEvent;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new(time_ms:Int) {\n\t\t#if flash\n\t\tvar me = this;\n\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() {\n\t\t\tme.run();\n\t\t}, time_ms);\n\t\t#elseif js\n\t\tvar me = this;\n\t\tid = untyped setInterval(function() me.run(), time_ms);\n\t\t#elseif (target.threaded && !cppia)\n\t\tthread = Thread.current();\n\t\teventHandler = thread.events.repeat(() -> this.run(), time_ms);\n\t\t#else\n\t\tvar dt = time_ms / 1000;\n\t\tevent = MainLoop.add(function() {\n\t\t\t@:privateAccess event.nextRun += dt;\n\t\t\trun();\n\t\t});\n\t\tevent.delay(dt);\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\tif (id == null)\n\t\t\treturn;\n\t\t#if flash\n\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t#elseif js\n\t\tuntyped clearInterval(id);\n\t\t#end\n\t\tid = null;\n\t\t#elseif (target.threaded && !cppia)\n\t\tthread.events.cancel(eventHandler);\n\t\t#else\n\t\tif (event != null) {\n\t\t\tevent.stop();\n\t\t\tevent = null;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\n\t\t```haxe\n\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\ttimer.run = function() { ... }\n\t\t```\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its `run()` method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is `null`, the result is unspecified.\n\t**/\n\tpublic static function delay(f:Void->Void, time_ms:Int) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\t`Timer.stamp()` before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to `Log.trace()`, with `\"s\"` appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is `null`, the result is unspecified.\n\t**/\n\tpublic static function measure<T>(f:Void->T, ?pos:PosInfos):T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static inline function stamp():Float {\n\t\t#if flash\n\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif js\n\t\t#if nodejs\n\t\tvar hrtime = js.Syntax.code('process.hrtime()'); // [seconds, remaining nanoseconds]\n\t\treturn hrtime[0] + hrtime[1] / 1e9;\n\t\t#else\n\t\treturn @:privateAccess HxOverrides.now() / 1000;\n\t\t#end\n\t\t#elseif cpp\n\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif python\n\t\treturn Sys.cpuTime();\n\t\t#elseif sys\n\t\treturn Sys.time();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t}\n}","package haxe;\n\n/**\n\tAn exception containing arbitrary value.\n\n\tThis class is automatically used for throwing values, which don't extend `haxe.Exception`\n\tor native exception type.\n\tFor example:\n\t```haxe\n\tthrow \"Terrible error\";\n\t```\n\twill be compiled to\n\t```haxe\n\tthrow new ValueException(\"Terrible error\");\n\t```\n**/\nclass ValueException extends Exception {\n\t/**\n\t\tThrown value.\n\t**/\n\tpublic var value(default, null):Any;\n\n\tpublic function new(value:Any, ?previous:Exception, ?native:Any):Void {\n\t\tsuper(#if js js.Syntax.code('String({0})', value) #else Std.string(value) #end, previous, native);\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t\tExtract an originally thrown value.\n\n\t\tThis method must return the same value on subsequent calls.\n\t\tUsed internally for catching non-native exceptions.\n\t\tDo _not_ override unless you know what you are doing.\n\t**/\n\toverride function unwrap():Any {\n\t\treturn value;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.crypto;\n\n/**\n\tCreates a Sha1 of a String.\n**/\nclass Sha1 {\n\tpublic static function encode(s:String):String {\n\t\tvar sh = new Sha1();\n\t\tvar h = sh.doEncode(str2blks(s));\n\t\treturn sh.hex(h);\n\t}\n\n\tpublic static function make(b:haxe.io.Bytes):haxe.io.Bytes {\n\t\tvar h = new Sha1().doEncode(bytes2blks(b));\n\t\tvar out = haxe.io.Bytes.alloc(20);\n\t\tvar p = 0;\n\t\tfor (i in 0...5) {\n\t\t\tout.set(p++, h[i] >>> 24);\n\t\t\tout.set(p++, (h[i] >> 16) & 0xFF);\n\t\t\tout.set(p++, (h[i] >> 8) & 0xFF);\n\t\t\tout.set(p++, h[i] & 0xFF);\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction new() {}\n\n\tfunction doEncode(x:Array<Int>):Array<Int> {\n\t\tvar w = new Array<Int>();\n\n\t\tvar a = 0x67452301;\n\t\tvar b = 0xEFCDAB89;\n\t\tvar c = 0x98BADCFE;\n\t\tvar d = 0x10325476;\n\t\tvar e = 0xC3D2E1F0;\n\n\t\tvar i = 0;\n\t\twhile (i < x.length) {\n\t\t\tvar olda = a;\n\t\t\tvar oldb = b;\n\t\t\tvar oldc = c;\n\t\t\tvar oldd = d;\n\t\t\tvar olde = e;\n\n\t\t\tvar j = 0;\n\t\t\twhile (j < 80) {\n\t\t\t\tif (j < 16)\n\t\t\t\t\tw[j] = x[i + j];\n\t\t\t\telse\n\t\t\t\t\tw[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n\t\t\t\tvar t = rol(a, 5) + ft(j, b, c, d) + e + w[j] + kt(j);\n\t\t\t\te = d;\n\t\t\t\td = c;\n\t\t\t\tc = rol(b, 30);\n\t\t\t\tb = a;\n\t\t\t\ta = t;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ta += olda;\n\t\t\tb += oldb;\n\t\t\tc += oldc;\n\t\t\td += oldd;\n\t\t\te += olde;\n\t\t\ti += 16;\n\t\t}\n\t\treturn [a, b, c, d, e];\n\t}\n\n\t/**\n\t\tConvert a string to a sequence of 16-word blocks, stored as an array.\n\t\tAppend padding bits and the length, as described in the SHA1 standard.\n\t**/\n\tstatic function str2blks(s:String):Array<Int> {\n\t\t#if target.unicode\n\t\tvar s = haxe.io.Bytes.ofString(s);\n\t\t#end\n\t\tvar nblk = ((s.length + 8) >> 6) + 1;\n\t\tvar blks = new Array<Int>();\n\n\t\tfor (i in 0...nblk * 16)\n\t\t\tblks[i] = 0;\n\t\tfor (i in 0...s.length) {\n\t\t\tvar p = i >> 2;\n\t\t\tblks[p] |= #if target.unicode s.get(i) #else StringTools.fastCodeAt(s, i) #end << (24 - ((i & 3) << 3));\n\t\t}\n\t\tvar i = s.length;\n\t\tvar p = i >> 2;\n\t\tblks[p] |= 0x80 << (24 - ((i & 3) << 3));\n\t\tblks[nblk * 16 - 1] = s.length * 8;\n\t\treturn blks;\n\t}\n\n\tstatic function bytes2blks(b:haxe.io.Bytes):Array<Int> {\n\t\tvar nblk = ((b.length + 8) >> 6) + 1;\n\t\tvar blks = new Array<Int>();\n\n\t\tfor (i in 0...nblk * 16)\n\t\t\tblks[i] = 0;\n\t\tfor (i in 0...b.length) {\n\t\t\tvar p = i >> 2;\n\t\t\tblks[p] |= b.get(i) << (24 - ((i & 3) << 3));\n\t\t}\n\t\tvar i = b.length;\n\t\tvar p = i >> 2;\n\t\tblks[p] |= 0x80 << (24 - ((i & 3) << 3));\n\t\tblks[nblk * 16 - 1] = b.length * 8;\n\t\treturn blks;\n\t}\n\n\t/**\n\t\tBitwise rotate a 32-bit number to the left\n\t**/\n\tinline function rol(num:Int, cnt:Int):Int {\n\t\treturn (num << cnt) | (num >>> (32 - cnt));\n\t}\n\n\t/**\n\t\tPerform the appropriate triplet combination function for the current iteration\n\t**/\n\tfunction ft(t:Int, b:Int, c:Int, d:Int):Int {\n\t\tif (t < 20)\n\t\t\treturn (b & c) | ((~b) & d);\n\t\tif (t < 40)\n\t\t\treturn b ^ c ^ d;\n\t\tif (t < 60)\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\treturn b ^ c ^ d;\n\t}\n\n\t/**\n\t\tDetermine the appropriate additive constant for the current iteration\n\t**/\n\tfunction kt(t:Int):Int {\n\t\tif (t < 20)\n\t\t\treturn 0x5A827999;\n\t\tif (t < 40)\n\t\t\treturn 0x6ED9EBA1;\n\t\tif (t < 60)\n\t\t\treturn 0x8F1BBCDC;\n\t\treturn 0xCA62C1D6;\n\t}\n\n\tfunction hex(a:Array<Int>) {\n\t\tvar str = \"\";\n\t\tfor (num in a) {\n\t\t\tstr += StringTools.hex(num, 8);\n\t\t}\n\t\treturn str.toLowerCase();\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tBalancedTree allows key-value mapping with arbitrary keys, as long as they\n\tcan be ordered. By default, `Reflect.compare` is used in the `compare`\n\tmethod, which can be overridden in subclasses.\n\n\tOperations have a logarithmic average and worst-case cost.\n\n\tIteration over keys and values, using `keys` and `iterator` respectively,\n\tare in-order.\n**/\nclass BalancedTree<K, V> implements haxe.Constraints.IMap<K, V> {\n\tvar root:TreeNode<K, V>;\n\n\t/**\n\t\tCreates a new BalancedTree, which is initially empty.\n\t**/\n\tpublic function new() {}\n\n\t/**\n\t\tBinds `key` to `value`.\n\n\t\tIf `key` is already bound to a value, that binding disappears.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function set(key:K, value:V) {\n\t\troot = setLoop(key, value, root);\n\t}\n\n\t/**\n\t\tReturns the value `key` is bound to.\n\n\t\tIf `key` is not bound to any value, `null` is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function get(key:K):Null<V> {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0)\n\t\t\t\treturn node.value;\n\t\t\tif (c < 0)\n\t\t\t\tnode = node.left;\n\t\t\telse\n\t\t\t\tnode = node.right;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tRemoves the current binding of `key`.\n\n\t\tIf `key` has no binding, `this` BalancedTree is unchanged and false is\n\t\treturned.\n\n\t\tOtherwise the binding of `key` is removed and true is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function remove(key:K) {\n\t\ttry {\n\t\t\troot = removeLoop(key, root);\n\t\t\treturn true;\n\t\t} catch (e:String) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t\tTells if `key` is bound to a value.\n\n\t\tThis method returns true even if `key` is bound to null.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function exists(key:K) {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0)\n\t\t\t\treturn true;\n\t\t\telse if (c < 0)\n\t\t\t\tnode = node.left;\n\t\t\telse\n\t\t\t\tnode = node.right;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tIterates over the bound values of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function iterator():Iterator<V> {\n\t\tvar ret = [];\n\t\titeratorLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tSee `Map.keyValueIterator`\n\t**/\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<K, V> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\t/**\n\t\tIterates over the keys of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function keys():Iterator<K> {\n\t\tvar ret = [];\n\t\tkeysLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\tpublic function copy():BalancedTree<K, V> {\n\t\tvar copied = new BalancedTree<K, V>();\n\t\tcopied.root = root;\n\t\treturn copied;\n\t}\n\n\tfunction setLoop(k:K, v:V, node:TreeNode<K, V>) {\n\t\tif (node == null)\n\t\t\treturn new TreeNode<K, V>(null, k, v, null);\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) new TreeNode<K, V>(node.left, k, v, node.right, node.get_height()); else if (c < 0) {\n\t\t\tvar nl = setLoop(k, v, node.left);\n\t\t\tbalance(nl, node.key, node.value, node.right);\n\t\t} else {\n\t\t\tvar nr = setLoop(k, v, node.right);\n\t\t\tbalance(node.left, node.key, node.value, nr);\n\t\t}\n\t}\n\n\tfunction removeLoop(k:K, node:TreeNode<K, V>) {\n\t\tif (node == null)\n\t\t\tthrow \"Not_found\";\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) merge(node.left,\n\t\t\tnode.right); else if (c < 0) balance(removeLoop(k, node.left), node.key, node.value,\n\t\t\tnode.right); else balance(node.left, node.key, node.value, removeLoop(k, node.right));\n\t}\n\n\tstatic function iteratorLoop<K,V>(node:TreeNode<K, V>, acc:Array<V>) {\n\t\tif (node != null) {\n\t\t\titeratorLoop(node.left, acc);\n\t\t\tacc.push(node.value);\n\t\t\titeratorLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction keysLoop(node:TreeNode<K, V>, acc:Array<K>) {\n\t\tif (node != null) {\n\t\t\tkeysLoop(node.left, acc);\n\t\t\tacc.push(node.key);\n\t\t\tkeysLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction merge(t1, t2) {\n\t\tif (t1 == null)\n\t\t\treturn t2;\n\t\tif (t2 == null)\n\t\t\treturn t1;\n\t\tvar t = minBinding(t2);\n\t\treturn balance(t1, t.key, t.value, removeMinBinding(t2));\n\t}\n\n\tfunction minBinding(t:TreeNode<K, V>) {\n\t\treturn if (t == null) throw \"Not_found\"; else if (t.left == null) t; else minBinding(t.left);\n\t}\n\n\tfunction removeMinBinding(t:TreeNode<K, V>) {\n\t\treturn if (t.left == null) t.right; else balance(removeMinBinding(t.left), t.key, t.value, t.right);\n\t}\n\n\tfunction balance(l:TreeNode<K, V>, k:K, v:V, r:TreeNode<K, V>):TreeNode<K, V> {\n\t\tvar hl = l.get_height();\n\t\tvar hr = r.get_height();\n\t\treturn if (hl > hr + 2) {\n\t\t\tif (l.left.get_height() >= l.right.get_height())\n\t\t\t\tnew TreeNode<K, V>(l.left, l.key, l.value, new TreeNode<K, V>(l.right, k, v, r));\n\t\t\telse\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l.left, l.key, l.value, l.right.left), l.right.key, l.right.value,\n\t\t\t\t\tnew TreeNode<K, V>(l.right.right, k, v, r));\n\t\t} else if (hr > hl + 2) {\n\t\t\tif (r.right.get_height() > r.left.get_height())\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l, k, v, r.left), r.key, r.value, r.right);\n\t\t\telse\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l, k, v, r.left.left), r.left.key, r.left.value,\n\t\t\t\t\tnew TreeNode<K, V>(r.left.right, r.key, r.value, r.right));\n\t\t} else {\n\t\t\tnew TreeNode<K, V>(l, k, v, r, (hl > hr ? hl : hr) + 1);\n\t\t}\n\t}\n\n\tfunction compare(k1:K, k2:K) {\n\t\treturn Reflect.compare(k1, k2);\n\t}\n\n\tpublic function toString() {\n\t\treturn root == null ? \"[]\" : '[${root.toString()}]';\n\t}\n\n\t/**\n\t\tRemoves all keys from `this` BalancedTree.\n\t**/\n\tpublic function clear():Void {\n\t\troot = null;\n\t}\n}\n\n/**\n\tA tree node of `haxe.ds.BalancedTree`.\n**/\nclass TreeNode<K, V> {\n\tpublic var left:TreeNode<K, V>;\n\tpublic var right:TreeNode<K, V>;\n\tpublic var key:K;\n\tpublic var value:V;\n\n\tvar _height:Int;\n\n\tpublic function new(l, k, v, r, h = -1) {\n\t\tleft = l;\n\t\tkey = k;\n\t\tvalue = v;\n\t\tright = r;\n\t\tif (h == -1)\n\t\t\t_height = (left.get_height() > right.get_height() ? left.get_height() : right.get_height()) + 1;\n\t\telse\n\t\t\t_height = h;\n\t}\n\n\textern public inline function get_height()\n\t\treturn this == null ? 0 : _height;\n\n\tpublic function toString() {\n\t\treturn (left == null ? \"\" : left.toString() + \", \") + '$key => $value' + (right == null ? \"\" : \", \" + right.toString());\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tEnumValueMap allows mapping of enum value keys to arbitrary values.\n\n\tKeys are compared by value and recursively over their parameters. If any\n\tparameter is not an enum value, `Reflect.compare` is used to compare them.\n**/\nclass EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements haxe.Constraints.IMap<K, V> {\n\toverride function compare(k1:EnumValue, k2:EnumValue):Int {\n\t\tvar d = k1.getIndex() - k2.getIndex();\n\t\tif (d != 0)\n\t\t\treturn d;\n\t\t#if hl\n\t\tvar a1 = @:privateAccess Type._enumParameters(k1);\n\t\tvar a2 = @:privateAccess Type._enumParameters(k2);\n\t\tvar ld = a1.length - a2.length;\n\t\tif (ld != 0)\n\t\t\treturn ld;\n\t\tfor (i in 0...a1.length) {\n\t\t\tvar d = compareArg(a1[i], a2[i]);\n\t\t\tif (d != 0)\n\t\t\t\treturn d;\n\t\t}\n\t\treturn 0;\n\t\t#else\n\t\tvar p1 = k1.getParameters();\n\t\tvar p2 = k2.getParameters();\n\t\tif (p1.length == 0 && p2.length == 0)\n\t\t\treturn 0;\n\t\treturn compareArgs(p1, p2);\n\t\t#end\n\t}\n\n\tfunction compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {\n\t\tvar ld = a1.length - a2.length;\n\t\tif (ld != 0)\n\t\t\treturn ld;\n\t\tfor (i in 0...a1.length) {\n\t\t\tvar d = compareArg(a1[i], a2[i]);\n\t\t\tif (d != 0)\n\t\t\t\treturn d;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction compareArg(v1:Dynamic, v2:Dynamic):Int {\n\t\treturn if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\n\t\t\tcompare(v1, v2);\n\t\t} else if (Std.isOfType(v1, Array) && Std.isOfType(v2, Array)) {\n\t\t\tcompareArgs(v1, v2);\n\t\t} else {\n\t\t\tReflect.compare(v1, v2);\n\t\t}\n\t}\n\n\toverride function copy():EnumValueMap<K, V> {\n\t\tvar copied = new EnumValueMap<K, V>();\n\t\tcopied.root = root;\n\t\treturn copied;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\tprivate var h:ListNode<T>;\n\tprivate var q:ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default, null):Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add(item:T) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif (h == null)\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push(item:T) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif (q == null)\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first():Null<T> {\n\t\treturn if (h == null) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last():Null<T> {\n\t\treturn if (q == null) null else q.item;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop():Null<T> {\n\t\tif (h == null)\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif (h == null)\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty():Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear():Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurrence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove(v:T):Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tif (l.item == v) {\n\t\t\t\tif (prev == null)\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif (q == l)\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator():ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns an iterator of the List indices and values.\n\t**/\n\t@:pure @:runtime public inline function keyValueIterator():ListKeyValueIterator<T> {\n\t\treturn new ListKeyValueIterator(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile (l != null) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep:String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter(f:T->Bool) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif (f(v))\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f:T->X):List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get, set):T;\n\tvar next(get, set):ListNode<T>;\n\tprivate inline function get_item():T\n\t\treturn this[0];\n\tprivate inline function set_item(v:T):T\n\t\treturn this[0] = v;\n\tprivate inline function get_next():ListNode<T>\n\t\treturn this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T>\n\t\treturn this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\n\textern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n\nprivate class ListKeyValueIterator<T> {\n\tvar idx:Int;\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t\tthis.idx = 0;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():{key:Int, value:T} {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn {value: val, key: idx++};\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\nimport js.Syntax;\nimport js.Lib;\n\n#if (js_es >= 6)\n@:coreApi\nclass ObjectMap<K:{}, V> implements haxe.Constraints.IMap<K, V> {\n\tprivate var m:js.lib.Map<K, V>;\n\n\tpublic inline function new():Void {\n\t\tm = new js.lib.Map();\n\t}\n\n\tpublic inline function set(key:K, value:V):Void {\n\t\tm.set(key, value);\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn m.get(key);\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn m.has(key);\n\t}\n\n\tpublic inline function remove(key:K):Bool {\n\t\treturn m.delete(key);\n\t}\n\n\tpublic inline function keys():Iterator<K> {\n\t\treturn new js.lib.HaxeIterator(m.keys());\n\t}\n\n\tpublic inline function iterator():Iterator<V> {\n\t\treturn m.iterator();\n\t}\n\n\tpublic inline function keyValueIterator():KeyValueIterator<K, V> {\n\t\treturn m.keyValueIterator();\n\t}\n\n\tpublic inline function copy():ObjectMap<K, V> {\n\t\tvar copied = new ObjectMap();\n\t\tcopied.m = new js.lib.Map(m);\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar it = keyValueIterator();\n\t\tfor (i in it) {\n\t\t\ts.add(Std.string(i.key));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(i.value));\n\t\t\tif (it.hasNext())\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\tm.clear();\n\t}\n}\n#else\n@:coreApi\nclass ObjectMap<K:{}, V> implements haxe.Constraints.IMap<K, V> {\n\tstatic inline function assignId(obj:{}):Int {\n\t\treturn Syntax.code('({0}.__id__ = {1})', obj, Lib.getNextHaxeUID());\n\t}\n\n\tstatic inline function getId(obj:{}):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h:{__keys__:{}};\n\n\tpublic function new():Void {\n\t\th = {__keys__: {}};\n\t}\n\n\tpublic function set(key:K, value:V):Void {\n\t\tvar id = getId(key);\n\t\tif(id == null) {\n\t\t\tid = assignId(key);\n\t\t}\n\t\tSyntax.code('{0}[{1}] = {2}', h, id, value);\n\t\tSyntax.code('{0}[{1}] = {2}', h.__keys__, id, key);\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove(key:K):Bool {\n\t\tvar id = getId(key);\n\t\tif (untyped h.__keys__[id] == null)\n\t\t\treturn false;\n\t\tjs.Syntax.delete(h, id);\n\t\tjs.Syntax.delete(h.__keys__, id);\n\t\treturn true;\n\t}\n\n\tpublic function keys():Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\tjs.Syntax.code(\"for( var key in this.h.__keys__ ) {\");\n\t\t\tif (h.hasOwnProperty(key))\n\t\t\t\ta.push(h.__keys__[key]);\n\t\t\tjs.Syntax.code(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator():Iterator<V> {\n\t\treturn untyped {\n\t\t\tref: h,\n\t\t\tit: keys(),\n\t\t\thasNext: function() {\n\t\t\t\treturn __this__.it.hasNext();\n\t\t\t},\n\t\t\tnext: function() {\n\t\t\t\tvar i = __this__.it.next();\n\t\t\t\treturn __this__.ref[getId(i)];\n\t\t\t}\n\t\t};\n\t}\n\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<K, V> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\tpublic function copy():ObjectMap<K, V> {\n\t\tvar copied = new ObjectMap();\n\t\tfor (key in keys())\n\t\t\tcopied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"[\");\n\t\tvar it = keys();\n\t\tfor (i in it) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif (it.hasNext())\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"]\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = {__keys__: {}};\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\t`ReadOnlyArray` is an abstract over an ordinary `Array` which only exposes\n\tAPIs that don't modify the instance, hence \"read-only\".\n\n\tNote that this doesn't necessarily mean that the instance is *immutable*.\n\tOther code holding a reference to the underlying `Array` can still modify it,\n\tand the reference can be obtained with a `cast`.\n**/\n@:forward(copy, filter, indexOf, iterator, keyValueIterator, join, lastIndexOf, map, slice, contains, toString)\nabstract ReadOnlyArray<T>(Array<T>) from Array<T> to Iterable<T> {\n\t/**\n\t\tThe length of `this` Array.\n\t**/\n\tpublic var length(get, never):Int;\n\n\tinline function get_length()\n\t\treturn this.length;\n\n\t@:arrayAccess inline function get(i:Int)\n\t\treturn this[i];\n\n\t/**\n\t\tReturns a new Array by appending the elements of `a` to the elements of\n\t\t`this` Array.\n\n\t\tThis operation does not modify `this` Array.\n\n\t\tIf `a` is the empty Array `[]`, a copy of `this` Array is returned.\n\n\t\tThe length of the returned Array is equal to the sum of `this.length`\n\t\tand `a.length`.\n\n\t\tIf `a` is `null`, the result is unspecified.\n\t**/\n\tpublic inline function concat(a:ReadOnlyArray<T>):Array<T> {\n\t\treturn this.concat(cast a);\n\t}\n}\n","package haxe.exceptions;\n\n/**\n\tAn exception that carry position information of a place where it was created.\n**/\nclass PosException extends Exception {\n\t/**\n\t\tPosition where this exception was created.\n\t**/\n\tpublic final posInfos:PosInfos;\n\n\tpublic function new(message:String, ?previous:Exception, ?pos:PosInfos):Void {\n\t\tsuper(message, previous);\n\t\tif (pos == null) {\n\t\t\tposInfos = { fileName:'(unknown)', lineNumber:0, className:'(unknown)', methodName:'(unknown)' }\n\t\t} else {\n\t\t\tposInfos = pos;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns exception message.\n\t**/\n\toverride function toString():String {\n\t\treturn '${super.toString()} in ${posInfos.className}.${posInfos.methodName} at ${posInfos.fileName}:${posInfos.lineNumber}';\n\t}\n}","package haxe.exceptions;\n\n/**\n\tAn exception that is thrown when requested function or operation does not have an implementation.\n**/\nclass NotImplementedException extends PosException {\n\tpublic function new(message:String = 'Not implemented', ?previous:Exception, ?pos:PosInfos):Void {\n\t\tsuper(message, previous, pos);\n\t}\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.http;\n\nimport haxe.io.Bytes;\n\nprivate typedef StringKeyValue = {\n\tvar name:String;\n\tvar value:String;\n}\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call `haxe.Http.requestUrl(url)` and receive the result as a `String`\n\t(only available on `sys` targets)\n\t- create a `new haxe.Http(url)`, register your callbacks for `onData`,\n\t`onError` and `onStatus`, then call `request()`.\n**/\nclass HttpBase {\n\t/**\n\t\tThe url of `this` request. It is used only by the `request()` method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url:String;\n\n\tpublic var responseData(get,never):Null<String>;\n\tpublic var responseBytes(default,null):Null<Bytes>;\n\n\tvar responseAsString:Null<String>;\n\tvar postData:Null<String>;\n\tvar postBytes:Null<Bytes>;\n\tvar headers:Array<StringKeyValue>;\n\tvar params:Array<StringKeyValue>;\n\n\tfinal emptyOnData:(String)->Void;\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until `request()` is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to `request()`, or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new(url:String) {\n\t\tthis.url = url;\n\t\theaders = [];\n\t\tparams = [];\n\t\temptyOnData = onData;\n\t}\n\n\t/**\n\t\tSets the header identified as `name` to value `value`.\n\n\t\tIf `name` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader(name:String, value:String) {\n\t\tfor (i in 0...headers.length) {\n\t\t\tif (headers[i].name == name) {\n\t\t\t\theaders[i] = {name: name, value: value};\n\t\t\t\treturn #if hx3compat this #end;\n\t\t\t}\n\t\t}\n\t\theaders.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\tpublic function addHeader(header:String, value:String) {\n\t\theaders.push({name: header, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the parameter identified as `name` to value `value`.\n\n\t\tIf `name` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter(name:String, value:String) {\n\t\tfor (i in 0...params.length) {\n\t\t\tif (params[i].name == name) {\n\t\t\t\tparams[i] = {name: name, value: value};\n\t\t\t\treturn #if hx3compat this #end;\n\t\t\t}\n\t\t}\n\t\tparams.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\tpublic function addParameter(name:String, value:String) {\n\t\tparams.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data` string.\n\n\t\tThere can only be one post data per request. Subsequent calls to\n\t\tthis method or to `setPostBytes()` overwrite the previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData(data:Null<String>) {\n\t\tpostData = data;\n\t\tpostBytes = null;\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data` bytes.\n\n\t\tThere can only be one post data per request. Subsequent calls to\n\t\tthis method or to `setPostData()` overwrite the previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostBytes(data:Null<Bytes>) {\n\t\tpostBytes = data;\n\t\tpostData = null;\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\t`onStatus()`, `onError()`, `onData()` or `onBytes()` callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the `onError()` callback\n\t\tfunction is called.\n\n\t\t[js] If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request(?post:Bool):Void {\n\t\tthrow new haxe.exceptions.NotImplementedException();\n\t}\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData(data:String) {}\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onBytes = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onBytes(data:Bytes) {}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError(msg:String) {}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus(status:Int) {}\n\n\t/**\n\t\tOverride this if extending `haxe.Http` with overriding `onData`\n\t**/\n\tfunction hasOnData():Bool {\n\t\treturn !Reflect.compareMethods(onData, emptyOnData);\n\t}\n\n\tfunction success(data:Bytes) {\n\t\tresponseBytes = data;\n\t\tresponseAsString = null;\n\t\tif (hasOnData()) {\n\t\t\tonData(responseData);\n\t\t}\n\t\tonBytes(responseBytes);\n\t}\n\n\tfunction get_responseData() {\n\t\tif (responseAsString == null && responseBytes != null) {\n\t\t\t#if neko\n\t\t\tresponseAsString = neko.Lib.stringReference(responseBytes);\n\t\t\t#else\n\t\t\tresponseAsString = responseBytes.getString(0, responseBytes.length, UTF8);\n\t\t\t#end\n\t\t}\n\t\treturn responseAsString;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.http;\n\n#if nodejs\nimport js.node.Buffer;\nimport haxe.io.Bytes;\n\nclass HttpNodeJs extends haxe.http.HttpBase {\n\tpublic var responseHeaders:Map<String, String>;\n\n\tvar req:js.node.http.ClientRequest;\n\n\tpublic function new(url:String) {\n\t\tsuper(url);\n\t}\n\n\t/**\n\t\tCancels `this` Http request if `request` has been called and a response\n\t\thas not yet been received.\n\t**/\n\tpublic function cancel() {\n\t\tif (req == null)\n\t\t\treturn;\n\t\treq.abort();\n\t\treq = null;\n\t}\n\n\tpublic override function request(?post:Bool) {\n\t\tresponseAsString = null;\n\t\tresponseBytes = null;\n\t\tresponseHeaders = null;\n\t\tvar parsedUrl = new js.node.url.URL(url);\n\t\tvar secure = (parsedUrl.protocol == \"https:\");\n\t\tvar host = parsedUrl.hostname;\n\t\tvar path = parsedUrl.pathname;\n\t\tvar port = if (parsedUrl.port != null) Std.parseInt(parsedUrl.port) else (secure ? 443 : 80);\n\t\tvar h:Dynamic = {};\n\t\tfor (i in headers) {\n\t\t\tvar arr = Reflect.field(h, i.name);\n\t\t\tif (arr == null) {\n\t\t\t\tarr = new Array<String>();\n\t\t\t\tReflect.setField(h, i.name, arr);\n\t\t\t}\n\n\t\t\tarr.push(i.value);\n\t\t}\n\t\tif (postData != null || postBytes != null)\n\t\t\tpost = true;\n\t\tvar uri = null;\n\t\tfor (p in params) {\n\t\t\tif (uri == null)\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.name) + \"=\" + StringTools.urlEncode(p.value);\n\t\t}\n\t\tvar question = path.split(\"?\").length <= 1;\n\t\tif (uri != null)\n\t\t\tpath += (if (question) \"?\" else \"&\") + uri;\n\n\t\tvar opts = {\n\t\t\tprotocol: parsedUrl.protocol,\n\t\t\thostname: host,\n\t\t\tport: port,\n\t\t\tmethod: post ? 'POST' : 'GET',\n\t\t\tpath: path,\n\t\t\theaders: h\n\t\t};\n\t\tfunction httpResponse(res) {\n\t\t\tres.setEncoding('binary');\n\t\t\tvar s = res.statusCode;\n\t\t\tif (s != null)\n\t\t\t\tonStatus(s);\n\t\t\tvar data = [];\n\t\t\tres.on('data', function(chunk:String) {\n\t\t\t\tdata.push(Buffer.from(chunk, 'binary'));\n\t\t\t});\n\t\t\tres.on('end', function(_) {\n\t\t\t\tvar buf = (data.length == 1 ? data[0] : Buffer.concat(data));\n\t\t\t\tresponseBytes = Bytes.ofData(buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength));\n\t\t\t\treq = null;\n\n\t\t\t\t// store response headers\n\t\t\t\tresponseHeaders = new haxe.ds.StringMap();\n\t\t\t\tfor (field in Reflect.fields(res.headers))\n\t\t\t\t{\n\t\t\t\t\tresponseHeaders.set(field, Reflect.field(res.headers, field));\n\t\t\t\t}\n\n\t\t\t\tif (s != null && s >= 200 && s < 400) {\n\t\t\t\t\tsuccess(responseBytes);\n\t\t\t\t} else {\n\t\t\t\t\tonError(\"Http Error #\" + s);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treq = secure ? js.node.Https.request(untyped opts, httpResponse) : js.node.Http.request(untyped opts, httpResponse);\n\t\tif (post)\n\t\t\tif (postData != null) {\n\t\t\t\treq.write(postData);\n\t\t\t} else if(postBytes != null) {\n\t\t\t\treq.setHeader(\"Content-Length\", '${postBytes.length}');\n\t\t\t\treq.write(Buffer.from(postBytes.getData()));\n\t\t\t}\n\n\t\treq.end();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\ntypedef ArrayBufferViewData = js.lib.ArrayBufferView;\n\nabstract ArrayBufferView(ArrayBufferViewData) {\n\tpublic var buffer(get, never):haxe.io.Bytes;\n\tpublic var byteOffset(get, never):Int;\n\tpublic var byteLength(get, never):Int;\n\n\tpublic inline function new(size:Int) {\n\t\tthis = new js.lib.Uint8Array(size);\n\t}\n\n\tinline function get_byteOffset()\n\t\treturn this.byteOffset;\n\n\tinline function get_byteLength()\n\t\treturn this.byteLength;\n\n\tinline function get_buffer():haxe.io.Bytes {\n\t\treturn haxe.io.Bytes.ofData(this.buffer);\n\t}\n\n\tpublic inline function sub(begin:Int, ?length:Int) {\n\t\treturn fromData(new js.lib.Uint8Array(this.buffer, begin, length == null ? this.buffer.byteLength - begin : length));\n\t}\n\n\tpublic inline function getData():ArrayBufferViewData {\n\t\treturn this;\n\t}\n\n\tpublic static inline function fromData(a:ArrayBufferViewData):ArrayBufferView {\n\t\treturn cast a;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n@:coreApi\nclass BytesBuffer {\n\tvar buffer:js.lib.ArrayBuffer;\n\tvar view:js.lib.DataView;\n\tvar u8:js.lib.Uint8Array;\n\tvar pos:Int;\n\tvar size:Int;\n\n\tpublic var length(get, never):Int;\n\n\tpublic function new() {\n\t\tpos = 0;\n\t\tsize = 0;\n\t}\n\n\tinline function get_length():Int {\n\t\treturn pos;\n\t}\n\n\tpublic function addByte(byte:Int):Void {\n\t\tif (pos == size)\n\t\t\tgrow(1);\n\t\tview.setUint8(pos++, byte);\n\t}\n\n\tpublic function add(src:Bytes):Void {\n\t\tif (pos + src.length > size)\n\t\t\tgrow(src.length);\n\t\tif (size == 0)\n\t\t\treturn;\n\t\tvar sub = new js.lib.Uint8Array(@:privateAccess src.b.buffer, @:privateAccess src.b.byteOffset, src.length);\n\t\tu8.set(sub, pos);\n\t\tpos += src.length;\n\t}\n\n\tpublic function addString(v:String, ?encoding:Encoding):Void {\n\t\tadd(Bytes.ofString(v, encoding));\n\t}\n\n\tpublic function addInt32(v:Int):Void {\n\t\tif (pos + 4 > size)\n\t\t\tgrow(4);\n\t\tview.setInt32(pos, v, true);\n\t\tpos += 4;\n\t}\n\n\tpublic function addInt64(v:haxe.Int64):Void {\n\t\tif (pos + 8 > size)\n\t\t\tgrow(8);\n\t\tview.setInt32(pos, v.low, true);\n\t\tview.setInt32(pos + 4, v.high, true);\n\t\tpos += 8;\n\t}\n\n\tpublic function addFloat(v:Float):Void {\n\t\tif (pos + 4 > size)\n\t\t\tgrow(4);\n\t\tview.setFloat32(pos, v, true);\n\t\tpos += 4;\n\t}\n\n\tpublic function addDouble(v:Float):Void {\n\t\tif (pos + 8 > size)\n\t\t\tgrow(8);\n\t\tview.setFloat64(pos, v, true);\n\t\tpos += 8;\n\t}\n\n\tpublic function addBytes(src:Bytes, pos:Int, len:Int):Void {\n\t\tif (pos < 0 || len < 0 || pos + len > src.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\tif (this.pos + len > size)\n\t\t\tgrow(len);\n\t\tif (size == 0)\n\t\t\treturn;\n\t\tvar sub = new js.lib.Uint8Array(@:privateAccess src.b.buffer, @:privateAccess src.b.byteOffset + pos, len);\n\t\tu8.set(sub, this.pos);\n\t\tthis.pos += len;\n\t}\n\n\tfunction grow(delta:Int):Void {\n\t\tvar req = pos + delta;\n\t\tvar nsize = size == 0 ? 16 : size;\n\t\twhile (nsize < req)\n\t\t\tnsize = (nsize * 3) >> 1;\n\t\tvar nbuf = new js.lib.ArrayBuffer(nsize);\n\t\tvar nu8 = new js.lib.Uint8Array(nbuf);\n\t\tif (size > 0)\n\t\t\tnu8.set(u8);\n\t\tsize = nsize;\n\t\tbuffer = nbuf;\n\t\tu8 = nu8;\n\t\tview = new js.lib.DataView(buffer);\n\t}\n\n\tpublic function getBytes():Bytes@:privateAccess {\n\t\tif (size == 0)\n\t\t\treturn haxe.io.Bytes.alloc(0);\n\t\tvar b = new Bytes(buffer);\n\t\tb.length = pos;\n\t\treturn b;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the `haxe.io.Input`.\n**/\nclass Eof {\n\tpublic function new() {}\n\n\t@:ifFeature(\"haxe.io.Eof.*\")\n\tfunction toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tHelper that converts between floating point and binary representation.\n\tAlways works in low-endian encoding.\n**/\nclass FPHelper {\n\t#if neko_v21\n\t// stored in helper\n\t#elseif neko\n\tstatic var i64tmp = new sys.thread.Tls<Int64>();\n\t#elseif !(java || cpp)\n\tstatic var i64tmp = Int64.ofInt(0);\n\n\tstatic inline var LN2 = 0.6931471805599453; // Math.log(2)\n\n\tstatic inline function _i32ToFloat(i:Int):Float {\n\t\tvar sign = 1 - ((i >>> 31) << 1);\n\t\tvar e = (i >> 23) & 0xff;\n\t\tif (e == 255)\n\t\t\treturn i & 0x7fffff == 0 ? (sign > 0 ? Math.POSITIVE_INFINITY : Math.NEGATIVE_INFINITY) : Math.NaN;\n\t\tvar m = e == 0 ? (i & 0x7fffff) << 1 : (i & 0x7fffff) | 0x800000;\n\t\treturn sign * m * Math.pow(2, e - 150);\n\t}\n\n\tstatic inline function _i64ToDouble(lo:Int, hi:Int):Float {\n\t\tvar sign = 1 - ((hi >>> 31) << 1);\n\t\tvar e = (hi >> 20) & 0x7ff;\n\t\tif (e == 2047)\n\t\t\treturn lo == 0 && (hi & 0xFFFFF) == 0 ? (sign > 0 ? Math.POSITIVE_INFINITY : Math.NEGATIVE_INFINITY) : Math.NaN;\n\t\tvar m = 2.220446049250313e-16 * ((hi & 0xFFFFF) * 4294967296. + (lo >>> 31) * 2147483648. + (lo & 0x7FFFFFFF));\n\t\tm = e == 0 ? m * 2.0 : m + 1.0;\n\t\treturn sign * m * Math.pow(2, e - 1023);\n\t}\n\n\tstatic inline function _floatToI32(f:Float):Int {\n\t\tif (f == 0)\n\t\t\treturn 0;\n\t\tvar af = f < 0 ? -f : f;\n\t\tvar exp = Math.floor(Math.log(af) / LN2);\n\t\tif (exp > 127) {\n\t\t\treturn 0x7F800000;\n\t\t} else {\n\t\t\tif (exp <= -127) {\n\t\t\t\texp = -127;\n\t\t\t\taf *= 7.1362384635298e+44; // af * 0.5 * 0x800000 / Math.pow(2, -127)\n\t\t\t} else {\n\t\t\t\taf = (af / Math.pow(2, exp) - 1.0) * 0x800000;\n\t\t\t}\n\t\t\treturn (f < 0 ? 0x80000000 : 0) | ((exp + 127) << 23) | Math.round(af);\n\t\t}\n\t}\n\n\tstatic inline function _doubleToI64(v:Float):Int64@:privateAccess {\n\t\tvar i64 = i64tmp;\n\t\tif (v == 0) {\n\t\t\ti64.set_low(0);\n\t\t\ti64.set_high(0);\n\t\t} else if (!Math.isFinite(v)) {\n\t\t\ti64.set_low(0);\n\t\t\ti64.set_high(v > 0 ? 0x7FF00000 : 0xFFF00000);\n\t\t} else {\n\t\t\tvar av = v < 0 ? -v : v;\n\t\t\tvar exp = Math.floor(Math.log(av) / LN2);\n\t\t\tif (exp > 1023) {\n\t\t\t\ti64.set_low(0xFFFFFFFF);\n\t\t\t\ti64.set_high(0x7FEFFFFF);\n\t\t\t} else {\n\t\t\t\tif (exp <= -1023) {\n\t\t\t\t\texp = -1023;\n\t\t\t\t\tav = av / 2.2250738585072014e-308;\n\t\t\t\t} else {\n\t\t\t\t\tav = av / Math.pow(2, exp) - 1.0;\n\t\t\t\t}\n\t\t\t\tvar sig = Math.fround(av * 4503599627370496.); // 2^52\n\t\t\t\t// Note: If \"sig\" is outside of the signed Int32 range, the result is unspecified in HL, Java and Neko.\n\t\t\t\tvar sig_l = Std.int(sig);\n\t\t\t\tvar sig_h = Std.int(sig / 4294967296.0);\n\t\t\t\ti64.set_low(sig_l);\n\t\t\t\ti64.set_high((v < 0 ? 0x80000000 : 0) | ((exp + 1023) << 20) | sig_h);\n\t\t\t}\n\t\t}\n\t\treturn i64;\n\t}\n\t#end\n\n\t#if neko\n\t#if neko_v21\n\tstatic var helpers = new sys.thread.Tls<neko.NativeArray<Dynamic>>();\n\t#else\n\tstatic var helperf = new sys.thread.Tls<neko.NativeString>();\n\tstatic var helperd = new sys.thread.Tls<neko.NativeString>();\n\tstatic var _float_of_bytes = neko.Lib.load(\"std\", \"float_of_bytes\", 2);\n\tstatic var _double_of_bytes = neko.Lib.load(\"std\", \"double_of_bytes\", 2);\n\tstatic var _float_bytes = neko.Lib.load(\"std\", \"float_bytes\", 2);\n\tstatic var _double_bytes = neko.Lib.load(\"std\", \"double_bytes\", 2);\n\t#end\n\t#elseif flash\n\tstatic var helper = {\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\tb;\n\t}\n\t#elseif js\n\tstatic var helper = new js.lib.DataView(new js.lib.ArrayBuffer(8));\n\t#end\n\n\t#if neko_v21\n\tinline\n\t#end\n\tpublic static function i32ToFloat(i:Int):Float {\n\t\t#if neko\n\t\t#if neko_v21\n\t\treturn untyped $itof(i, false);\n\t\t#else\n\t\tvar helper = helperf.value;\n\t\tif (helper == null)\n\t\t\thelperf.value = helper = neko.NativeString.alloc(4);\n\t\tuntyped $sset(helper, 0, i & 0xFF);\n\t\tuntyped $sset(helper, 1, (i >> 8) & 0xFF);\n\t\tuntyped $sset(helper, 2, (i >> 16) & 0xFF);\n\t\tuntyped $sset(helper, 3, i >>> 24);\n\t\treturn _float_of_bytes(helper, false);\n\t\t#end\n\t\t#elseif cpp\n\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32_as_float32(i);\n\t\t#elseif java\n\t\treturn java.lang.Float.FloatClass.intBitsToFloat(i);\n\t\t#elseif flash\n\t\tvar helper = helper;\n\t\thelper.position = 0;\n\t\thelper.writeUnsignedInt(i);\n\t\thelper.position = 0;\n\t\treturn helper.readFloat();\n\t\t#elseif js\n\t\thelper.setInt32(0, i, true);\n\t\treturn helper.getFloat32(0, true);\n\t\t#else\n\t\treturn _i32ToFloat(i);\n\t\t#end\n\t}\n\n\t#if neko_v21\n\tinline\n\t#end\n\tpublic static function floatToI32(f:Float):Int {\n\t\t#if neko\n\t\t#if neko_v21\n\t\treturn untyped $ftoi(f, false);\n\t\t#else\n\t\tvar r = _float_bytes(f, false);\n\t\treturn untyped $sget(r, 0) | ($sget(r, 1) << 8) | ($sget(r, 2) << 16) | ($sget(r, 3) << 24);\n\t\t#end\n\t\t#elseif cpp\n\t\treturn untyped __global__.__hxcpp_reinterpret_float32_as_le_int32(f);\n\t\t#elseif java\n\t\treturn java.lang.Float.FloatClass.floatToRawIntBits(f);\n\t\t#elseif flash\n\t\tvar helper = helper;\n\t\thelper.position = 0;\n\t\thelper.writeFloat(f);\n\t\thelper.position = 0;\n\t\treturn helper.readUnsignedInt();\n\t\t#elseif js\n\t\thelper.setFloat32(0, f, true);\n\t\treturn helper.getInt32(0, true);\n\t\t#else\n\t\treturn _floatToI32(f);\n\t\t#end\n\t}\n\n\t#if neko_v21\n\tinline\n\t#end\n\tpublic static function i64ToDouble(low:Int, high:Int):Float {\n\t\t#if neko\n\t\t#if neko_v21\n\t\treturn untyped $itod(low, high, false);\n\t\t#else\n\t\tvar helper = helperd.value;\n\t\tif (helper == null)\n\t\t\thelperd.value = helper = neko.NativeString.alloc(8);\n\t\tuntyped $sset(helper, 0, low & 0xFF);\n\t\tuntyped $sset(helper, 1, (low >> 8) & 0xFF);\n\t\tuntyped $sset(helper, 2, (low >> 16) & 0xFF);\n\t\tuntyped $sset(helper, 3, low >>> 24);\n\t\tuntyped $sset(helper, 4, high & 0xFF);\n\t\tuntyped $sset(helper, 5, (high >> 8) & 0xFF);\n\t\tuntyped $sset(helper, 6, (high >> 16) & 0xFF);\n\t\tuntyped $sset(helper, 7, high >>> 24);\n\t\treturn _double_of_bytes(helper, false);\n\t\t#end\n\t\t#elseif cpp\n\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32s_as_float64(low, high);\n\t\t#elseif java\n\t\treturn java.lang.Double.DoubleClass.longBitsToDouble(Int64.make(high, low));\n\t\t#elseif flash\n\t\tvar helper = helper;\n\t\thelper.position = 0;\n\t\thelper.writeUnsignedInt(low);\n\t\thelper.writeUnsignedInt(high);\n\t\thelper.position = 0;\n\t\treturn helper.readDouble();\n\t\t#elseif js\n\t\thelper.setInt32(0, low, true);\n\t\thelper.setInt32(4, high, true);\n\t\treturn helper.getFloat64(0, true);\n\t\t#else\n\t\treturn _i64ToDouble(low, high);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an Int64 representing the bytes representation of the double precision IEEE float value.\n\t\tWARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.\n\t\tWe still ensure that this is safe to use in a multithread environment\n\t**/\n\tpublic static function doubleToI64(v:Float):Int64 {\n\t\t#if neko\n\t\t#if neko_v21\n\t\tvar helper = helpers.value;\n\t\tif (helper == null) {\n\t\t\thelpers.value = helper = neko.NativeArray.alloc(2);\n\t\t\thelper[0] = neko.NativeArray.alloc(2);\n\t\t\thelper[1] = haxe.Int64.ofInt(0);\n\t\t}\n\t\tvar i64:haxe.Int64 = helper[1], int2 = helper[0];\n\t\tuntyped $dtoi(v, int2, false);\n\t\t@:privateAccess {\n\t\t\ti64.set_low(int2[0]);\n\t\t\ti64.set_high(int2[1]);\n\t\t}\n\t\treturn i64;\n\t\t#else\n\t\tvar r = _double_bytes(v, false), i64 = i64tmp.value;\n\t\tif (i64 == null)\n\t\t\ti64 = i64tmp.value = haxe.Int64.ofInt(0);\n\t\t@:privateAccess {\n\t\t\ti64.set_low(untyped $sget(r, 0) | ($sget(r, 1) << 8) | ($sget(r, 2) << 16) | ($sget(r, 3) << 24));\n\t\t\ti64.set_high(untyped $sget(r, 4) | ($sget(r, 5) << 8) | ($sget(r, 6) << 16) | ($sget(r, 7) << 24));\n\t\t}\n\t\treturn i64;\n\t\t#end\n\t\t#elseif cpp\n\t\treturn Int64.make(untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_high(v),\n\t\t\tuntyped __global__.__hxcpp_reinterpret_float64_as_le_int32_low(v));\n\t\t#elseif java\n\t\treturn java.lang.Double.DoubleClass.doubleToRawLongBits(v);\n\t\t#elseif flash\n\t\tvar helper = helper;\n\t\thelper.position = 0;\n\t\thelper.writeDouble(v);\n\t\thelper.position = 0;\n\t\tvar i64 = i64tmp;\n\t\t@:privateAccess {\n\t\t\ti64.set_low(cast helper.readUnsignedInt());\n\t\t\ti64.set_high(cast helper.readUnsignedInt());\n\t\t}\n\t\treturn i64;\n\t\t#elseif js\n\t\tvar i64 = i64tmp;\n\t\thelper.setFloat64(0, v, true);\n\t\t@:privateAccess {\n\t\t\ti64.set_low(helper.getInt32(0, true));\n\t\t\ti64.set_high(helper.getInt32(4, true));\n\t\t}\n\t\treturn i64;\n\t\t#else\n\t\treturn _doubleToI64(v);\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tThis class provides a convenient way of working with paths. It supports the\n\tcommon path formats:\n\n\t- `directory1/directory2/filename.extension`\n\t- `directory1\\directory2\\filename.extension`\n**/\nclass Path {\n\t/**\n\t\tThe directory.\n\n\t\tThis is the leading part of the path that is not part of the file name\n\t\tand the extension.\n\n\t\tDoes not end with a `/` or `\\` separator.\n\n\t\tIf the path has no directory, the value is `null`.\n\t**/\n\tpublic var dir:Null<String>;\n\n\t/**\n\t\tThe file name.\n\n\t\tThis is the part of the part between the directory and the extension.\n\n\t\tIf there is no file name, e.g. for `\".htaccess\"` or `\"/dir/\"`, the value\n\t\tis the empty String `\"\"`.\n\t**/\n\tpublic var file:String;\n\n\t/**\n\t\tThe file extension.\n\n\t\tIt is separated from the file name by a dot. This dot is not part of\n\t\tthe extension.\n\n\t\tIf the path has no extension, the value is `null`.\n\t**/\n\tpublic var ext:Null<String>;\n\n\t/**\n\t\t`true` if the last directory separator is a backslash, `false` otherwise.\n\t**/\n\tpublic var backslash:Bool;\n\n\t/**\n\t\tCreates a new `Path` instance by parsing `path`.\n\n\t\tPath information can be retrieved by accessing the `dir`, `file` and `ext`\n\t\tproperties.\n\t**/\n\tpublic function new(path:String) {\n\t\tswitch (path) {\n\t\t\tcase \".\" | \"..\":\n\t\t\t\tdir = path;\n\t\t\t\tfile = \"\";\n\t\t\t\treturn;\n\t\t}\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\tif (c1 < c2) {\n\t\t\tdir = path.substr(0, c2);\n\t\t\tpath = path.substr(c2 + 1);\n\t\t\tbackslash = true;\n\t\t} else if (c2 < c1) {\n\t\t\tdir = path.substr(0, c1);\n\t\t\tpath = path.substr(c1 + 1);\n\t\t} else\n\t\t\tdir = null;\n\t\tvar cp = path.lastIndexOf(\".\");\n\t\tif (cp != -1) {\n\t\t\text = path.substr(cp + 1);\n\t\t\tfile = path.substr(0, cp);\n\t\t} else {\n\t\t\text = null;\n\t\t\tfile = path;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` path.\n\n\t\tIf `this.backslash` is `true`, backslash is used as directory separator,\n\t\totherwise slash is used. This only affects the separator between\n\t\t`this.dir` and `this.file`.\n\n\t\tIf `this.directory` or `this.extension` is `null`, their representation\n\t\tis the empty String `\"\"`.\n\t**/\n\tpublic function toString():String {\n\t\treturn (if (dir == null) \"\" else dir + if (backslash) \"\\\\\" else \"/\") + file + (if (ext == null) \"\" else \".\" + ext);\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the file extension.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function withoutExtension(path:String):String {\n\t\tvar s = new Path(path);\n\t\ts.ext = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the directory.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function withoutDirectory(path):String {\n\t\tvar s = new Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the directory of `path`.\n\n\t\tIf the directory is `null`, the empty String `\"\"` is returned.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function directory(path):String {\n\t\tvar s = new Path(path);\n\t\tif (s.dir == null)\n\t\t\treturn \"\";\n\t\treturn s.dir;\n\t}\n\n\t/**\n\t\tReturns the extension of `path`.\n\n\t\tIf `path` has no extension, the empty String `\"\"` is returned.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function extension(path):String {\n\t\tvar s = new Path(path);\n\t\tif (s.ext == null)\n\t\t\treturn \"\";\n\t\treturn s.ext;\n\t}\n\n\t/**\n\t\tReturns a String representation of `path` where the extension is `ext`.\n\n\t\tIf `path` has no extension, `ext` is added as extension.\n\n\t\tIf `path` or `ext` are `null`, the result is unspecified.\n\t**/\n\tpublic static function withExtension(path, ext):String {\n\t\tvar s = new Path(path);\n\t\ts.ext = ext;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tJoins all paths in `paths` together.\n\n\t\tIf `paths` is empty, the empty String `\"\"` is returned. Otherwise the\n\t\tpaths are joined with a slash between them.\n\n\t\tIf `paths` is `null`, the result is unspecified.\n\t**/\n\tpublic static function join(paths:Array<String>):String {\n\t\tvar paths = paths.filter(function(s) return s != null && s != \"\");\n\t\tif (paths.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar path = paths[0];\n\t\tfor (i in 1...paths.length) {\n\t\t\tpath = addTrailingSlash(path);\n\t\t\tpath += paths[i];\n\t\t}\n\t\treturn normalize(path);\n\t}\n\n\t/**\n\t\tNormalize a given `path` (e.g. turn `'/usr/local/../lib'` into `'/usr/lib'`).\n\n\t\tAlso replaces backslashes `\\` with slashes `/` and afterwards turns\n\t\tmultiple slashes into a single one.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function normalize(path:String):String {\n\t\tvar slash = \"/\";\n\t\tpath = path.split(\"\\\\\").join(slash);\n\t\tif (path == slash)\n\t\t\treturn slash;\n\n\t\tvar target = [];\n\n\t\tfor (token in path.split(slash)) {\n\t\t\tif (token == '..' && target.length > 0 && target[target.length - 1] != \"..\") {\n\t\t\t\ttarget.pop();\n\t\t\t} else if (token == '') {\n\t\t\t\tif (target.length > 0 || path.charCodeAt(0) == '/'.code) {\n\t\t\t\t\ttarget.push(token);\n\t\t\t\t}\n\t\t\t} else if (token != '.') {\n\t\t\t\ttarget.push(token);\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = target.join(slash);\n\t\tvar acc = new StringBuf();\n\t\tvar colon = false;\n\t\tvar slashes = false;\n\t\t#if utf16\n\t\tfor (c in haxe.iterators.StringIteratorUnicode.unicodeIterator(tmp)) {\n\t\t\tswitch (c) {\n\t\t#else\n\t\tfor (i in 0...tmp.length) {\n\t\t\tswitch (StringTools.fastCodeAt(tmp, i)) {\n\t\t#end\n\t\t\t\tcase \":\".code:\n\t\t\t\t\tacc.add(\":\");\n\t\t\t\t\tcolon = true;\n\t\t\t\tcase \"/\".code if (!colon):\n\t\t\t\t\tslashes = true;\n\t\t\t\tcase var i:\n\t\t\t\t\tcolon = false;\n\t\t\t\t\tif (slashes) {\n\t\t\t\t\t\tacc.add(\"/\");\n\t\t\t\t\t\tslashes = false;\n\t\t\t\t\t}\n\t\t\t\t\tacc.addChar(i);\n\t\t\t}\n\t\t}\n\n\t\treturn acc.toString();\n\t}\n\n\t/**\n\t\tAdds a trailing slash to `path`, if it does not have one already.\n\n\t\tIf the last slash in `path` is a backslash, a backslash is appended to\n\t\t`path`.\n\n\t\tIf the last slash in `path` is a slash, or if no slash is found, a slash\n\t\tis appended to `path`. In particular, this applies to the empty String\n\t\t`\"\"`.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function addTrailingSlash(path:String):String {\n\t\tif (path.length == 0)\n\t\t\treturn \"/\";\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\treturn if (c1 < c2) {\n\t\t\tif (c2 != path.length - 1)\n\t\t\t\tpath + \"\\\\\";\n\t\t\telse\n\t\t\t\tpath;\n\t\t} else {\n\t\t\tif (c1 != path.length - 1)\n\t\t\t\tpath + \"/\";\n\t\t\telse\n\t\t\t\tpath;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves trailing slashes from `path`.\n\n\t\tIf `path` does not end with a `/` or `\\`, `path` is returned unchanged.\n\n\t\tOtherwise the substring of `path` excluding the trailing slashes or\n\t\tbackslashes is returned.\n\n\t\tIf `path` is `null`, the result is unspecified.\n\t**/\n\tpublic static function removeTrailingSlashes(path:String):String {\n\t\twhile (true) {\n\t\t\tswitch (path.charCodeAt(path.length - 1)) {\n\t\t\t\tcase '/'.code | '\\\\'.code:\n\t\t\t\t\tpath = path.substr(0, -1);\n\t\t\t\tcase _:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t\tReturns `true` if the path is an absolute path, and `false` otherwise.\n\t**/\n\tpublic static function isAbsolute(path:String):Bool {\n\t\tif (StringTools.startsWith(path, '/'))\n\t\t\treturn true;\n\t\tif (path.charAt(1) == ':')\n\t\t\treturn true;\n\t\tif (StringTools.startsWith(path, '\\\\\\\\'))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate static function unescape(path:String):String {\n\t\tvar regex = ~/-x([0-9][0-9])/g;\n\t\treturn regex.map(path, function(regex) return String.fromCharCode(Std.parseInt(regex.matched(1))));\n\t}\n\n\tprivate static function escape(path:String, allowSlashes:Bool = false):String {\n\t\tvar regex = allowSlashes ? ~/[^A-Za-z0-9_\\/\\\\\\.]/g : ~/[^A-Za-z0-9_\\.]/g;\n\t\treturn regex.map(path, function(v) return '-x' + v.matched(0).charCodeAt(0));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\ntypedef UInt8ArrayData = js.lib.Uint8Array;\n\n@:coreApi\nabstract UInt8Array(UInt8ArrayData) {\n\tpublic static inline var BYTES_PER_ELEMENT = 1;\n\n\tpublic var length(get, never):Int;\n\tpublic var view(get, never):ArrayBufferView;\n\n\tpublic inline function new(elements:Int) {\n\t\tthis = new UInt8ArrayData(elements);\n\t}\n\n\tinline function get_length():Int {\n\t\treturn this.length;\n\t}\n\n\tpublic inline function get_view():ArrayBufferView {\n\t\treturn ArrayBufferView.fromData(this);\n\t}\n\n\t@:arrayAccess public inline function get(index:Int):Int {\n\t\treturn this[index];\n\t}\n\n\t@:arrayAccess public inline function set(index:Int, value:Int):Int {\n\t\treturn this[index] = value;\n\t}\n\n\tpublic inline function sub(begin:Int, ?length:Int):UInt8Array {\n\t\treturn fromData(this.subarray(begin, length == null ? this.length : begin + length));\n\t}\n\n\tpublic inline function subarray(?begin:Int, ?end:Int):UInt8Array {\n\t\treturn fromData(this.subarray(begin, end));\n\t}\n\n\tpublic inline function getData():UInt8ArrayData {\n\t\treturn this;\n\t}\n\n\tpublic static inline function fromData(d:UInt8ArrayData):UInt8Array {\n\t\treturn cast d;\n\t}\n\n\tpublic static function fromArray(a:Array<Int>, pos:Int = 0, ?length:Int):UInt8Array {\n\t\tif (length == null)\n\t\t\tlength = a.length - pos;\n\t\tif (pos < 0 || length < 0 || pos + length > a.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\tif (pos == 0 && length == a.length)\n\t\t\treturn fromData(new UInt8ArrayData(a));\n\t\tvar i = new UInt8Array(a.length);\n\t\tfor (idx in 0...length)\n\t\t\ti[idx] = a[idx + pos];\n\t\treturn i;\n\t}\n\n\tpublic static function fromBytes(bytes:haxe.io.Bytes, bytePos:Int = 0, ?length:Int):UInt8Array {\n\t\tif (length == null)\n\t\t\tlength = bytes.length - bytePos;\n\t\treturn fromData(new UInt8ArrayData(bytes.getData(), bytePos, length));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator can be used to iterate over the values of `haxe.DynamicAccess`.\n**/\nclass DynamicAccessIterator<T> {\n\tfinal access:DynamicAccess<T>;\n\tfinal keys:Array<String>;\n\tvar index:Int;\n\n\tpublic inline function new(access:DynamicAccess<T>) {\n\t\tthis.access = access;\n\t\tthis.keys = access.keys();\n\t\tindex = 0;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\tpublic inline function hasNext():Bool {\n\t\treturn index < keys.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\tpublic inline function next():T {\n\t\treturn access[keys[index++]];\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis Key/Value iterator can be used to iterate over `haxe.DynamicAccess`.\n**/\nclass DynamicAccessKeyValueIterator<T> {\n\tfinal access:DynamicAccess<T>;\n\tfinal keys:Array<String>;\n\tvar index:Int;\n\n\tpublic inline function new(access:DynamicAccess<T>) {\n\t\tthis.access = access;\n\t\tthis.keys = access.keys();\n\t\tindex = 0;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\tpublic inline function hasNext():Bool {\n\t\treturn index < keys.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\tpublic inline function next():{key:String, value:T} {\n\t\tvar key = keys[index++];\n\t\treturn {value: (access[key] : T), key: key};\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\nimport haxe.ds.IntMap;\n\n/**\n\tThis Key/Value iterator can be used to iterate across maps.\n**/\n@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\")\nclass MapKeyValueIterator<K, V> {\n\tvar map:haxe.Constraints.IMap<K, V>;\n\tvar keys:Iterator<K>;\n\n\tpublic inline function new(map:haxe.Constraints.IMap<K, V>) {\n\t\tthis.map = map;\n\t\tthis.keys = map.keys();\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\tpublic inline function hasNext():Bool {\n\t\treturn keys.hasNext();\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\tpublic inline function next():{key:K, value:V} {\n\t\tvar key = keys.next();\n\t\treturn {value: @:nullSafety(Off) (map.get(key) : V), key: key};\n\t}\n}\n","package haxe.iterators;\n\nclass RestKeyValueIterator<T> {\n\tfinal args:Rest<T>;\n\tvar current:Int = 0;\n\n\t@:allow(haxe.Rest)\n\tinline function new(args:Any) {\n\t\tthis.args = args;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn current < args.length;\n\t}\n\n\tpublic inline function next():{key:Int, value:T} {\n\t\treturn {key:current, value:args[current++]};\n\t}\n}","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator can be used to iterate over char codes in a string.\n\n\tNote that char codes may differ across platforms because of different\n\tinternal encoding of strings in different of runtimes.\n**/\nclass StringIterator {\n\tvar offset = 0;\n\tvar s:String;\n\n\t/**\n\t\tCreate a new `StringIterator` over String `s`.\n\t**/\n\tpublic inline function new(s:String) {\n\t\tthis.s = s;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\tpublic inline function hasNext() {\n\t\treturn offset < s.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\tpublic inline function next() {\n\t\treturn StringTools.unsafeCodeAt(s, offset++);\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator can be used to iterate over char indexes and char codes in a string.\n\n\tNote that char codes may differ across platforms because of different\n\tinternal encoding of strings in different runtimes.\n**/\nclass StringKeyValueIterator {\n\tvar offset = 0;\n\tvar s:String;\n\n\t/**\n\t\tCreate a new `StringKeyValueIterator` over String `s`.\n\t**/\n\tpublic inline function new(s:String) {\n\t\tthis.s = s;\n\t}\n\n\t/**\n\t\tSee `KeyValueIterator.hasNext`\n\t**/\n\tpublic inline function hasNext() {\n\t\treturn offset < s.length;\n\t}\n\n\t/**\n\t\tSee `KeyValueIterator.next`\n\t**/\n\tpublic inline function next() {\n\t\treturn {key: offset, value: StringTools.fastCodeAt(s, offset++)};\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.macro;\n\n#if (macro && !doc_gen)\n@:coreType abstract Position {}\n#else\n\n/**\n\tRepresents a position in a file.\n**/\ntypedef Position = {\n\t/**\n\t\tReference to the filename.\n\t**/\n\tvar file:String;\n\n\t/**\n\t\tPosition of the first character.\n\t**/\n\tvar min:Int;\n\n\t/**\n\t\tPosition of the last character.\n\t**/\n\tvar max:Int;\n}\n#end\n\nenum StringLiteralKind {\n\tDoubleQuotes;\n\tSingleQuotes;\n}\n\n/**\n\tRepresents a constant.\n\t@see https://haxe.org/manual/expression-constants.html\n**/\nenum Constant {\n\t/**\n\t\tRepresents an integer literal.\n\t**/\n\tCInt(v:String, ?s:String);\n\n\t/**\n\t\tRepresents a float literal.\n\t**/\n\tCFloat(f:String, ?s:String);\n\n\t/**\n\t\tRepresents a string literal.\n\t**/\n\tCString(s:String, ?kind:StringLiteralKind);\n\n\t/**\n\t\tRepresents an identifier.\n\t**/\n\tCIdent(s:String);\n\n\t/**\n\t\tRepresents a regular expression literal.\n\n\t\tExample: `~/haxe/i`\n\n\t\t- The first argument `haxe` is a string with regular expression pattern.\n\t\t- The second argument `i` is a string with regular expression flags.\n\n\t\t@see https://haxe.org/manual/std-regex.html\n\t**/\n\tCRegexp(r:String, opt:String);\n}\n\n/**\n\tA binary operator.\n\t@see https://haxe.org/manual/types-numeric-operators.html\n**/\nenum Binop {\n\t/**\n\t\t`+`\n\t**/\n\tOpAdd;\n\n\t/**\n\t\t`*`\n\t**/\n\tOpMult;\n\n\t/**\n\t\t`/`\n\t**/\n\tOpDiv;\n\n\t/**\n\t\t`-`\n\t**/\n\tOpSub;\n\n\t/**\n\t\t`=`\n\t**/\n\tOpAssign;\n\n\t/**\n\t\t`==`\n\t**/\n\tOpEq;\n\n\t/**\n\t\t`!=`\n\t**/\n\tOpNotEq;\n\n\t/**\n\t\t`>`\n\t**/\n\tOpGt;\n\n\t/**\n\t\t`>=`\n\t**/\n\tOpGte;\n\n\t/**\n\t\t`<`\n\t**/\n\tOpLt;\n\n\t/**\n\t\t`<=`\n\t**/\n\tOpLte;\n\n\t/**\n\t\t`&`\n\t**/\n\tOpAnd;\n\n\t/**\n\t\t`|`\n\t**/\n\tOpOr;\n\n\t/**\n\t\t`^`\n\t**/\n\tOpXor;\n\n\t/**\n\t\t`&&`\n\t**/\n\tOpBoolAnd;\n\n\t/**\n\t\t`||`\n\t**/\n\tOpBoolOr;\n\n\t/**\n\t\t`<<`\n\t**/\n\tOpShl;\n\n\t/**\n\t\t`>>`\n\t**/\n\tOpShr;\n\n\t/**\n\t\t`>>>`\n\t**/\n\tOpUShr;\n\n\t/**\n\t\t`%`\n\t**/\n\tOpMod;\n\n\t/**\n\t\t`+=` `-=` `/=` `*=` `<<=` `>>=` `>>>=` `|=` `&=` `^=` `%=`\n\t**/\n\tOpAssignOp(op:Binop);\n\n\t/**\n\t\t`...`\n\t**/\n\tOpInterval;\n\n\t/**\n\t\t`=>`\n\t**/\n\tOpArrow;\n\n\t/**\n\t\t`in`\n\t**/\n\tOpIn;\n\n\t/**\n\t\t`??`\n\t**/\n\tOpNullCoal;\n}\n\n/**\n\tA unary operator.\n\t@see https://haxe.org/manual/types-numeric-operators.html\n**/\nenum Unop {\n\t/**\n\t\t`++`\n\t**/\n\tOpIncrement;\n\n\t/**\n\t\t`--`\n\t**/\n\tOpDecrement;\n\n\t/**\n\t\t`!`\n\t**/\n\tOpNot;\n\n\t/**\n\t\t`-`\n\t**/\n\tOpNeg;\n\n\t/**\n\t\t`~`\n\t**/\n\tOpNegBits;\n\n\t/**\n\t\t`...`\n\t**/\n\tOpSpread;\n}\n\nenum EFieldKind {\n\tNormal;\n\tSafe;\n}\n\n/**\n\tRepresents a node in the AST.\n\t@see https://haxe.org/manual/macro-reification-expression.html\n**/\ntypedef Expr = {\n\t/**\n\t\tThe expression kind.\n\t**/\n\tvar expr:ExprDef;\n\n\t/**\n\t\tThe position of the expression.\n\t**/\n\tvar pos:Position;\n}\n\n/**\n\tRepresents a AST node identical to `Expr`, but it allows constraining the\n\ttype of accepted expressions.\n\t@see https://haxe.org/manual/macro-ExprOf.html\n**/\ntypedef ExprOf<T> = Expr;\n\n/**\n\tRepresents a switch case.\n\t@see https://haxe.org/manual/expression-switch.html\n**/\ntypedef Case = {\n\t/**\n\t\tThe value expressions of the case.\n\t**/\n\tvar values:Array<Expr>;\n\n\t/**\n\t\tThe optional guard expressions of the case, if available.\n\t**/\n\tvar ?guard:Expr;\n\n\t/**\n\t\tThe expression of the case, if available.\n\t**/\n\tvar ?expr:Expr;\n}\n\n/**\n\tRepresents a variable in the AST.\n\t@see https://haxe.org/manual/expression-var.html\n**/\ntypedef Var = {\n\t/**\n\t\tThe name of the variable.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe position of the variable name.\n\t**/\n\tvar ?namePos:Position;\n\n\t/**\n\t\tThe type-hint of the variable, if available.\n\t**/\n\tvar ?type:ComplexType;\n\n\t/**\n\t\tThe expression of the variable, if available.\n\t**/\n\tvar ?expr:Expr;\n\n\t/**\n\t\tWhether or not the variable can be assigned to.\n\t**/\n\tvar ?isFinal:Bool;\n\n\t/**\n\t\tWhether or not the variable is static.\n\t**/\n\tvar ?isStatic:Bool;\n\n\t/**\n\t\tMetadata associated with the variable, if available.\n\t**/\n\tvar ?meta:Metadata;\n}\n\n/**\n\tRepresents a catch in the AST.\n\t@see https://haxe.org/manual/expression-try-catch.html\n**/\ntypedef Catch = {\n\t/**\n\t\tThe name of the catch variable.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe type of the catch.\n\t**/\n\tvar ?type:ComplexType;\n\n\t/**\n\t\tThe expression of the catch.\n\t**/\n\tvar expr:Expr;\n}\n\n/**\n\tRepresents the way something is quoted.\n**/\nenum QuoteStatus {\n\t/**\n\t\tNo quotes\n\t**/\n\tUnquoted;\n\n\t/**\n\t\tDouble quotes `\"`\n\t**/\n\tQuoted;\n}\n\n/**\n\tRepresents the field of an object declaration.\n**/\ntypedef ObjectField = {\n\t/**\n\t\tThe name of the field.\n\t**/\n\tvar field:String;\n\n\t/**\n\t\tThe field expression.\n\t**/\n\tvar expr:Expr;\n\n\t/**\n\t\tHow the field name is quoted.\n\t**/\n\tvar ?quotes:QuoteStatus;\n}\n\n/**\n\tRepresents function kind in the AST\n**/\nenum FunctionKind {\n\t/**\n\t\tAnonymous function\n\t**/\n\tFAnonymous;\n\n\t/**\n\t\tNamed function\n\t**/\n\tFNamed(name:String, ?inlined:Bool);\n\n\t/**\n\t\tArrow function\n\t**/\n\tFArrow;\n}\n\n/**\n\tRepresents the kind of a node in the AST.\n**/\nenum ExprDef {\n\t/**\n\t\tA constant.\n\t**/\n\tEConst(c:Constant);\n\n\t/**\n\t\tArray access `e1[e2]`.\n\t**/\n\tEArray(e1:Expr, e2:Expr);\n\n\t/**\n\t\tBinary operator `e1 op e2`.\n\t**/\n\tEBinop(op:Binop, e1:Expr, e2:Expr);\n\n\t/**\n\t\tField access on `e.field`.\n\n\t\tIf `kind` is null, it is equal to Normal.\n\t**/\n\tEField(e:Expr, field:String, ?kind:EFieldKind);\n\n\t/**\n\t\tParentheses `(e)`.\n\t**/\n\tEParenthesis(e:Expr);\n\n\t/**\n\t\tAn object declaration.\n\t**/\n\tEObjectDecl(fields:Array<ObjectField>);\n\n\t/**\n\t\tAn array declaration `[el]`.\n\t**/\n\tEArrayDecl(values:Array<Expr>);\n\n\t/**\n\t\tA call `e(params)`.\n\t**/\n\tECall(e:Expr, params:Array<Expr>);\n\n\t/**\n\t\tA constructor call `new t(params)`.\n\t**/\n\tENew(t:TypePath, params:Array<Expr>);\n\n\t/**\n\t\tAn unary operator `op` on `e`:\n\n\t\t- `e++` (`op = OpIncrement, postFix = true`)\n\t\t- `e--` (`op = OpDecrement, postFix = true`)\n\t\t- `++e` (`op = OpIncrement, postFix = false`)\n\t\t- `--e` (`op = OpDecrement, postFix = false`)\n\t\t- `-e` (`op = OpNeg, postFix = false`)\n\t\t- `!e` (`op = OpNot, postFix = false`)\n\t\t- `~e` (`op = OpNegBits, postFix = false`)\n\t**/\n\tEUnop(op:Unop, postFix:Bool, e:Expr);\n\n\t/**\n\t\tVariable declarations.\n\t**/\n\tEVars(vars:Array<Var>);\n\n\t/**\n\t\tA function declaration.\n\t**/\n\tEFunction(kind:Null<FunctionKind>, f:Function);\n\n\t/**\n\t\tA block of expressions `{exprs}`.\n\t**/\n\tEBlock(exprs:Array<Expr>);\n\n\t/**\n\t\tA `for` expression.\n\t**/\n\tEFor(it:Expr, expr:Expr);\n\n\t/**\n\t\tAn `if (econd) eif` or `if (econd) eif else eelse` expression.\n\t**/\n\tEIf(econd:Expr, eif:Expr, eelse:Null<Expr>);\n\n\t/**\n\t\tRepresents a `while` expression.\n\n\t\tWhen `normalWhile` is `true` it is `while (...)`.\n\n\t\tWhen `normalWhile` is `false` it is `do {...} while (...)`.\n\t**/\n\tEWhile(econd:Expr, e:Expr, normalWhile:Bool);\n\n\t/**\n\t\tRepresents a `switch` expression with related cases and an optional.\n\t\t`default` case if `edef != null`.\n\t**/\n\tESwitch(e:Expr, cases:Array<Case>, edef:Null<Expr>);\n\n\t/**\n\t\tRepresents a `try`-expression with related catches.\n\t**/\n\tETry(e:Expr, catches:Array<Catch>);\n\n\t/**\n\t\tA `return` or `return e` expression.\n\t**/\n\tEReturn(?e:Expr);\n\n\t/**\n\t\tA `break` expression.\n\t**/\n\tEBreak;\n\n\t/**\n\t\tA `continue` expression.\n\t**/\n\tEContinue;\n\n\t/**\n\t\tAn `untyped e` source code.\n\t**/\n\tEUntyped(e:Expr);\n\n\t/**\n\t\tA `throw e` expression.\n\t**/\n\tEThrow(e:Expr);\n\n\t/**\n\t\tA `cast e` or `cast (e, m)` expression.\n\t**/\n\tECast(e:Expr, t:Null<ComplexType>);\n\n\t/**\n\t\tUsed internally to provide completion.\n\t**/\n\tEDisplay(e:Expr, displayKind:DisplayKind);\n\n\t/**\n\t\tA `(econd) ? eif : eelse` expression.\n\t**/\n\tETernary(econd:Expr, eif:Expr, eelse:Expr);\n\n\t/**\n\t\tA `(e:t)` expression.\n\t**/\n\tECheckType(e:Expr, t:ComplexType);\n\n\t/**\n\t\tA `@m e` expression.\n\t**/\n\tEMeta(s:MetadataEntry, e:Expr);\n\n\t/**\n\t\tAn `expr is Type` expression.\n\t**/\n\tEIs(e:Expr, t:ComplexType);\n}\n\nenum DisplayKind {\n\tDKCall;\n\tDKDot;\n\tDKStructure;\n\tDKMarked;\n\tDKPattern(outermost:Bool);\n}\n\n/**\n\tRepresents a type syntax in the AST.\n**/\nenum ComplexType {\n\t/**\n\t\tRepresents the type path.\n\t**/\n\tTPath(p:TypePath);\n\n\t/**\n\t\tRepresents a function type.\n\t\t@see https://haxe.org/manual/types-function.html\n\t**/\n\tTFunction(args:Array<ComplexType>, ret:ComplexType);\n\n\t/**\n\t\tRepresents an anonymous structure type.\n\t\t@see https://haxe.org/manual/types-anonymous-structure.html\n\t**/\n\tTAnonymous(fields:Array<Field>);\n\n\t/**\n\t\tRepresents parentheses around a type, e.g. the `(Int -> Void)` part in\n\t\t`(Int -> Void) -> String`.\n\t**/\n\tTParent(t:ComplexType);\n\n\t/**\n\t\tRepresents typedef extensions `> Iterable<T>`.\n\t\tThe array `p` holds the type paths to the given types.\n\t\t@see https://haxe.org/manual/type-system-extensions.html\n\t**/\n\tTExtend(p:Array<TypePath>, fields:Array<Field>);\n\n\t/**\n\t\tRepresents an optional type.\n\t**/\n\tTOptional(t:ComplexType);\n\n\t/**\n\t\tRepresents a type with a name.\n\t**/\n\tTNamed(n:String, t:ComplexType);\n\n\t/**\n\t\tRepresents an intersection type `T1 & T2 & ... & TN`.\n\t**/\n\tTIntersection(tl:Array<ComplexType>);\n}\n\n/**\n\tRepresents a type path in the AST.\n**/\ntypedef TypePath = {\n\t/**\n\t\tRepresents the package of the type path.\n\t**/\n\tvar pack:Array<String>;\n\n\t/**\n\t\tThe name of the type path.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tOptional parameters of the type path.\n\t**/\n\tvar ?params:Array<TypeParam>;\n\n\t/**\n\t\tSub is set on module sub-type access:\n\t\t`pack.Module.Type` has `name = \"Module\"`, `sub = \"Type\"`, if available.\n\t**/\n\tvar ?sub:String;\n\n\t/**\n\t\tThe full position of the type path, including type parameters.\n\t**/\n\tvar ?pos:Position;\n\n\t/**\n\t\tThe position of the dot-path itself, without type parameters.\n\t**/\n\tvar ?posPath:Position;\n}\n\n/**\n\tRepresents a concrete type parameter in the AST.\n\n\tHaxe allows expressions in concrete type parameters, e.g.\n\t`new YourType<[\"hello\", \"world\"]>`. In that case the value is `TPExpr` while\n\tin the normal case it's `TPType`.\n**/\nenum TypeParam {\n\tTPType(t:ComplexType);\n\tTPExpr(e:Expr);\n}\n\n/**\n\tRepresents a type parameter declaration in the AST.\n**/\ntypedef TypeParamDecl = {\n\t/**\n\t\tThe name of the type parameter.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe optional constraints of the type parameter.\n\t**/\n\tvar ?constraints:Array<ComplexType>;\n\n\t/**\n\t\tThe optional default type of the type parameter.\n\t**/\n\tvar ?defaultType:Null<ComplexType>;\n\n\t/**\n\t\tThe optional parameters of the type parameter.\n\t**/\n\tvar ?params:Array<TypeParamDecl>;\n\n\t/**\n\t\tThe metadata of the type parameter.\n\t**/\n\tvar ?meta:Metadata;\n}\n\n/**\n\tRepresents a function in the AST.\n**/\ntypedef Function = {\n\t/**\n\t\tA list of function arguments.\n\t**/\n\tvar args:Array<FunctionArg>;\n\n\t/**\n\t\tThe return type-hint of the function, if available.\n\t**/\n\tvar ?ret:ComplexType;\n\n\t/**\n\t\tThe expression of the function body, if available.\n\t**/\n\tvar ?expr:Expr;\n\n\t/**\n\t\tAn optional list of function parameter type declarations.\n\t**/\n\tvar ?params:Array<TypeParamDecl>;\n}\n\n/**\n\tRepresents a function argument in the AST.\n**/\ntypedef FunctionArg = {\n\t/**\n\t\tThe name of the function argument.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tWhether or not the function argument is optional.\n\t**/\n\tvar ?opt:Bool;\n\n\t/**\n\t\tThe type-hint of the function argument, if available.\n\t**/\n\tvar ?type:ComplexType;\n\n\t/**\n\t\tThe optional value of the function argument, if available.\n\t**/\n\tvar ?value:Expr;\n\n\t/**\n\t\tThe metadata of the function argument.\n\t**/\n\tvar ?meta:Metadata;\n}\n\n/**\n\tRepresents a metadata entry in the AST.\n**/\ntypedef MetadataEntry = {\n\t/**\n\t\tThe name of the metadata entry.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe optional parameters of the metadata entry.\n\t**/\n\tvar ?params:Array<Expr>;\n\n\t/**\n\t\tThe position of the metadata entry.\n\t**/\n\tvar pos:Position;\n}\n\n/**\n\tRepresents metadata in the AST.\n**/\ntypedef Metadata = Array<MetadataEntry>;\n\n/**\n\tRepresents a field in the AST.\n**/\ntypedef Field = {\n\t/**\n\t\tThe name of the field.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe documentation of the field, if available. If the field has no\n\t\tdocumentation, the value is `null`.\n\t**/\n\tvar ?doc:String;\n\n\t/**\n\t\tThe access modifiers of the field. By default fields have private access.\n\t\t@see https://haxe.org/manual/class-field-access-modifier.html\n\t**/\n\tvar ?access:Array<Access>;\n\n\t/**\n\t\tThe kind of the field.\n\t**/\n\tvar kind:FieldType;\n\n\t/**\n\t\tThe position of the field.\n\t**/\n\tvar pos:Position;\n\n\t/**\n\t\tThe optional metadata of the field.\n\t**/\n\tvar ?meta:Metadata;\n}\n\n/**\n\tRepresents an access modifier.\n\t@see https://haxe.org/manual/class-field-access-modifier.html\n**/\nenum Access {\n\t/**\n\t\tPublic access modifier, grants access from anywhere.\n\t\t@see https://haxe.org/manual/class-field-visibility.html\n\t**/\n\tAPublic;\n\n\t/**\n\t\tPrivate access modifier, grants access to class and its sub-classes\n\t\tonly.\n\t\t@see https://haxe.org/manual/class-field-visibility.html\n\t**/\n\tAPrivate;\n\n\t/**\n\t\tStatic access modifier.\n\t**/\n\tAStatic;\n\n\t/**\n\t\tOverride access modifier.\n\t\t@see https://haxe.org/manual/class-field-override.html\n\t**/\n\tAOverride;\n\n\t/**\n\t\tDynamic (re-)bindable access modifier.\n\t\t@see https://haxe.org/manual/class-field-dynamic.html\n\t**/\n\tADynamic;\n\n\t/**\n\t\tInline access modifier. Allows expressions to be directly inserted in\n\t\tplace of calls to them.\n\t\t@see https://haxe.org/manual/class-field-inline.html\n\t**/\n\tAInline;\n\n\t/**\n\t\tMacro access modifier. Allows expression macro functions. These are\n\t\tnormal functions which are executed as soon as they are typed.\n\t**/\n\tAMacro;\n\n\t/**\n\t\tFinal access modifier. For functions, they can not be overridden. For\n\t\tvariables, it means they can be assigned to only once.\n\t**/\n\tAFinal;\n\n\t/**\n\t\tExtern access modifier.\n\t**/\n\tAExtern;\n\n\t/**\n\t\tAbstract access modifier.\n\t**/\n\tAAbstract;\n\n\t/**\n\t\tOverload access modifier.\n\t**/\n\tAOverload;\n\n\t/**\n\t\tEnum access modifier.\n\t**/\n\tAEnum;\n}\n\n/**\n\tRepresents the field type in the AST.\n**/\nenum FieldType {\n\t/**\n\t\tRepresents a variable field type.\n\t**/\n\tFVar(t:Null<ComplexType>, ?e:Expr);\n\n\t/**\n\t\tRepresents a function field type.\n\t**/\n\tFFun(f:Function);\n\n\t/**\n\t\tRepresents a property with getter and setter field type.\n\t**/\n\tFProp(get:String, set:String, ?t:ComplexType, ?e:Expr);\n}\n\n/**\n\tRepresents a type definition.\n**/\ntypedef TypeDefinition = {\n\t/**\n\t\tThe package of the type definition.\n\t**/\n\tvar pack:Array<String>;\n\n\t/**\n\t\tThe name of the type definition.\n\t**/\n\tvar name:String;\n\n\t/**\n\t\tThe documentation of the type, if available. If the type has no\n\t\tdocumentation, the value is `null`.\n\t**/\n\tvar ?doc:String;\n\n\t/**\n\t\tThe position to the type definition.\n\t**/\n\tvar pos:Position;\n\n\t/**\n\t\tThe optional metadata of the type definition.\n\t**/\n\tvar ?meta:Metadata;\n\n\t/**\n\t\tThe parameter type declarations of the type definition.\n\t**/\n\tvar ?params:Array<TypeParamDecl>;\n\n\t/**\n\t\tWhether or not the type is extern.\n\t**/\n\tvar ?isExtern:Bool;\n\n\t/**\n\t\tThe kind of the type definition.\n\t**/\n\tvar kind:TypeDefKind;\n\n\t/**\n\t\tThe fields of the type definition.\n\t**/\n\tvar fields:Array<Field>;\n}\n\n/**\n\tRepresents a type definition kind.\n**/\nenum TypeDefKind {\n\t/**\n\t\tRepresents an enum kind.\n\t**/\n\tTDEnum;\n\n\t/**\n\t\tRepresents a structure kind.\n\t**/\n\tTDStructure;\n\n\t/**\n\t\tRepresents a class kind.\n\t**/\n\tTDClass(?superClass:TypePath, ?interfaces:Array<TypePath>, ?isInterface:Bool, ?isFinal:Bool, ?isAbstract:Bool);\n\n\t/**\n\t\tRepresents an alias/typedef kind.\n\t**/\n\tTDAlias(t:ComplexType); // ignore TypeDefinition.fields\n\n\t/**\n\t\tRepresents an abstract kind.\n\t**/\n\tTDAbstract(tthis:Null<ComplexType>, ?flags:Array<AbstractFlag>, ?from:Array<ComplexType>, ?to:Array<ComplexType>);\n\n\t/**\n\t\tRepresents a module-level field.\n\t**/\n\tTDField(kind:FieldType, ?access:Array<Access>); // ignore TypeDefinition.fields\n\n}\n\n/**\n\tRepresents an abstract flag.\n**/\nenum AbstractFlag {\n\t/**\n\t\tIndicates that this abstract is an `enum abstract`\n\t**/\n\tAbEnum;\n\n\t/**\n\t\tIndicates that this abstract can be assigned from `ct`.\n\t\tThis flag can be added several times to add multiple \"from\" types.\n\t**/\n\tAbFrom(ct:ComplexType);\n\n\t/**\n\t\tIndicates that this abstract can be assigned to `ct`.\n\t\tThis flag can be added several times to add multiple \"to\" types.\n\t**/\n\tAbTo(ct:ComplexType);\n}\n\n/**\n\tThis error can be used to handle or produce compilation errors in macros.\n**/\nclass Error extends Exception {\n\t/**\n\t\tThe position of the error.\n\t**/\n\tpublic var pos:Position;\n\n\t/**\n\t\tChild error messages, if any.\n\t**/\n\tprivate var childErrors:Array<Error>;\n\n\t/**\n\t\tInstantiates an error with given message and position.\n\t**/\n\tpublic function new(message:String, pos:Position, ?previous:Exception) {\n\t\tsuper(message, previous);\n\t\tthis.pos = pos;\n\t}\n}\n\n/**\n\tRepresents the import mode.\n\t@see https://haxe.org/manual/type-system-import.html\n**/\nenum ImportMode {\n\t/**\n\t\tRepresents a default import `import c`.\n\t**/\n\tINormal;\n\n\t/**\n\t\tRepresents the alias import `import c as alias`.\n\t**/\n\tIAsName(alias:String);\n\n\t/**\n\t\tRepresents the wildcard import `import *`.\n\t**/\n\tIAll;\n}\n\n/**\n\tRepresents the import expression.\n**/\ntypedef ImportExpr = {\n\t/**\n\t\tThe path to the import expression.\n\t**/\n\tvar path:Array<{pos:Position, name:String}>;\n\n\t/**\n\t\tThe mode of the import expression.\n\t**/\n\tvar mode:ImportMode;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.macro;\n\nimport haxe.macro.Expr;\n\nusing Lambda;\n\n/**\n\tThis class provides some utility methods to work with expressions. It is\n\tbest used through 'using haxe.macro.ExprTools' syntax and then provides\n\tadditional methods on haxe.macro.Expr instances.\n\n\tWhile mainly intended to be used in macros, it works in non-macro code as\n\twell.\n**/\nclass ExprTools {\n\t/**\n\t\tConverts expression `e` to a human-readable String representation.\n\n\t\tThe result is guaranteed to be valid Haxe code, but there may be\n\t\tdifferences from the original lexical syntax.\n\t**/\n\tstatic public function toString(e:Expr):String\n\t\treturn new Printer().printExpr(e);\n\n\t/**\n\t\tCalls function `f` on each sub-expression of `e`.\n\n\t\tIf `e` has no sub-expressions, this operation has no effect.\n\n\t\tOtherwise `f` is called once per sub-expression of `e`, with the\n\t\tsub-expression as argument. These calls are done in order of the\n\t\tsub-expression declarations.\n\n\t\tThis method does not call itself recursively. It should instead be used\n\t\tin a recursive function which handles the expression nodes of interest.\n\n\t\tUsage example:\n\t\t```haxe\n\t\tfunction findStrings(e:Expr) {\n\t\t\tswitch(e.expr) {\n\t\t\t\tcase EConst(CString(s)):\n\t\t\t\t\t// handle s\n\t\t\t\tcase _:\n\t\t\t\t\tExprTools.iter(e, findStrings);\n\t\t\t}\n\t\t}\n\t\t```\n\t**/\n\tstatic public function iter(e:Expr, f:Expr->Void):Void {\n\t\tswitch (e.expr) {\n\t\t\tcase EConst(_), EContinue, EBreak:\n\t\t\tcase EField(e, _), EParenthesis(e), EUntyped(e), EThrow(e), EDisplay(e, _), ECheckType(e, _), EUnop(_, _, e), ECast(e, _), EIs(e, _) | EMeta(_, e):\n\t\t\t\tf(e);\n\t\t\tcase EArray(e1, e2), EWhile(e1, e2, _), EBinop(_, e1, e2), EFor(e1, e2):\n\t\t\t\tf(e1);\n\t\t\t\tf(e2);\n\t\t\tcase EVars(vl):\n\t\t\t\tfor (v in vl)\n\t\t\t\t\topt2(v.expr, f);\n\t\t\tcase ETry(e, cl):\n\t\t\t\tf(e);\n\t\t\t\tfor (c in cl)\n\t\t\t\t\tf(c.expr);\n\t\t\tcase ETernary(e1, e2, e3) | EIf(e1, e2, e3):\n\t\t\t\tf(e1);\n\t\t\t\tf(e2);\n\t\t\t\topt2(e3, f);\n\t\t\tcase EArrayDecl(el), ENew(_, el), EBlock(el):\n\t\t\t\tExprArrayTools.iter(el, f);\n\t\t\tcase EObjectDecl(fl):\n\t\t\t\tfor (fd in fl)\n\t\t\t\t\tf(fd.expr);\n\t\t\tcase ECall(e, el):\n\t\t\t\tf(e);\n\t\t\t\tExprArrayTools.iter(el, f);\n\t\t\tcase EReturn(e):\n\t\t\t\topt2(e, f);\n\t\t\tcase EFunction(_, func):\n\t\t\t\tfor (arg in func.args)\n\t\t\t\t\topt2(arg.value, f);\n\t\t\t\topt2(func.expr, f);\n\t\t\tcase ESwitch(e, cl, edef):\n\t\t\t\tf(e);\n\t\t\t\tfor (c in cl) {\n\t\t\t\t\tExprArrayTools.iter(c.values, f);\n\t\t\t\t\topt2(c.guard, f);\n\t\t\t\t\topt2(c.expr, f);\n\t\t\t\t}\n\t\t\t\tif (edef != null && edef.expr != null)\n\t\t\t\t\tf(edef);\n\t\t}\n\t}\n\n\t/**\n\t\tTransforms the sub-expressions of `e` by calling `f` on each of them.\n\n\t\tIf `e` has no sub-expressions, this operation returns `e` unchanged.\n\n\t\tOtherwise `f` is called once per sub-expression of `e`, with the\n\t\tsub-expression as argument. These calls are done in order of the\n\t\tsub-expression declarations.\n\n\t\tThis method does not call itself recursively. It should instead be used\n\t\tin a recursive function which handles the expression nodes of interest.\n\n\t\tUsage example:\n\t\t```haxe\n\t\tfunction capitalizeStrings(e:Expr) {\n\t\t\treturn switch(e.expr) {\n\t\t\t\tcase EConst(CString(s)):\n\t\t\t\t\t{ expr: EConst(CString(s.toUpperCase())), pos: e.pos };\n\t\t\t\tcase _:\n\t\t\t\t\tExprTools.map(e, capitalizeStrings);\n\t\t\t}\n\t\t}\n\t\t```\n\t**/\n\tstatic public function map(e:Expr, f:Expr->Expr):Expr {\n\t\treturn {\n\t\t\tpos: e.pos,\n\t\t\texpr: switch (e.expr) {\n\t\t\t\tcase EConst(_): e.expr;\n\t\t\t\tcase EArray(e1, e2): EArray(f(e1), f(e2));\n\t\t\t\tcase EBinop(op, e1, e2): EBinop(op, f(e1), f(e2));\n\t\t\t\tcase EField(e, field, kind): EField(f(e), field, kind);\n\t\t\t\tcase EParenthesis(e): EParenthesis(f(e));\n\t\t\t\tcase EObjectDecl(fields):\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tfor (field in fields)\n\t\t\t\t\t\tret.push({field: field.field, expr: f(field.expr), quotes: field.quotes});\n\t\t\t\t\tEObjectDecl(ret);\n\t\t\t\tcase EArrayDecl(el): EArrayDecl(ExprArrayTools.map(el, f));\n\t\t\t\tcase ECall(e, params): ECall(f(e), ExprArrayTools.map(params, f));\n\t\t\t\tcase ENew(tp, params): ENew(tp, ExprArrayTools.map(params, f));\n\t\t\t\tcase EUnop(op, postFix, e): EUnop(op, postFix, f(e));\n\t\t\t\tcase EVars(vars):\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tfor (v in vars) {\n\t\t\t\t\t\tvar v2:Var = {name: v.name, type: v.type, expr: opt(v.expr, f)};\n\t\t\t\t\t\tif (v.isFinal != null)\n\t\t\t\t\t\t\tv2.isFinal = v.isFinal;\n\t\t\t\t\t\tret.push(v2);\n\t\t\t\t\t}\n\t\t\t\t\tEVars(ret);\n\t\t\t\tcase EBlock(el): EBlock(ExprArrayTools.map(el, f));\n\t\t\t\tcase EFor(it, expr): EFor(f(it), f(expr));\n\t\t\t\tcase EIf(econd, eif, eelse): EIf(f(econd), f(eif), opt(eelse, f));\n\t\t\t\tcase EWhile(econd, e, normalWhile): EWhile(f(econd), f(e), normalWhile);\n\t\t\t\tcase EReturn(e): EReturn(opt(e, f));\n\t\t\t\tcase EUntyped(e): EUntyped(f(e));\n\t\t\t\tcase EThrow(e): EThrow(f(e));\n\t\t\t\tcase ECast(e, t): ECast(f(e), t);\n\t\t\t\tcase EIs(e, t): EIs(f(e), t);\n\t\t\t\tcase EDisplay(e, dk): EDisplay(f(e), dk);\n\t\t\t\tcase ETernary(econd, eif, eelse): ETernary(f(econd), f(eif), f(eelse));\n\t\t\t\tcase ECheckType(e, t): ECheckType(f(e), t);\n\t\t\t\tcase EContinue, EBreak:\n\t\t\t\t\te.expr;\n\t\t\t\tcase ETry(e, catches):\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tfor (c in catches)\n\t\t\t\t\t\tret.push({name: c.name, type: c.type, expr: f(c.expr)});\n\t\t\t\t\tETry(f(e), ret);\n\t\t\t\tcase ESwitch(e, cases, edef):\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tfor (c in cases)\n\t\t\t\t\t\tret.push({expr: opt(c.expr, f), guard: opt(c.guard, f), values: ExprArrayTools.map(c.values, f)});\n\t\t\t\t\tESwitch(f(e), ret, edef == null || edef.expr == null ? edef : f(edef));\n\t\t\t\tcase EFunction(kind, func):\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tfor (arg in func.args)\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\tname: arg.name,\n\t\t\t\t\t\t\topt: arg.opt,\n\t\t\t\t\t\t\ttype: arg.type,\n\t\t\t\t\t\t\tvalue: opt(arg.value, f)\n\t\t\t\t\t\t});\n\t\t\t\t\tEFunction(kind, {\n\t\t\t\t\t\targs: ret,\n\t\t\t\t\t\tret: func.ret,\n\t\t\t\t\t\tparams: func.params,\n\t\t\t\t\t\texpr: f(func.expr)\n\t\t\t\t\t});\n\t\t\t\tcase EMeta(m, e): EMeta(m, f(e));\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the value `e` represents.\n\n\t\tSupported expressions are:\n\n\t\t - `Int`, `Float` and `String` literals\n\t\t - identifiers `true`, `false` and `null`\n\t\t - structure declarations if all their fields are values\n\t\t - array declarations if all their elements are values\n\t\t - unary operators `-`, `!` and `~` if the operand is a value\n\t\t - binary operators except `=>`, `...` and assignments\n\n\t\tParentheses, metadata and the `untyped` keyword are ignored.\n\n\t\tIf any non-value is encountered, an exception of type `String` is\n\t\tthrown.\n\n\t\tIf `e` is null, the result is unspecified.\n\t**/\n\tstatic public function getValue(e:Expr):Dynamic {\n\t\treturn switch (e.expr) {\n\t\t\tcase EConst(CInt(v)): Std.parseInt(v);\n\t\t\tcase EConst(CFloat(v)): Std.parseFloat(v);\n\t\t\tcase EConst(CString(s)): s;\n\t\t\tcase EConst(CIdent(\"true\")): true;\n\t\t\tcase EConst(CIdent(\"false\")): false;\n\t\t\tcase EConst(CIdent(\"null\")): null;\n\t\t\tcase EParenthesis(e1) | EUntyped(e1) | EMeta(_, e1): getValue(e1);\n\t\t\tcase EObjectDecl(fields):\n\t\t\t\tvar obj = {};\n\t\t\t\tfor (field in fields) {\n\t\t\t\t\tReflect.setField(obj, field.field, getValue(field.expr));\n\t\t\t\t}\n\t\t\t\tobj;\n\t\t\tcase EArrayDecl(el): el.map(getValue);\n\t\t\tcase EIf(econd, eif, eelse) | ETernary(econd, eif, eelse):\n\t\t\t\tif (eelse == null) {\n\t\t\t\t\tthrow \"If statements only have a value if the else clause is defined\";\n\t\t\t\t} else {\n\t\t\t\t\tvar econd:Dynamic = getValue(econd);\n\t\t\t\t\tecond ? getValue(eif) : getValue(eelse);\n\t\t\t\t}\n\t\t\tcase EUnop(op, false, e1):\n\t\t\t\tvar e1:Dynamic = getValue(e1);\n\t\t\t\tswitch (op) {\n\t\t\t\t\tcase OpNot: !e1;\n\t\t\t\t\tcase OpNeg: -e1;\n\t\t\t\t\tcase OpNegBits: ~e1;\n\t\t\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t\t\t}\n\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\tvar e1:Dynamic = getValue(e1);\n\t\t\t\tvar e2:Dynamic = getValue(e2);\n\t\t\t\tswitch (op) {\n\t\t\t\t\tcase OpAdd: e1 + e2;\n\t\t\t\t\tcase OpSub: e1 - e2;\n\t\t\t\t\tcase OpMult: e1 * e2;\n\t\t\t\t\tcase OpDiv: e1 / e2;\n\t\t\t\t\tcase OpMod: e1 % e2;\n\t\t\t\t\tcase OpEq: e1 == e2;\n\t\t\t\t\tcase OpNotEq: e1 != e2;\n\t\t\t\t\tcase OpLt: e1 < e2;\n\t\t\t\t\tcase OpLte: e1 <= e2;\n\t\t\t\t\tcase OpGt: e1 > e2;\n\t\t\t\t\tcase OpGte: e1 >= e2;\n\t\t\t\t\tcase OpOr: e1 | e2;\n\t\t\t\t\tcase OpAnd: e1 & e2;\n\t\t\t\t\tcase OpXor: e1 ^ e2;\n\t\t\t\t\tcase OpBoolAnd: e1 && e2;\n\t\t\t\t\tcase OpBoolOr: e1 || e2;\n\t\t\t\t\tcase OpShl: e1 << e2;\n\t\t\t\t\tcase OpShr: e1 >> e2;\n\t\t\t\t\tcase OpUShr: e1 >>> e2;\n\t\t\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t\t\t}\n\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t}\n\t}\n\n\tstatic inline function opt(e:Null<Expr>, f:Expr->Expr):Expr\n\t\treturn e == null ? null : f(e);\n\n\tstatic inline function opt2(e:Null<Expr>, f:Expr->Void):Void\n\t\tif (e != null)\n\t\t\tf(e);\n}\n\n/**\n\tThis class provides functions on expression arrays for convenience. For a\n\tdetailed reference on each method, see the documentation of ExprTools.\n**/\nclass ExprArrayTools {\n\tstatic public function map(el:Array<Expr>, f:Expr->Expr):Array<Expr> {\n\t\tvar ret = [];\n\t\tfor (e in el)\n\t\t\tret.push(f(e));\n\t\treturn ret;\n\t}\n\n\tstatic public function iter(el:Array<Expr>, f:Expr->Void):Void {\n\t\tfor (e in el)\n\t\t\tf(e);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.macro;\n\nimport haxe.macro.Expr;\n\nusing Lambda;\nusing StringTools;\n\n/**\n\tThis class provides some utility methods to convert elements from the\n\tmacro context to a human-readable String representation.\n\n\tThis is only guaranteed to work with data that corresponds to valid Haxe\n\tsyntax.\n */\nclass Printer {\n\tvar tabs:String;\n\tvar tabString:String;\n\n\tpublic function new(?tabString = \"\\t\") {\n\t\ttabs = \"\";\n\t\tthis.tabString = tabString;\n\t}\n\n\tpublic function printUnop(op:Unop)\n\t\treturn switch (op) {\n\t\t\tcase OpIncrement: \"++\";\n\t\t\tcase OpDecrement: \"--\";\n\t\t\tcase OpNot: \"!\";\n\t\t\tcase OpNeg: \"-\";\n\t\t\tcase OpNegBits: \"~\";\n\t\t\tcase OpSpread: \"...\";\n\t\t}\n\n\tpublic function printBinop(op:Binop)\n\t\treturn switch (op) {\n\t\t\tcase OpAdd: \"+\";\n\t\t\tcase OpMult: \"*\";\n\t\t\tcase OpDiv: \"/\";\n\t\t\tcase OpSub: \"-\";\n\t\t\tcase OpAssign: \"=\";\n\t\t\tcase OpEq: \"==\";\n\t\t\tcase OpNotEq: \"!=\";\n\t\t\tcase OpGt: \">\";\n\t\t\tcase OpGte: \">=\";\n\t\t\tcase OpLt: \"<\";\n\t\t\tcase OpLte: \"<=\";\n\t\t\tcase OpAnd: \"&\";\n\t\t\tcase OpOr: \"|\";\n\t\t\tcase OpXor: \"^\";\n\t\t\tcase OpBoolAnd: \"&&\";\n\t\t\tcase OpBoolOr: \"||\";\n\t\t\tcase OpShl: \"<<\";\n\t\t\tcase OpShr: \">>\";\n\t\t\tcase OpUShr: \">>>\";\n\t\t\tcase OpMod: \"%\";\n\t\t\tcase OpInterval: \"...\";\n\t\t\tcase OpArrow: \"=>\";\n\t\t\tcase OpIn: \"in\";\n\t\t\tcase OpNullCoal: \"??\";\n\t\t\tcase OpAssignOp(op):\n\t\t\t\tprintBinop(op) + \"=\";\n\t\t}\n\n\tfunction escapeString(s:String, delim:String) {\n\t\treturn delim\n\t\t\t+ s.replace('\\\\', '\\\\\\\\')\n\t\t\t\t.replace(\"\\n\", \"\\\\n\")\n\t\t\t\t.replace(\"\\t\", \"\\\\t\")\n\t\t\t\t.replace(\"\\r\", \"\\\\r\")\n\t\t\t\t.replace(\"'\", \"\\\\'\")\n\t\t\t\t.replace('\"', \"\\\\\\\"\")\n\t\t\t\t#if sys .replace(\"\\x00\", \"\\\\x00\") #end + delim;\n\t}\n\n\tpublic function printFormatString(s:String) {\n\t\treturn escapeString(s, \"'\");\n\t}\n\n\tpublic function printString(s:String) {\n\t\treturn escapeString(s, '\"');\n\t}\n\n\tpublic function printConstant(c:Constant)\n\t\treturn switch (c) {\n\t\t\tcase CString(s, SingleQuotes): printFormatString(s);\n\t\t\tcase CString(s, _): printString(s);\n\t\t\tcase CIdent(s), CInt(s, null), CFloat(s, null):\n\t\t\t\ts;\n\t\t\tcase CInt(s, suffix), CFloat(s, suffix):\n\t\t\t\ts + suffix;\n\t\t\tcase CRegexp(s, opt): '~/$s/$opt';\n\t\t}\n\n\tpublic function printTypeParam(param:TypeParam)\n\t\treturn switch (param) {\n\t\t\tcase TPType(ct): printComplexType(ct);\n\t\t\tcase TPExpr(e): printExpr(e);\n\t\t}\n\n\tpublic function printTypePath(tp:TypePath)\n\t\treturn (tp.pack.length > 0 ? tp.pack.join(\".\") + \".\" : \"\")\n\t\t\t+ tp.name\n\t\t\t+ (tp.sub != null ? '.${tp.sub}' : \"\")\n\t\t\t+ (tp.params == null ? \"\" : tp.params.length > 0 ? \"<\" + tp.params.map(printTypeParam).join(\", \") + \">\" : \"\");\n\n\t// TODO: check if this can cause loops\n\tpublic function printComplexType(ct:ComplexType)\n\t\treturn switch (ct) {\n\t\t\tcase TPath(tp): printTypePath(tp);\n\t\t\tcase TFunction(args, ret):\n\t\t\t\tvar wrapArgumentsInParentheses = switch args {\n\t\t\t\t\t// type `:(a:X) -> Y` has args as [TParent(TNamed(...))], i.e `a:X` gets wrapped in `TParent()`. We don't add parentheses to avoid printing `:((a:X)) -> Y`\n\t\t\t\t\tcase [TParent(t)]: false;\n\t\t\t\t\t// this case catches a single argument that's a type-path, so that `X -> Y` prints `X -> Y` not `(X) -> Y`\n\t\t\t\t\tcase [TPath(_) | TOptional(TPath(_))]: false;\n\t\t\t\t\tdefault: true;\n\t\t\t\t}\n\t\t\t\tvar argStr = args.map(printComplexType).join(\", \");\n\t\t\t\t(wrapArgumentsInParentheses ? '($argStr)' : argStr) + \" -> \" + (switch ret {\n\t\t\t\t\t// wrap return type in parentheses if it's also a function\n\t\t\t\t\tcase TFunction(_): '(${printComplexType(ret)})';\n\t\t\t\t\tdefault: (printComplexType(ret) : String);\n\t\t\t\t});\n\t\t\tcase TAnonymous(fields): \"{ \" + [for (f in fields) printField(f) + \"; \"].join(\"\") + \"}\";\n\t\t\tcase TParent(ct): \"(\" + printComplexType(ct) + \")\";\n\t\t\tcase TOptional(ct): \"?\" + printComplexType(ct);\n\t\t\tcase TNamed(n, ct): n + \":\" + printComplexType(ct);\n\t\t\tcase TExtend(tpl, fields):\n\t\t\t\tvar types = [for (t in tpl) \"> \" + printTypePath(t) + \", \"].join(\"\");\n\t\t\t\tvar fields = [for (f in fields) printField(f) + \"; \"].join(\"\");\n\t\t\t\t'{${types}${fields}}';\n\t\t\tcase TIntersection(tl): tl.map(printComplexType).join(\" & \");\n\t\t}\n\n\tpublic function printMetadata(meta:MetadataEntry)\n\t\treturn '@${meta.name}' + ((meta.params != null && meta.params.length > 0) ? '(${printExprs(meta.params, \", \")})' : \"\");\n\n\tpublic function printAccess(access:Access)\n\t\treturn switch (access) {\n\t\t\tcase AStatic: \"static\";\n\t\t\tcase APublic: \"public\";\n\t\t\tcase APrivate: \"private\";\n\t\t\tcase AOverride: \"override\";\n\t\t\tcase AInline: \"inline\";\n\t\t\tcase ADynamic: \"dynamic\";\n\t\t\tcase AMacro: \"macro\";\n\t\t\tcase AFinal: \"final\";\n\t\t\tcase AExtern: \"extern\";\n\t\t\tcase AAbstract: \"abstract\";\n\t\t\tcase AOverload: \"overload\";\n\t\t\tcase AEnum: \"enum\";\n\t\t}\n\n\tpublic function printField(field:Field) {\n\t\tinline function orderAccess(access:Array<Access>) {\n\t\t\t// final should always be printed last\n\t\t\t// (does not modify input array)\n\t\t\treturn access.has(AFinal) ? access.filter(a -> !a.match(AFinal)).concat([AFinal]) : access;\n\t\t}\n\t\treturn (field.doc != null\n\t\t\t&& field.doc != \"\" ? \"/**\\n\"\n\t\t\t\t+ tabs\n\t\t\t\t+ tabString\n\t\t\t\t+ StringTools.replace(field.doc, \"\\n\", \"\\n\" + tabs + tabString)\n\t\t\t\t+ \"\\n\"\n\t\t\t\t+ tabs\n\t\t\t\t+ \"**/\\n\"\n\t\t\t\t+ tabs : \"\")\n\t\t\t+ (field.meta != null && field.meta.length > 0 ? field.meta.map(printMetadata).join('\\n$tabs') + '\\n$tabs' : \"\")\n\t\t\t+ (field.access != null && field.access.length > 0 ? orderAccess(field.access).map(printAccess).join(\" \") + \" \" : \"\")\n\t\t\t+ switch (field.kind) {\n\t\t\t\tcase FVar(t,\n\t\t\t\t\teo): ((field.access != null && field.access.has(AFinal)) ? '' : 'var ')\n\t\t\t\t\t\t+ '${field.name}'\n\t\t\t\t\t\t+ opt(t, printComplexType, \" : \")\n\t\t\t\t\t\t+ opt(eo, printExpr, \" = \");\n\t\t\t\tcase FProp(get, set, t, eo): 'var ${field.name}($get, $set)' + opt(t, printComplexType, \" : \") + opt(eo, printExpr, \" = \");\n\t\t\t\tcase FFun(func): 'function ${field.name}' + printFunction(func);\n\t\t\t}}\n\n\tpublic function printTypeParamDecl(tpd:TypeParamDecl)\n\t\treturn (tpd.meta != null && tpd.meta.length > 0 ? tpd.meta.map(printMetadata).join(\" \") + \" \" : \"\")\n\t\t\t+ tpd.name\n\t\t\t+ (tpd.params != null && tpd.params.length > 0 ? \"<\" + tpd.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t+ (tpd.constraints != null && tpd.constraints.length > 0 ? \":(\" + tpd.constraints.map(printComplexType).join(\" & \") + \")\" : \"\")\n\t\t\t+ (tpd.defaultType != null ? \"=\" + printComplexType(tpd.defaultType) : \"\");\n\n\tpublic function printFunctionArg(arg:FunctionArg)\n\t\treturn (arg.opt ? \"?\" : \"\") + arg.name + opt(arg.type, printComplexType, \":\") + opt(arg.value, printExpr, \" = \");\n\n\tpublic function printFunction(func:Function, ?kind:FunctionKind) {\n\t\tvar skipParentheses = switch func.args {\n\t\t\tcase [{type: null}]: kind == FArrow;\n\t\t\tcase _: false;\n\t\t}\n\t\treturn (func.params == null ? \"\" : func.params.length > 0 ? \"<\" + func.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t+ (skipParentheses ? \"\" : \"(\")\n\t\t\t+ func.args.map(printFunctionArg).join(\", \")\n\t\t\t+ (skipParentheses ? \"\" : \")\")\n\t\t\t+ (kind == FArrow ? \" ->\" : \"\")\n\t\t\t+ opt(func.ret, printComplexType, \":\")\n\t\t\t+ opt(func.expr, printExpr, \" \");\n\t}\n\n\tpublic function printVar(v:Var) {\n\t\tvar s = v.name + opt(v.type, printComplexType, \":\") + opt(v.expr, printExpr, \" = \");\n\t\treturn switch v.meta {\n\t\t\tcase null | []: s;\n\t\t\tcase meta: meta.map(printMetadata).join(\" \") + \" \" + s;\n\t\t}\n\t}\n\n\tpublic function printObjectFieldKey(of:ObjectField) {\n\t\treturn switch (of.quotes) {\n\t\t\tcase null | Unquoted: of.field;\n\t\t\tcase Quoted: '\"${of.field}\"'; // TODO: Have to escape that?\n\t\t}\n\t}\n\n\tpublic function printObjectField(of:ObjectField) {\n\t\treturn '${printObjectFieldKey(of)} : ${printExpr(of.expr)}';\n\t}\n\n\tpublic function printExpr(e:Expr)\n\t\treturn e == null ? \"#NULL\" : switch (e.expr) {\n\t\t\tcase EConst(c): printConstant(c);\n\t\t\tcase EArray(e1, e2): '${printExpr(e1)}[${printExpr(e2)}]';\n\t\t\tcase EBinop(op, e1, e2): '${printExpr(e1)} ${printBinop(op)} ${printExpr(e2)}';\n\t\t\tcase EField(e1, n, kind): kind == Safe ? '${printExpr(e1)}?.$n' : '${printExpr(e1)}.$n';\n\t\t\tcase EParenthesis(e1): '(${printExpr(e1)})';\n\t\t\tcase EObjectDecl(fl):\n\t\t\t\t\"{ \" + fl.map(function(fld) return printObjectField(fld)).join(\", \") + \" }\";\n\t\t\tcase EArrayDecl(el): '[${printExprs(el, \", \")}]';\n\t\t\tcase ECall(e1, el): '${printExpr(e1)}(${printExprs(el, \", \")})';\n\t\t\tcase ENew(tp, el): 'new ${printTypePath(tp)}(${printExprs(el, \", \")})';\n\t\t\tcase EUnop(op, true, e1): printExpr(e1) + printUnop(op);\n\t\t\tcase EUnop(op, false, e1): printUnop(op) + printExpr(e1);\n\t\t\tcase EFunction(FNamed(no, inlined), func): (inlined ? 'inline ' : '') + 'function $no' + printFunction(func);\n\t\t\tcase EFunction(kind, func): (kind != FArrow ? \"function\" : \"\") + printFunction(func, kind);\n\t\t\tcase EVars([]): \"var \";\n\t\t\tcase EVars(vl): ((vl[0].isStatic) ? \"static \" : \"\") + ((vl[0].isFinal) ? \"final \" : \"var \") + vl.map(printVar).join(\", \");\n\t\t\tcase EBlock([]): '{ }';\n\t\t\tcase EBlock(el):\n\t\t\t\tvar old = tabs;\n\t\t\t\ttabs += tabString;\n\t\t\t\tvar s = '{\\n$tabs' + printExprs(el, ';\\n$tabs');\n\t\t\t\ttabs = old;\n\t\t\t\ts + ';\\n$tabs}';\n\t\t\tcase EFor(e1, e2): 'for (${printExpr(e1)}) ${printExpr(e2)}';\n\t\t\tcase EIf(econd, eif, null): 'if (${printExpr(econd)}) ${printExpr(eif)}';\n\t\t\tcase EIf(econd, eif, eelse): 'if (${printExpr(econd)}) ${printExpr(eif)} else ${printExpr(eelse)}';\n\t\t\tcase EWhile(econd, e1, true): 'while (${printExpr(econd)}) ${printExpr(e1)}';\n\t\t\tcase EWhile(econd, e1, false): 'do ${printExpr(e1)} while (${printExpr(econd)})';\n\t\t\tcase ESwitch(e1, cl, edef):\n\t\t\t\tvar old = tabs;\n\t\t\t\ttabs += tabString;\n\t\t\t\tvar s = 'switch ${printExpr(e1)} {\\n$tabs'\n\t\t\t\t\t+ cl.map(function(c) return 'case ${printExprs(c.values, \", \")}' + (c.guard != null ? ' if (${printExpr(c.guard)}):' : \":\")\n\t\t\t\t\t\t+ (c.expr != null ? (opt(c.expr, printExpr)) + \";\" : \"\"))\n\t\t\t\t\t\t.join('\\n$tabs');\n\t\t\t\tif (edef != null)\n\t\t\t\t\ts += '\\n${tabs}default:' + (edef.expr == null ? \"\" : printExpr(edef) + \";\");\n\t\t\t\ttabs = old;\n\t\t\t\ts + '\\n$tabs}';\n\t\t\tcase ETry(e1, cl):\n\t\t\t\t'try ${printExpr(e1)}' + cl.map(function(c) return\n\t\t\t\t\t' catch(${c.name}${c.type == null ? '' : (':' + printComplexType(c.type))}) ${printExpr(c.expr)}')\n\t\t\t\t\t.join(\"\");\n\t\t\tcase EReturn(eo): \"return\" + opt(eo, printExpr, \" \");\n\t\t\tcase EBreak: \"break\";\n\t\t\tcase EContinue: \"continue\";\n\t\t\tcase EUntyped(e1): \"untyped \" + printExpr(e1);\n\t\t\tcase EThrow(e1): \"throw \" + printExpr(e1);\n\t\t\tcase ECast(e1, cto) if (cto != null): 'cast(${printExpr(e1)}, ${printComplexType(cto)})';\n\t\t\tcase ECast(e1, _): \"cast \" + printExpr(e1);\n\t\t\tcase EIs(e1, ct): '${printExpr(e1)} is ${printComplexType(ct)}';\n\t\t\tcase EDisplay(e1, _): '#DISPLAY(${printExpr(e1)})';\n\t\t\tcase ETernary(econd, eif, eelse): '${printExpr(econd)} ? ${printExpr(eif)} : ${printExpr(eelse)}';\n\t\t\tcase ECheckType(e1, ct): '(${printExpr(e1)} : ${printComplexType(ct)})';\n\t\t\tcase EMeta({name: \":implicitReturn\"}, {expr: EReturn(e1)}): printExpr(e1);\n\t\t\tcase EMeta(meta, e1): printMetadata(meta) + \" \" + printExpr(e1);\n\t\t}\n\n\tpublic function printExprs(el:Array<Expr>, sep:String) {\n\t\treturn el.map(printExpr).join(sep);\n\t}\n\n\tfunction printExtension(tpl:Array<TypePath>, fields:Array<Field>) {\n\t\treturn '{\\n$tabs>'\n\t\t\t+ tpl.map(printTypePath).join(',\\n$tabs>')\n\t\t\t+ \",\"\n\t\t\t+ (fields.length > 0 ? ('\\n$tabs' + fields.map(printField).join(';\\n$tabs') + \";\\n}\") : (\"\\n}\"));\n\t}\n\n\tfunction printStructure(fields:Array<Field>) {\n\t\treturn fields.length == 0 ? \"{ }\" : '{\\n$tabs' + fields.map(printField).join(';\\n$tabs') + \";\\n}\";\n\t}\n\n\tpublic function printTypeDefinition(t:TypeDefinition, printPackage = true):String {\n\t\tvar old = tabs;\n\t\ttabs = tabString;\n\n\t\tvar str = t == null ? \"#NULL\" : (printPackage && t.pack.length > 0 && t.pack[0] != \"\" ? \"package \" + t.pack.join(\".\") + \";\\n\" : \"\")\n\t\t\t+ (t.doc != null && t.doc != \"\" ? \"/**\\n\" + tabString + StringTools.replace(t.doc, \"\\n\", \"\\n\" + tabString) + \"\\n**/\\n\" : \"\")\n\t\t\t+ (t.meta != null && t.meta.length > 0 ? t.meta.map(printMetadata).join(\" \") + \" \" : \"\")\n\t\t\t+ (t.isExtern ? \"extern \" : \"\")\n\t\t\t+ switch (t.kind) {\n\t\t\t\tcase TDEnum:\n\t\t\t\t\t\"enum \"\n\t\t\t\t\t+ t.name\n\t\t\t\t\t+ ((t.params != null && t.params.length > 0) ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t+ \" {\\n\"\n\t\t\t\t\t+ [\n\t\t\t\t\t\tfor (field in t.fields)\n\t\t\t\t\t\t\ttabs\n\t\t\t\t\t\t\t+ (field.doc != null\n\t\t\t\t\t\t\t\t&& field.doc != \"\" ? \"/**\\n\"\n\t\t\t\t\t\t\t\t\t+ tabs\n\t\t\t\t\t\t\t\t\t+ tabString\n\t\t\t\t\t\t\t\t\t+ StringTools.replace(field.doc, \"\\n\", \"\\n\" + tabs + tabString)\n\t\t\t\t\t\t\t\t\t+ \"\\n\"\n\t\t\t\t\t\t\t\t\t+ tabs\n\t\t\t\t\t\t\t\t\t+ \"**/\\n\"\n\t\t\t\t\t\t\t\t\t+ tabs : \"\")\n\t\t\t\t\t\t\t+ (field.meta != null && field.meta.length > 0 ? field.meta.map(printMetadata).join(\" \") + \" \" : \"\")\n\t\t\t\t\t\t\t+ (switch (field.kind) {\n\t\t\t\t\t\t\t\tcase FVar(t, _): field.name + opt(t, printComplexType, \":\");\n\t\t\t\t\t\t\t\tcase FProp(_, _, _, _): throw \"FProp is invalid for TDEnum.\";\n\t\t\t\t\t\t\t\tcase FFun(func): field.name + printFunction(func);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t+ \";\"].join(\"\\n\") + \"\\n}\";\n\t\t\t\tcase TDStructure:\n\t\t\t\t\t\"typedef \"\n\t\t\t\t\t+ t.name\n\t\t\t\t\t+ ((t.params != null && t.params.length > 0) ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t+ \" = {\\n\"\n\t\t\t\t\t+ [\n\t\t\t\t\t\tfor (f in t.fields) {\n\t\t\t\t\t\t\ttabs + printField(f) + \";\";\n\t\t\t\t\t\t}\n\t\t\t\t\t].join(\"\\n\") + \"\\n}\";\n\t\t\t\tcase TDClass(superClass, interfaces, isInterface, isFinal, isAbstract):\n\t\t\t\t\t(isFinal ? \"final \" : \"\")\n\t\t\t\t\t\t+ (isAbstract ? \"abstract \" : \"\")\n\t\t\t\t\t\t+ (isInterface ? \"interface \" : \"class \")\n\t\t\t\t\t\t+ t.name\n\t\t\t\t\t\t+ (t.params != null && t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t\t+ (superClass != null ? \" extends \" + printTypePath(superClass) : \"\")\n\t\t\t\t\t\t+ (interfaces != null ? (isInterface ? [for (tp in interfaces) \" extends \" + printTypePath(tp)] : [\n\t\t\t\t\t\t\tfor (tp in interfaces)\n\t\t\t\t\t\t\t\t\" implements \" + printTypePath(tp)\n\t\t\t\t\t\t]).join(\"\") : \"\")\n\t\t\t\t\t\t+ \" {\\n\"\n\t\t\t\t\t\t+ [\n\t\t\t\t\t\t\tfor (f in t.fields) {\n\t\t\t\t\t\t\t\ttabs + printFieldWithDelimiter(f);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t].join(\"\\n\") + \"\\n}\";\n\t\t\t\tcase TDAlias(ct):\n\t\t\t\t\t\"typedef \"\n\t\t\t\t\t+ t.name\n\t\t\t\t\t+ ((t.params != null && t.params.length > 0) ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t+ \" = \"\n\t\t\t\t\t+ (switch (ct) {\n\t\t\t\t\t\tcase TExtend(tpl, fields): printExtension(tpl, fields);\n\t\t\t\t\t\tcase TAnonymous(fields): printStructure(fields);\n\t\t\t\t\t\tcase _: printComplexType(ct);\n\t\t\t\t\t})\n\t\t\t\t\t+ \";\";\n\t\t\t\tcase TDAbstract(tthis, tflags, from, to):\n\t\t\t\t\tvar from = from == null ? [] : from.copy();\n\t\t\t\t\tvar to = to == null ? [] : to.copy();\n\t\t\t\t\tvar isEnum = false;\n\n\t\t\t\t\tif (tflags != null) {\n\t\t\t\t\t\tfor (flag in tflags) {\n\t\t\t\t\t\t\tswitch (flag) {\n\t\t\t\t\t\t\t\tcase AbEnum: isEnum = true;\n\t\t\t\t\t\t\t\tcase AbFrom(ct): from.push(ct);\n\t\t\t\t\t\t\t\tcase AbTo(ct): to.push(ct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t(isEnum ? \"enum \" : \"\")\n\t\t\t\t\t\t+ \"abstract \"\n\t\t\t\t\t\t+ t.name\n\t\t\t\t\t\t+ ((t.params != null && t.params.length > 0) ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t\t+ (tthis == null ? \"\" : \"(\" + printComplexType(tthis) + \")\")\n\t\t\t\t\t\t+ [for (f in from) \" from \" + printComplexType(f)].join(\"\") + [for (f in to) \" to \" + printComplexType(f)].join(\"\") + \" {\\n\" + [\n\t\t\t\t\t\t\tfor (f in t.fields) {\n\t\t\t\t\t\t\t\ttabs + printFieldWithDelimiter(f);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t].join(\"\\n\") + \"\\n}\";\n\t\t\t\tcase TDField(kind, access):\n\t\t\t\t\ttabs = old;\n\t\t\t\t\t(access != null && access.length > 0 ? access.map(printAccess).join(\" \") + \" \" : \"\") + switch (kind) {\n\t\t\t\t\t\tcase FVar(type,\n\t\t\t\t\t\t\teo): ((access != null && access.has(AFinal)) ? '' : 'var ') + '${t.name}' + opt(type, printComplexType, \" : \")\n\t\t\t\t\t\t\t\t+ opt(eo, printExpr, \" = \") + \";\";\n\t\t\t\t\t\tcase FProp(get, set, type, eo): 'var ${t.name}($get, $set)'\n\t\t\t\t\t\t\t+ opt(type, printComplexType, \" : \")\n\t\t\t\t\t\t\t+ opt(eo, printExpr, \" = \")\n\t\t\t\t\t\t\t+ \";\";\n\t\t\t\t\t\tcase FFun(func): 'function ${t.name}' + printFunction(func) + switch func.expr {\n\t\t\t\t\t\t\t\tcase {expr: EBlock(_)}: \"\";\n\t\t\t\t\t\t\t\tcase _: \";\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t} tabs = old;\n\n\t\treturn str;\n\t}\n\n\tfunction printFieldWithDelimiter(f:Field):String {\n\t\treturn printField(f) + switch (f.kind) {\n\t\t\tcase FVar(_, _), FProp(_, _, _, _): \";\";\n\t\t\tcase FFun({expr: null}): \";\";\n\t\t\tcase FFun({expr: {expr: EBlock(_)}}): \"\";\n\t\t\tcase FFun(_): \";\";\n\t\t\tcase _: \"\";\n\t\t};\n\t}\n\n\tfunction opt<T>(v:T, f:T->String, prefix = \"\")\n\t\treturn v == null ? \"\" : (prefix + f(v));\n\n\tpublic function printExprWithPositions(e:Expr) {\n\t\tvar buffer = new StringBuf();\n\t\tfunction format4(i:Int) {\n\t\t\treturn StringTools.lpad(Std.string(i), \" \", 4);\n\t\t}\n\t\tfunction loop(tabs:String, e:Expr) {\n\t\t\tfunction add(s:String, ?p = null) {\n\t\t\t\tif (p == null) {\n\t\t\t\t\tp = e.pos;\n\t\t\t\t}\n\t\t\t\tvar p = #if macro haxe.macro.Context.getPosInfos(p) #else e.pos #end;\n\t\t\t\tbuffer.add('${format4(p.min)}-${format4(p.max)} $tabs$s\\n');\n\t\t\t}\n\t\t\tfunction loopI(e:Expr)\n\t\t\t\tloop(tabs + tabString, e);\n\t\t\tswitch (e.expr) {\n\t\t\t\tcase EConst(c):\n\t\t\t\t\tadd(printConstant(c));\n\t\t\t\tcase EArray(e1, e2):\n\t\t\t\t\tadd(\"EArray\");\n\t\t\t\t\tloopI(e1);\n\t\t\t\t\tloopI(e2);\n\t\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\t\tadd(\"EBinop \" + printBinop(op));\n\t\t\t\t\tloopI(e1);\n\t\t\t\t\tloopI(e2);\n\t\t\t\tcase EField(e, field, kind):\n\t\t\t\t\tif (kind == null)\n\t\t\t\t\t\tkind = Normal;\n\t\t\t\t\tadd('EField $field (${kind.getName()})');\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EParenthesis(e):\n\t\t\t\t\tadd(\"EParenthesis\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EObjectDecl(fields):\n\t\t\t\t\tadd(\"EObjectDecl\");\n\t\t\t\t\tfor (field in fields) {\n\t\t\t\t\t\tadd(field.field); // TODO: we don't have the field pos?\n\t\t\t\t\t\tloopI(field.expr);\n\t\t\t\t\t}\n\t\t\t\tcase EArrayDecl(values):\n\t\t\t\t\tadd(\"EArrayDecl\");\n\t\t\t\t\tvalues.iter(loopI);\n\t\t\t\tcase ECall(e, params):\n\t\t\t\t\tadd(\"ECall\");\n\t\t\t\t\tloopI(e);\n\t\t\t\t\tparams.iter(loopI);\n\t\t\t\tcase ENew(tp, params):\n\t\t\t\t\tadd(\"ENew \" + printTypePath(tp));\n\t\t\t\t\tparams.iter(loopI);\n\t\t\t\tcase EUnop(op, postFix, e):\n\t\t\t\t\tadd(\"EUnop \" + printUnop(op));\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EVars(vars):\n\t\t\t\t\tadd(\"EVars\");\n\t\t\t\t\tfor (v in vars) {\n\t\t\t\t\t\tif (v.expr != null) {\n\t\t\t\t\t\t\tadd(v.name);\n\t\t\t\t\t\t\tloopI(v.expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcase EFunction(_, f):\n\t\t\t\t\tadd(\"EFunction\");\n\t\t\t\t\tif (f.expr != null) {\n\t\t\t\t\t\tloopI(f.expr);\n\t\t\t\t\t}\n\t\t\t\tcase EBlock(exprs):\n\t\t\t\t\tadd(\"EBlock\");\n\t\t\t\t\texprs.iter(loopI);\n\t\t\t\tcase EFor(it, expr):\n\t\t\t\t\tadd(\"EFor\");\n\t\t\t\t\tloopI(it);\n\t\t\t\t\tloopI(expr);\n\t\t\t\tcase EIf(econd, eif, eelse):\n\t\t\t\t\tadd(\"EIf\");\n\t\t\t\t\tloopI(econd);\n\t\t\t\t\tloopI(eif);\n\t\t\t\t\tif (eelse != null) {\n\t\t\t\t\t\tloopI(eelse);\n\t\t\t\t\t}\n\t\t\t\tcase EWhile(econd, e, normalWhile):\n\t\t\t\t\tadd(\"EWhile\");\n\t\t\t\t\tloopI(econd);\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase ESwitch(e, cases, edef):\n\t\t\t\t\tadd(\"ESwitch\");\n\t\t\t\t\tloopI(e);\n\t\t\t\t\tfor (c in cases) {\n\t\t\t\t\t\tfor (pat in c.values) {\n\t\t\t\t\t\t\tloop(tabs + tabString + tabString, pat);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (c.expr != null) {\n\t\t\t\t\t\t\tloop(tabs + tabString + tabString + tabString, c.expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (edef != null) {\n\t\t\t\t\t\tloop(tabs + tabString + tabString + tabString, edef);\n\t\t\t\t\t}\n\t\t\t\tcase ETry(e, catches):\n\t\t\t\t\tadd(\"ETry\");\n\t\t\t\t\tloopI(e);\n\t\t\t\t\tfor (c in catches) {\n\t\t\t\t\t\tloop(tabs + tabString + tabString, c.expr);\n\t\t\t\t\t}\n\t\t\t\tcase EReturn(e):\n\t\t\t\t\tadd(\"EReturn\");\n\t\t\t\t\tif (e != null) {\n\t\t\t\t\t\tloopI(e);\n\t\t\t\t\t}\n\t\t\t\tcase EBreak:\n\t\t\t\t\tadd(\"EBreak\");\n\t\t\t\tcase EContinue:\n\t\t\t\t\tadd(\"EContinue\");\n\t\t\t\tcase EUntyped(e):\n\t\t\t\t\tadd(\"EUntyped\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EThrow(e):\n\t\t\t\t\tadd(\"EThrow\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase ECast(e, t):\n\t\t\t\t\tadd(\"ECast\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EIs(e, t):\n\t\t\t\t\tadd(\"EIs\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EDisplay(e, displayKind):\n\t\t\t\t\tadd(\"EDisplay\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase ETernary(econd, eif, eelse):\n\t\t\t\t\tadd(\"ETernary\");\n\t\t\t\t\tloopI(econd);\n\t\t\t\t\tloopI(eif);\n\t\t\t\t\tloopI(eelse);\n\t\t\t\tcase ECheckType(e, t):\n\t\t\t\t\tadd(\"ECheckType\");\n\t\t\t\t\tloopI(e);\n\t\t\t\tcase EMeta(s, e):\n\t\t\t\t\tadd(\"EMeta \" + printMetadata(s));\n\t\t\t\t\tloopI(e);\n\t\t\t}\n\t\t}\n\t\tloop(\"\", e);\n\t\treturn buffer.toString();\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\HTMLCanvasElement.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `HTMLCanvasElement` interface provides properties and methods for manipulating the layout and presentation of canvas elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the `HTMLElement` interface.\n\n\tDocumentation [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement>\n**/\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element {\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `width` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `300` is used.\n\t**/\n\tvar width : Int;\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `height` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `150` is used.\n\t**/\n\tvar height : Int;\n\t\n\t\n\t/**\n\t\tReturns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with `\"2d\"` returns a `CanvasRenderingContext2D` object, whereas calling it with `\"webgl\"` (or `\"experimental-webgl\"`) returns a `WebGLRenderingContext` object. This context is only available on browsers that implement WebGL.\n\t\t@throws DOMError\n\t**/\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic;\n\t\n\t/**\n\t\tReturns a data-URL containing a representation of the image in the format specified by the `type` parameter (defaults to `png`). The returned image is in a resolution of 96dpi.\n\t\t@throws DOMError\n\t**/\n\tfunction toDataURL( type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t\n\t/**\n\t\tCreates a `Blob` object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent.\n\t\t@throws DOMError\n\t**/\n\tfunction toBlob( callback : Blob -> Void, type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/**\n\t\tReturns a `CanvasCaptureMediaStream` that is a real-time video capture of the surface of the canvas.\n\t\t@throws DOMError\n\t**/\n\tfunction captureStream( ?frameRate : Float ) : CanvasCaptureMediaStream;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.WebGL2RenderingContext. */\n\tinline function getContextWebGL2( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.WebGL2RenderingContext {\n\t\treturn this.getContext('webgl2', attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n@:native(\"ArrayBuffer\")\nextern class ArrayBuffer {\n\tstatic function isView(value:Dynamic):Bool;\n\n\tfinal byteLength:Int;\n\n\t/** @throws DOMError */\n\tfunction new(length:Int):Void;\n\n\tfunction slice(begin:Int, ?end:Int):ArrayBuffer;\n}\n\n#if (js_es <= 5)\n@:ifFeature('js.lib.ArrayBuffer.slice')\nprivate class ArrayBufferCompat {\n\tstatic function sliceImpl(begin, ?end) {\n\t\tvar u = new js.lib.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : (end - begin));\n\t\tvar resultArray = new js.lib.Uint8Array(u.byteLength);\n\t\tresultArray.set(u);\n\t\treturn resultArray.buffer;\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t// IE10 ArrayBuffer.slice polyfill\n\t\t\tif (js.Syntax.code(\"ArrayBuffer\").prototype.slice == null)\n\t\t\t\tjs.Syntax.code(\"ArrayBuffer\").prototype.slice = sliceImpl;\n\t\t}\n}\n#end\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport haxe.extern.Rest;\nimport haxe.DynamicAccess;\n\n/**\n\tThe `js.lib.Object` constructor creates an object wrapper.\n\n\tDocumentation [Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Object\")\nextern class Object {\n\t/**\n\t\tThe Object.assign() method is used to copy the values of all enumerable\n\t\town properties from one or more source objects to a target object. It\n\t\twill return the target object.\n\n\t\tNote: this is an ES2015 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t**/\n\tstatic function assign<TSource:{}, TDest:{}>(target:TSource, sources:Rest<{}>):TDest;\n\n\t/**\n\t\tThe Object.create() method create a new object, using an existing object\n\t\tto provide the newly created object's __proto__ . (see browser console\n\t\tfor visual evidence.)\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\t**/\n\t@:pure static function create<T>(proto:Null<{}>, ?propertiesObject:DynamicAccess<ObjectPropertyDescriptor<Any>>):T;\n\n\t/**\n\t\tThe Object.defineProperties() method defines new or modifies existing\n\t\tproperties directly on an object, returning the object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\n\t**/\n\tstatic function defineProperties<T:{}>(obj:T, props:DynamicAccess<ObjectPropertyDescriptor<Any>>):T;\n\n\t/**\n\t\tThe static method Object.defineProperty() defines a new property directly\n\t\ton an object, or modifies an existing property on an object, and returns\n\t\tthe object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n\t**/\n\t@:overload(function<T:{}, TProp>(obj:T, prop:Symbol, descriptor:ObjectPropertyDescriptor<TProp>):T {})\n\tstatic function defineProperty<T:{}, TProp>(obj:T, prop:String, descriptor:ObjectPropertyDescriptor<TProp>):T;\n\n\t/**\n\t\tThe Object.entries() method returns an array of a given object's own\n\t\tenumerable property [key, value] pairs, in the same order as that\n\t\tprovided by a for...in loop (the difference being that a for-in loop\n\t\tenumerates properties in the prototype chain as well).\n\n\t\tNote: this is an ES2017 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n\t**/\n\t@:pure static function entries<T:{}>(obj:T):Array<ObjectEntry>;\n\n\t/**\n\t\tThe Object.freeze() method freezes an object: that is, prevents new\n\t\tproperties from being added to it; prevents existing properties from\n\t\tbeing removed; and prevents existing properties, or their enumerability,\n\t\tconfigurability, or writability, from being changed, it also prevents the\n\t\tprototype from being changed.\n\t\tThe method returns the passed object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n\t**/\n\tstatic function freeze<T:{}>(obj:T):T;\n\n\t/**\n\t\tReturns a new object from an iterable of key-value pairs\n\t\t(reverses Object.entries).\n\t**/\n\t@:pure static function fromEntries<T:{}>(iterable:Any):T;\n\n\t/**\n\t\tThe Object.getOwnPropertyDescriptor() method returns a property\n\t\tdescriptor for an own property (that is, one directly present on an\n\t\tobject and not in the object's prototype chain) of a given object.\n\n\t\tIn ES5, if the first argument to this method is not an object (a\n\t\tprimitive), then it will cause a TypeError. In ES2015, a non-object\n\t\tfirst argument will be coerced to an object at first.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\n\t**/\n\t@:overload(function(obj:String, prop:Symbol):Null<ObjectPropertyDescriptor<String>> {})\n\t@:overload(function(obj:String, prop:String):Null<ObjectPropertyDescriptor<String>> {})\n\t@:overload(function<T>(target:Array<T>, propertyKey:Int):Null<ObjectPropertyDescriptor<T>> {})\n\t@:overload(function<T, TProp>(obj:T, prop:Symbol):Null<ObjectPropertyDescriptor<TProp>> {})\n\t@:pure static function getOwnPropertyDescriptor<T, TProp>(obj:T, prop:String):Null<ObjectPropertyDescriptor<TProp>>;\n\n\t/**\n\t\tThe Object.getOwnPropertyDescriptors() method returns all own property\n\t\tdescriptors of a given object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\n\t**/\n\t@:overload(function(target:String):DynamicAccess<ObjectPropertyDescriptor<String>> {})\n\t@:overload(function<T>(target:Array<T>):DynamicAccess<ObjectPropertyDescriptor<T>> {})\n\t@:pure static function getOwnPropertyDescriptors<T>(obj:T):DynamicAccess<ObjectPropertyDescriptor<Any>>;\n\n\t/**\n\t\tThe Object.getOwnPropertyNames() method returns an array of all\n\t\tproperties (including non-enumerable properties except for those which\n\t\tuse Symbol) found directly upon a given object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\n\t**/\n\t@:pure static function getOwnPropertyNames<T:{}>(obj:T):Array<String>;\n\n\t/**\n\t\tThe Object.getOwnPropertySymbols() method returns an array of all symbol\n\t\tproperties found directly upon a given object.\n\n\t\tNote: this is an ES2015 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\n\t**/\n\t@:pure static function getOwnPropertySymbols<T:{}>(obj:T):Array<Symbol>;\n\n\t/**\n\t\tThe Object.getPrototypeOf() method returns the prototype (i.e. the value\n\t\tof the internal [[Prototype]] property) of the specified object.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n\t**/\n\t@:pure static function getPrototypeOf<T:{}, TProto>(obj:T):TProto;\n\n\t/**\n\t\tThe Object.is() method determines whether two values are the same value.\n\n\t\tNote: this is an ES2015 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t**/\n\t@:native(\"is\") @:pure static function isSame<T:{}>(obj1:T, obj2:T):Bool;\n\n\t/**\n\t\tThe Object.is() method determines whether two values are the same value.\n\n\t\tNote: this is an ES2015 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t**/\n\t@:deprecated(\"Use Object.isSame()\")\n\t@:pure static function is<T:{}>(obj1:T, obj2:T):Bool;\n\n\t/**\n\t\tThe Object.isExtensible() method determines if an object is extensible\n\t\t(whether it can have new properties added to it).\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n\t**/\n\t@:pure static function isExtensible<T:{}>(obj:T):Bool;\n\n\t/**\n\t\tThe Object.isFrozen() determines if an object is frozen.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n\t**/\n\t@:pure static function isFrozen<T:{}>(obj:T):Bool;\n\n\t/**\n\t\tThe Object.isSealed() method determines if an object is sealed.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n\t**/\n\t@:pure static function isSealed<T:{}>(obj:T):Bool;\n\n\t/**\n\t\tThe Object.keys() method returns an array of a given object's own\n\t\tenumerable properties, in the same order as that provided by a for...in\n\t\tloop (the difference being that a for-in loop enumerates properties in\n\t\tthe prototype chain as well).\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\t**/\n\t@:pure static function keys<T:{}>(obj:T):Array<String>;\n\n\t/**\n\t\tThe Object.preventExtensions() method prevents new properties from ever\n\t\tbeing added to an object (i.e. prevents future extensions to the object).\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\n\t**/\n\tstatic function preventExtensions<T:{}>(obj:T):T;\n\n\t/**\n\t\tThe Object.seal() method seals an object, preventing new properties from\n\t\tbeing added to it and marking all existing properties as\n\t\tnon-configurable. Values of present properties can still be changed as\n\t\tlong as they are writable.\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n\t**/\n\tstatic function seal<T:{}>(obj:T):T;\n\n\t/**\n\t\tThe Object.setPrototypeOf() method sets the prototype (i.e., the internal\n\t\t[[Prototype]] property) of a specified object to another object or null.\n\n\t\tNote: this is an ES2015 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\n\t**/\n\tstatic function setPrototypeOf<T:{}, TProto:{}>(obj:T, proto:Null<TProto>):T;\n\n\t/**\n\t\tThe Object.values() method returns an array of a given object's own\n\t\tenumerable property values, in the same order as that provided by a\n\t\tfor...in loop (the difference being that a for-in loop enumerates\n\t\tproperties in the prototype chain as well).\n\n\t\tNote: this is an ES2017 feature\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n\t**/\n\t@:pure static function values<T:{}>(obj:T):Array<Any>;\n\n\t/**\n\t\tAllows the addition of properties to all objects of type Object.\n\t**/\n\tstatic var prototype(default, never):ObjectPrototype;\n\n\t/**\n\t\tThe Object constructor creates an object wrapper.\n\t**/\n\t@:pure function new(?value:Any);\n}\n\n/**\n\tType for\n\t@see <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object>\n**/\ntypedef ObjectPrototype = {\n\t/**\n\t\tReturns a boolean indicating whether an object contains the specified\n\t\tproperty as a direct property of that object and not inherited through\n\t\tthe prototype chain.\n\t**/\n\tvar hasOwnProperty(default, never):Function;\n\n\t/**\n\t\tReturns a boolean indicating whether the object this method is called\n\t\tupon is in the prototype chain of the specified object.\n\t**/\n\tvar isPrototypeOf(default, never):Function;\n\n\t/**\n\t\tReturns a boolean indicating if the internal enumerable attribute is set.\n\t**/\n\tvar propertyIsEnumerable(default, never):Function;\n\n\t/**\n\t\tCalls `toString()`.\n\t**/\n\tvar toLocaleString(default, never):Function;\n\n\t/**\n\t\tReturns a string representation of the object.\n\t**/\n\tvar toString(default, never):Function;\n\n\t/**\n\t\tReturns the primitive value of the specified object.\n\t**/\n\tvar valueOf(default, never):Function;\n}\n\n/**\n\t@see <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty>\n**/\ntypedef ObjectPropertyDescriptor<TProp> = {\n\t/**\n\t\t`true` if and only if the type of this property descriptor may be\n\t\tchanged and if the property may be deleted from the corresponding object.\n\t\tDefaults to `false`.\n\t**/\n\tvar ?configurable:Bool;\n\n\t/**\n\t\t`true` if and only if this property shows up during enumeration of the\n\t\tproperties on the corresponding object.\n\t\tDefaults to `false`.\n\t**/\n\tvar ?enumerable:Bool;\n\n\t/**\n\t\tThe value associated with the property.\n\t\tCan be any valid JavaScript value (number, object, function, etc).\n\t**/\n\tvar ?value:TProp;\n\n\t/**\n\t\t`true` if and only if the value associated with the property may be\n\t\tchanged with an assignment operator.\n\t\tDefaults to `false`.\n\t**/\n\tvar ?writable:Bool;\n\n\t/**\n\t\tA function which serves as a getter for the property, or `undefined` if\n\t\tthere is no getter. When the property is accessed, this function is\n\t\tcalled without arguments and with `this` set to the object through which\n\t\tthe property is accessed (this may not be the object on which the\n\t\tproperty is defined due to inheritance).\n\t\tThe return value will be used as the value of the property.\n\t**/\n\tvar ?get:Void->TProp;\n\n\t/**\n\t\tA function which serves as a setter for the property, or undefined if\n\t\tthere is no setter. When the property is assigned to, this function\n\t\tis called with one argument (the value being assigned to the property)\n\t\tand with `this` set to the object through which the property is assigned.\n\t**/\n\tvar ?set:TProp->Void;\n}\n\n/**\n\tKey/value access helper for `js.lib.Object.entries()`.\n**/\nabstract ObjectEntry(Array<Any>) {\n\tpublic var key(get, never):String;\n\tpublic var value(get, never):Any;\n\tinline function get_key():String\n\t\treturn this[0];\n\n\tinline function get_value():Any\n\t\treturn this[1];\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n/**\n\tThe `js.Set` object lets you store unique values of any type, whether\n\tprimitive values or object references.\n\n\tDocumentation [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Set\")\nextern class Set<T> {\n\t/**\n\t\tThe number of values in the `js.Set` object.\n\t**/\n\tvar size(default, null):Int;\n\n\t/**\n\t\tIf an iterable object is passed, all of its elements will be added to\n\t\tthe new `js.Set`.\n\t**/\n\t@:pure function new(?iterable:Any);\n\n\t/**\n\t\tReturns a boolean asserting whether an element is present with the given\n\t\tvalue in the `js.Set` object or not.\n\t**/\n\t@:pure function has(value:T):Bool;\n\n\t/**\n\t\tAppends a new element with the given value to the `js.Set` object.\n\t\tReturns the `js.Set` object.\n\t**/\n\tfunction add(value:T):Set<T>;\n\n\t/**\n\t\tRemoves the element associated to the value and returns the value that\n\t\t`has(value)` would have previously returned.\n\t\t`has(value)` will return `false` afterwards.\n\t**/\n\tfunction delete(value:T):Bool;\n\n\t/**\n\t\tRemoves all elements from the `js.Set` object.\n\t**/\n\tfunction clear():Void;\n\n\t/**\n\t\tCalls `callback` once for each key-value pair present in the `js.Set`\n\t\tobject, in insertion order.\n\n\t\tIf a `thisArg` parameter is provided to forEach, it will be used as the\n\t\t`this` value for each callback.\n\t**/\n\tfunction forEach(callback:(value:T, key:T, set:Set<T>) -> Void, ?thisArg:Any):Void;\n\n\t/**\n\t\tReturns a new `js.lib.Iterator` object that contains the keys for each element\n\t\tin the `js.Set` object in insertion order.\n\t**/\n\tfunction keys():js.lib.Iterator<T>;\n\n\t/**\n\t\tReturns a new `js.lib.Iterator` object that contains the values for each\n\t\telement in the `js.Set` object in insertion order.\n\t**/\n\tfunction values():js.lib.Iterator<T>;\n\n\t/**\n\t\tReturns a new `js.lib.Iterator` object that contains an array of\n\t\t`[value, value]` for each element in the `js.Set` object, in insertion\n\t\torder.\n\t\tThis is kept similar to the `js.Map` object, so that each entry has the\n\t\tsame value for its key and value here.\n\t**/\n\tfunction entries():js.lib.Iterator<KeyValue<T, T>>;\n\n\tinline function iterator():HaxeIterator<T> {\n\t\treturn new HaxeIterator(this.values());\n\t}\n\n\tinline function keyValueIterator():SetKeyValueIterator<T> {\n\t\treturn new SetKeyValueIterator(this);\n\t}\n}\n\n/**\n\tkey => value iterator for js.lib.Set, tracking the entry index for the key to match the behavior of haxe.ds.List\n**/\nclass SetKeyValueIterator<T> {\n\tfinal set:js.lib.Set<T>;\n\tfinal values:HaxeIterator<T>;\n\tvar index = 0;\n\n\tpublic inline function new(set:js.lib.Set<T>) {\n\t\tthis.set = set;\n\t\tthis.values = new HaxeIterator(set.values());\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn values.hasNext();\n\t}\n\n\tpublic inline function next():{key:Int, value:T} {\n\t\treturn {\n\t\t\tkey: index++,\n\t\t\tvalue: values.next(),\n\t\t};\n\t}\n}\n","/*\r\n * Copyright (C)2014-2020 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage js.node;\r\n\r\n/**\r\n\tKey/value access helper.\r\n**/\r\nabstract KeyValue<K, V>(Array<Any>) {\r\n\tpublic var key(get, never):K;\r\n\tpublic var value(get, never):V;\r\n\r\n\tinline function get_key():K {\r\n\t\treturn this[0];\r\n\t}\r\n\r\n\tinline function get_value():V {\r\n\t\treturn this[1];\r\n\t}\r\n}\r\n","/*\n * Copyright (C)2014-2020 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.node.stream;\n\nimport haxe.extern.EitherType;\nimport js.node.Stream;\nimport js.node.events.EventEmitter.Event;\nimport js.node.stream.Readable.IReadable;\n#if haxe4\nimport js.lib.Error;\nimport js.lib.Object;\nimport js.lib.Uint8Array;\n#else\nimport js.Error;\nimport js.html.Uint8Array;\n#end\n\n/**\n\tWritable streams are an abstraction for a destination to which data is written.\n\n\t@see https://nodejs.org/api/stream.html#stream_writable_streams\n**/\nenum abstract WritableEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {\n\t/**\n\t\tThe `'close'` event is emitted when the stream and any of its underlying resources\n\t\t(a file descriptor, for example) have been closed.\n\t\tThe event indicates that no more events will be emitted, and no further computation will occur.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_close\n\t**/\n\tvar Close:WritableEvent<Void->Void> = \"close\";\n\n\t/**\n\t\tIf a call to stream.write(chunk) returns `false`, the `'drain'` event will be emitted\n\t\twhen it is appropriate to resume writing data to the stream.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_drain\n\t**/\n\tvar Drain:WritableEvent<Void->Void> = \"drain\";\n\n\t/**\n\t\tThe `'error'` event is emitted if an `error` occurred while writing or piping data.\n\t\tThe listener callback is passed a single Error argument when called.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_error\n\t**/\n\tvar Error:WritableEvent<Error->Void> = \"error\";\n\n\t/**\n\t\tThe `'finish'` event is emitted after the stream.end() method has been called,\n\t\tand all data has been flushed to the underlying system.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_finish\n\t**/\n\tvar Finish:WritableEvent<Void->Void> = \"finish\";\n\n\t/**\n\t\tThe `'pipe'` event is emitted when the stream.pipe() method is called on a readable stream,\n\t\tadding this writable to its set of destinations.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_pipe\n\t**/\n\tvar Pipe:WritableEvent<IReadable->Void> = \"pipe\";\n\n\t/**\n\t\tThe `'unpipe'` event is emitted when the stream.unpipe() method is called on a Readable stream,\n\t\tremoving this Writable from its set of destinations.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_event_unpipe\n\t**/\n\tvar Unpipe:WritableEvent<IReadable->Void> = \"unpipe\";\n}\n\n/**\n\tThe Writable stream interface is an abstraction for a destination that you are writing data to.\n\n\tExamples of writable streams include:\n\n\t\t- http requests, on the client\n\t\t- http responses, on the server\n\t\t- fs write streams\n\t\t- zlib streams\n\t\t- crypto streams\n\t\t- tcp sockets\n\t\t- child process stdin\n\t\t- process.stdout, process.stderr\n**/\n@:jsRequire(\"stream\", \"Writable\")\nextern class Writable<TSelf:Writable<TSelf>> extends Stream<TSelf> implements IWritable {\n\t/**\n\t\tThe `writable.cork()` method forces all written data to be buffered in memory.\n\t\tThe buffered data will be flushed when either the `stream.uncork()` or `stream.end()` methods are called.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_cork\n\t**/\n\tfunction cork():Void;\n\n\t/**\n\t\tDestroy the stream. Optionally emit an `'error'` event, and emit a `'close'` event unless `emitClose` is set in `false`.\n\t\tAfter this call, the writable stream has ended and subsequent calls to `write()` or `end()` will result in an `ERR_STREAM_DESTROYED` error.\n\t\tThis is a destructive and immediate way to destroy a stream. Previous calls to `write()` may not have drained, and may trigger an `ERR_STREAM_DESTROYED` error.\n\t\tUse `end()` instead of destroy if data should flush before close, or wait for the `'drain'` event before destroying the stream.\n\t\tImplementors should not override this method, but instead implement `writable._destroy()`.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_destroy_error\n\t**/\n\tfunction destroy(?error:Error):TSelf;\n\n\t/**\n\t\tIs `true` after `writable.destroy()` has been called.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_destroyed\n\t**/\n\tvar destroyed(default, null):Bool;\n\n\t/**\n\t\tCalling the `writable.end()` method signals that no more data will be written to the Writable.\n\t\tThe optional `chunk` and `encoding` arguments allow one final additional chunk of data to be written immediately before closing the stream.\n\t\tIf provided, the optional `callback` function is attached as a listener for the 'finish' event.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_end_chunk_encoding_callback\n\t**/\n\t@:overload(function(?callback:EitherType<Void->Void, Null<Error>->Void>):Void {})\n\tfunction end(chunk:Dynamic, ?encoding:String, ?callback:EitherType<Void->Void, Null<Error>->Void>):Void;\n\n\t/**\n\t\tThe `writable.setDefaultEncoding()` method sets the default `encoding` for a Writable stream.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_setdefaultencoding_encoding\n\t**/\n\tfunction setDefaultEncoding(encoding:String):TSelf;\n\n\t/**\n\t\tThe `writable.uncork()` method flushes all data buffered since `stream.cork()` was called.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_uncork\n\t**/\n\tfunction uncork():Void;\n\n\t/**\n\t\tIs `true` if it is safe to call `writable.write()`.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writable\n\t**/\n\tvar writable(default, null):Bool;\n\n\t/**\n\t\tIs `true` after `writable.end()` has been called. This property\n\t\tdoes not indicate whether the data has been flushed, for this use\n\t\t`writable.writableFinished` instead.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writableended\n\t**/\n\tvar writableEnded(default, null):Bool;\n\n\t/**\n\t\tIs set to `true` immediately before the 'finish' event is emitted.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writablefinished\n\t**/\n\tvar writableFinished(default, null):Bool;\n\n\t/**\n\t\tReturn the value of `highWaterMark` passed when constructing this `Writable`.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writablehighwatermark\n\t**/\n\tvar writablehighWaterMark(default, null):Int;\n\n\t/**\n\t\tThis property contains the number of bytes (or objects) in the queue ready to be written.\n\t\tThe value provides introspection data regarding the status of the `highWaterMark`.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writablelength\n\t**/\n\tvar writableLength(default, null):Int;\n\n\t/**\n\t\tGetter for the property `objectMode` of a given `Writable` stream.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writableobjectmode\n\t**/\n\tvar writableObjectMode(default, null):Bool;\n\n\t/**\n\t\tThe `writable.write()` method writes some data to the stream, and calls the supplied `callback` once the data has been fully handled.\n\t\tIf an error occurs, the `callback` may or may not be called with the error as its first argument.\n\t\tTo reliably detect write errors, add a listener for the `'error'` event.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t**/\n\tfunction write(chunk:Dynamic, ?encoding:String, ?callback:EitherType<Void->Void, Null<Error>->Void>):Bool;\n\n\t// --------- API for implementing a Writable Stream -----------------------\n\n\t/**\n\t\t@see https://nodejs.org/api/stream.html#stream_constructor_new_stream_writable_options\n\t**/\n\tfunction new(?options:WritableNewOptionsAdapter);\n\n\t/**\n\t\tAll `Writable` stream implementations must provide a `writable._write()` method to send data to the underlying resource.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback_1\n\t**/\n\tprivate function _write(chunk:Dynamic, encoding:String, callback:Null<Error>->Void):Void;\n\n\t/**\n\t\tThis function **MUST NOT** be called by application code directly.\n\t\tIt should be implemented by child classes, and called by the internal `Writable` class methods only.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_writev_chunks_callback\n\t**/\n\tprivate function _writev(chunks:Array<Chunk>, callback:Null<Error>->Void):Void;\n\n\t/**\n\t\tThe `_destroy()` method is called by `writable.destroy()`.\n\t\tIt can be overridden by child classes but it **must not** be called directly.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_destroy_err_callback\n\t**/\n\tprivate function _destroy(err:Null<Error>, callback:Null<Error>->Void):Void;\n\n\t/**\n\t\tThe `_final()` method **must not** be called directly.\n\t\tt may be implemented by child classes, and if so, will be called by the internal `Writable` class methods only.\n\n\t\t@see https://nodejs.org/api/stream.html#stream_writable_final_callback\n\t**/\n\tprivate function _final(callback:Null<Error>->Void):Void;\n\n\t// --------- TTY module API  ----------------------------------------------\n\n\t/**\n\t\tTerminal write streams (i.e. process.stdout) have this property set to true.\n\t\tIt is false for any other write streams.\n\n\t\t@see https://nodejs.org/api/tty.html#tty_writestream_istty\n\t**/\n\tvar isTTY(default, null):Bool;\n}\n\n/**\n\t@see https://nodejs.org/api/stream.html#stream_constructor_new_stream_writable_options\n**/\ntypedef WritableNewOptions = {\n\t/**\n\t\t`highWaterMark` <number> Buffer level when stream.write() starts returning `false`. Default: `16384` (16kb), or 16 for `objectMode` streams.\n\t**/\n\t@:optional var highWaterMark:Int;\n\n\t/**\n\t\t`decodeStrings` <boolean> Whether to encode `string`s passed to stream.write() to `Buffer`s (with the encoding specified in the stream.write() call) before passing them to stream._write().\n\t\tOther types of data are not converted (i.e. `Buffer`s are not decoded into `string`s). Setting to false will prevent strings from being converted.\n\t\tDefault: `true`.\n\t**/\n\t@:optional var decodeStrings:Bool;\n\n\t/**\n\t\t`defaultEncoding` <string> The default encoding that is used when no encoding is specified as an argument to stream.write().\n\t\tDefault: `'utf8'`.\n\t**/\n\t@:optional var defaultEncoding:String;\n\n\t/**\n\t\t`objectMode` <boolean> Whether or not the stream.write(anyObj) is a valid operation. When set,\n\t\tit becomes possible to write JavaScript values other than string, `Buffer` or `Uint8Array` if supported by the stream implementation.\n\t\tDefault: `false`.\n\t**/\n\t@:optional var objectMode:Bool;\n\n\t/**\n\t\t`emitClose` <boolean> Whether or not the stream should emit `'close'` after it has been destroyed.\n\t\tDefault: `true`.\n\t**/\n\t@:optional var emitClose:Bool;\n\n\t/**\n\t\t`write` <Function> Implementation for the stream._write() method.\n\t**/\n\t#if haxe4\n\t@:optional var write:(chunk:Dynamic, encoding:String, callback:Null<Error>->Void) -> Void;\n\t#else\n\t@:optional var write:Dynamic->String->Null<Error>->Void->Void;\n\t#end\n\n\t/**\n\t\t`writev` <Function> Implementation for the stream._writev() method.\n\t**/\n\t#if haxe4\n\t@:optional var writev:(chunks:Array<Chunk>, callback:Null<Error>->Void) -> Void;\n\t#else\n\t@:optional var writev:Array<Chunk>->(Null<Error>->Void)->Void;\n\t#end\n\n\t/**\n\t\t`destroy` <Function> Implementation for the stream._destroy() method.\n\t**/\n\t#if haxe4\n\t@:optional var destroy:(error:Null<Error>, callback:Null<Error>->Void) -> Void;\n\t#else\n\t@:optional var destroy:Null<Error>->(Null<Error>->Void)->Void;\n\t#end\n\n\t/**\n\t\t`final` <Function> Implementation for the stream._final() method.\n\t**/\n\t// TODO @native in typedef cannot work now\n\t// @:native(\"final\")\n\t#if haxe4\n\t@:optional var final_:(error:Null<Error>) -> Void;\n\t#else\n\t@:optional var final_:Null<Error>->Void;\n\t#end\n\n\t/**\n\t\t`autoDestroy` <boolean> Whether this stream should automatically call .destroy() on itself after ending. Default: false.\n\t**/\n\t@:optional var autoDestroy:Bool;\n}\n\n@:forward\nabstract WritableNewOptionsAdapter(WritableNewOptions) {\n\t@:from\n\tpublic static function from(options:WritableNewOptions):WritableNewOptionsAdapter {\n\t\tif (!Reflect.hasField(options, \"final\")) {\n\t\t\t#if haxe4\n\t\t\tObject.defineProperty(options, \"final\", {get: function() return options.final_});\n\t\t\t#else\n\t\t\tuntyped __js__(\"Object.defineProperty({0}, {1}, {2})\", options, \"final\", {get: function() return options.final_});\n\t\t\t#end\n\t\t}\n\t\treturn cast options;\n\t}\n}\n\n/**\n\tWritable interface used for type parameter constraints.\n\tSee `Writable` for actual class documentation.\n**/\n@:remove\nextern interface IWritable extends IStream {\n\tfunction cork():Void;\n\n\tfunction destroy(?error:Error):IWritable;\n\n\tvar destroyed(default, null):Bool;\n\n\t@:overload(function(?callback:EitherType<Void->Void, Null<Error>->Void>):Void {})\n\tfunction end(chunk:Dynamic, ?encoding:String, ?callback:EitherType<Void->Void, Null<Error>->Void>):Void;\n\n\tfunction setDefaultEncoding(encoding:String):IWritable;\n\n\tfunction uncork():Void;\n\n\tvar writable(default, null):Bool;\n\n\tvar writableEnded(default, null):Bool;\n\n\tvar writableFinished(default, null):Bool;\n\n\tvar writablehighWaterMark(default, null):Int;\n\n\tvar writableLength(default, null):Int;\n\n\tvar writableObjectMode(default, null):Bool;\n\n\tfunction write(chunk:Dynamic, ?encoding:String, ?callback:EitherType<Void->Void, Null<Error>->Void>):Bool;\n\n\tvar isTTY(default, null):Bool;\n}\n\ntypedef Chunk = {\n\tvar chunk:Dynamic;\n\tvar encoding:String;\n}\n","/*\r\n * Copyright (C)2014-2020 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage js.node.url;\r\n\r\nimport js.node.Iterator;\r\n\r\n/**\r\n\tThe `URLSearchParams` API provides read and write access to the query of a `URL`.\r\n\tThe `URLSearchParams` class can also be used standalone with one of the four following constructors.\r\n\tThe `URLSearchParams` class is also available on the global object.\r\n\r\n\tThe WHATWG `URLSearchParams` interface and the `querystring` module have similar purpose,\r\n\tbut the purpose of the querystring module is more general, as it allows the customization of delimiter characters (`&` and` `=`). On the other hand, this API is designed purely for URL query strings.\r\n**/\r\n@:jsRequire(\"url\", \"URLSearchParams\")\r\nextern class URLSearchParams {\r\n\t@:overload(function(init:String):Void {})\r\n\t@:overload(function(obj:Dynamic<String>):Void {})\r\n\t@:overload(function(array:Array<URLSearchParamsEntry>):Void {})\r\n\t@:overload(function(iter:Iterator<URLSearchParamsEntry>):Void {})\r\n\tfunction new():Void;\r\n\r\n\t/**\r\n\t\tAppend a new name-value pair to the query string.\r\n\t**/\r\n\tfunction append(name:String, value:String):Void;\r\n\r\n\t/**\r\n\t\tRemove all name-value pairs whose name is `name`.\r\n\t**/\r\n\tfunction delete(name:String):Void;\r\n\r\n\t/**\r\n\t\tReturns an ES6 `Iterator` over each of the name-value pairs in the query.\r\n\t\tEach item of the iterator is a JavaScript `Array`.\r\n\t\tThe first item of the `Array` is the `name`, the second item of the `Array` is the `value`.\r\n\t**/\r\n\tfunction entries():Iterator<URLSearchParamsEntry>;\r\n\r\n\t/**\r\n\t\tIterates over each name-value pair in the query and invokes the given function.\r\n\t**/\r\n\t#if haxe4\r\n\t@:overload(function(fn:(value:String) -> Void, ?thisArg:Dynamic):Void {})\r\n\t@:overload(function(fn:(value:String, name:String) -> Void, ?thisArg:Dynamic):Void {})\r\n\tfunction forEach(fn:(value:String, name:String, searchParams:URLSearchParams) -> Void, ?thisArg:Dynamic):Void;\r\n\t#else\r\n\t@:overload(function(fn:String->Void, ?thisArg:Dynamic):Void {})\r\n\t@:overload(function(fn:String->String->Void, ?thisArg:Dynamic):Void {})\r\n\tfunction forEach(fn:String->String->URLSearchParams->Void, ?thisArg:Dynamic):Void;\r\n\t#end\r\n\r\n\t/**\r\n\t\tReturns the value of the first name-value pair whose name is `name`.\r\n\t\tIf there are no such pairs, `null` is returned.\r\n\t**/\r\n\tfunction get(name:String):String;\r\n\r\n\t/**\r\n\t\tReturns the values of all name-value pairs whose name is `name`.\r\n\t\tIf there are no such pairs, an empty array is returned.\r\n\t**/\r\n\tfunction getAll(name:String):Array<String>;\r\n\r\n\t/**\r\n\t\tReturns `true` if there is at least one name-value pair whose name is `name`.\r\n\t**/\r\n\tfunction has(name:String):Bool;\r\n\r\n\t/**\r\n\t\tReturns an ES6 `Iterator` over the names of each name-value pair.\r\n\t**/\r\n\tfunction keys():Iterator<String>;\r\n\r\n\t/**\r\n\t\tSets the value in the `URLSearchParams` object associated with `name` to `value`.\r\n\t\tIf there are any pre-existing name-value pairs whose names are `name`, set the first such pair's value to `value` and remove all others.\r\n\t\tIf not, append the name-value pair to the query string.\r\n\t**/\r\n\tfunction set(name:String, value:String):Void;\r\n\r\n\t/**\r\n\t\tSort all existing name-value pairs in-place by their names. Sorting is done with a [stable sorting algorithm](https://en.wikipedia.org/wiki/Sorting_algorithm#Stability),\r\n\t\tso relative order between name-value pairs with the same name is preserved.\r\n\r\n\t\tThis method can be used, in particular, to increase cache hits.\r\n\t**/\r\n\tfunction sort():Void;\r\n\r\n\t/**\r\n\t\tReturns the search parameters serialized as a string, with characters percent-encoded where necessary.\r\n\t**/\r\n\tfunction toString():String;\r\n\r\n\t/**\r\n\t\tReturns an ES6 `Iterator` over the values of each name-value pair.\r\n\t**/\r\n\tfunction values():Iterator<String>;\r\n}\r\n\r\n/**\r\n\tThe name-value pair access helper for `js.node.url.URLSearchParams.entries()`.\r\n**/\r\nabstract URLSearchParamsEntry(Array<String>) {\r\n\tpublic var name(get, never):String;\r\n\tpublic var value(get, never):String;\r\n\r\n\tpublic function new(name:String, value:String) {\r\n\t\tthis = [name, value];\r\n\t}\r\n\r\n\tinline function get_name():String {\r\n\t\treturn this[0];\r\n\t}\r\n\r\n\tinline function get_value():String {\r\n\t\treturn this[1];\r\n\t}\r\n}\r\n","package logging;\n\n#if (!macro && (modular && !modular_host))\n\nextern class LogManager {\n    public static var instance(get, null):LogManager;\n    public var shouldLogDebug(get, null):Bool;\n    public var shouldLogWarnings(get, null):Bool;\n    public var shouldLogData(get, null):Bool;\n    public function log(data:LogData):Void;\n}\n\n#else\n\nimport haxe.Timer;\nimport logging.adaptors.NullLogAdaptor;\nimport logging.formatters.DefaultFormatter;\n\nusing StringTools;\n\n#if (modular && modular_host)\n@:expose @:keep\n#end\nclass LogManager {\n    private static var _instance:LogManager = null;\n    public static var instance(get, null):LogManager;\n    private static function get_instance():LogManager {\n        if (_instance == null) {\n            _instance = new LogManager();\n        }\n        return _instance;\n    }\n    \n    ///////////////////////////////////////////////////////////////////////////\n    // instance\n    ///////////////////////////////////////////////////////////////////////////\n    private var _queue:Array<LogData> = [];\n    private var _adaptors:Array<ILogAdaptor> = [];\n\n    public var StartDelay:Int = 50;\n\n    private function new() {\n    }\n\n    private var _started:Bool = false;\n    private function start() {\n        if (_started == true) {\n            return;\n        }\n\n        // lets start with a very slight delay, in case a bunch of other adaptors are added (might need revision here)\n        _started = true;\n        Timer.delay(() -> {\n            if (_adaptors.length == 0) { // lets add at least one adaptor so the log queue doesnt build up\n                _adaptors.push(new NullLogAdaptor());\n            }\n            processQueue();\n        }, StartDelay);\n    }\n\n    public function log(data:LogData) {\n        _queue.push(data);\n        processQueue();\n    }\n\n    private function processQueue() {\n        if (_adaptors.length == 0) {\n            return;\n        }\n        while (_queue.length > 0) {\n            var data = _queue.shift();\n            processLogData(data);\n        }\n    }\n\n    private var _shouldLogDebug:Null<Bool> = null;\n    public var shouldLogDebug(get, null):Bool;\n    private function get_shouldLogDebug():Bool {\n        if (_shouldLogDebug != null) {\n            return _shouldLogDebug;\n        }\n\n        _shouldLogDebug = willRespondToLevel(LogLevel.Debug);\n        return _shouldLogDebug;\n    }\n\n    private var _shouldLogData:Null<Bool> = null;\n    public var shouldLogData(get, null):Bool;\n    private function get_shouldLogData():Bool {\n        if (_shouldLogData != null) {\n            return _shouldLogData;\n        }\n\n        _shouldLogData = willRespondToLevel(LogLevel.Data);\n        return _shouldLogData;\n    }\n\n    private var _shouldLogWarnings:Null<Bool> = null;\n    public var shouldLogWarnings(get, null):Bool;\n    private function get_shouldLogWarnings():Bool {\n        if (_shouldLogWarnings != null) {\n            return _shouldLogWarnings;\n        }\n\n        _shouldLogWarnings = willRespondToLevel(LogLevel.Warning);\n        return _shouldLogWarnings;\n    }\n\n    private function willRespondToLevel(level:LogLevel):Bool {\n        var willRespond = false;\n        for (a in _adaptors) {\n            if (a.config.disabled) {\n                continue;\n            }\n\n            if (a.config.levels == null) {\n                willRespond = true;\n                continue;\n            }\n\n            if (a.config.levels.contains(level)) {\n                willRespond = true;\n                break;\n            }\n        }\n        return willRespond;\n    }\n\n    private function processLogData(data:LogData) {\n        for (a in _adaptors) {\n            var allow = !a.config.disabled;\n\n            if (allow && data.ref != null && a.config.exclusions != null) {\n                for (p in a.config.exclusions) {\n                    if (data.ref.startsWith(p)) {\n                        allow = false;\n                        break;\n                    }\n                }\n            }\n            if (allow && a.config.levels != null) {\n                if (!a.config.levels.contains(data.level)) {\n                    allow = false;\n                }\n            }\n            if (allow && data.ref != null && a.config.packages != null) {\n                for (p in a.config.packages) {\n                    if (!data.ref.startsWith(p)) {\n                        allow = false;\n                        break;\n                    }\n                }\n            }\n\n            if (allow == true) {\n                a.processLogData(data);\n            }\n        }\n    }\n\n    public function addAdaptor(adaptor:ILogAdaptor) {\n        if (adaptor.config.formatter == null) {\n            adaptor.config.formatter = new DefaultFormatter();\n        }\n        _adaptors.push(adaptor);\n        _shouldLogDebug = null;\n        _shouldLogWarnings = null;\n        start();\n    }\n\n    public function clearAdaptors() {\n        _adaptors = [];\n        _adaptors.push(new NullLogAdaptor());\n    }\n}\n\n#end","package logging.adaptors;\n\nclass NullLogAdaptor implements ILogAdaptor {\n    private var _config:BaseLogAdaptorConfig;\n    \n    public function new() {\n        _config = {};\n    }\n\n    public var config(get, null):BaseLogAdaptorConfig;\n    private function get_config():BaseLogAdaptorConfig {\n        return _config;\n    }\n\n    public function processLogData(data:LogData) {\n    }\n}","package logging.formatters;\n\nusing StringTools;\n\nclass DefaultFormatter implements ILogLineFormatter {\n    public function new() {\n    }\n\n    public function format(data:LogData, buffer:StringBuf) {\n        buffer.add(data.timestamp);\n        buffer.add(\" > \");\n        buffer.add(cast(data.level, String).toUpperCase().rpad(\" \", 11));\n        buffer.add(\" > \");\n\n        if (data.ref != null) {\n            buffer.add(data.ref);\n            buffer.add(\" > \");\n        }\n\n        if (data.instanceId != null) {\n            buffer.add(data.instanceId);\n            buffer.add(\" > \");\n        }\n\n        if (data.message != null) {\n            buffer.add(data.message);\n        }\n    }\n\n    public function formatObject(obj:Any):String {\n        if (obj == null) {\n            return \"\";\n        }\n        switch (Type.typeof(obj)) {\n            case TClass(haxe.ds.StringMap):\n                var o:Dynamic = {};\n                var sm = cast(obj, haxe.ds.StringMap<Dynamic>);\n                for (key in sm.keys()) {\n                    Reflect.setField(o, key, sm.get(key));\n                }\n                return haxe.Json.stringify(o);\n            case _:\n        }\n        return Std.string(obj);\n    }\n}\n","package mysql;\n\nclass MySqlError {\n    public var name:String;\n    public var message:String;\n\n    public function new(name:String, message:String) {\n        this.name = name;\n        this.message = message;\n    }\n}","package mysql;\n\nclass MySqlResult<T> {\n    public var connection:DatabaseConnection;\n    public var data:T;\n    public var lastInsertId:Null<Int> = null;\n    public var affectedRows:Null<Int> = null;\n\n    public function new(connection:DatabaseConnection, data:T) {\n        this.connection = connection;\n        this.data = data;\n    }\n}","package mysql.impl;\n\nimport promises.Promise;\n\nclass DatabaseConnectionBase {\n    public var connectionDetails:ConnectionDetails = null;\n\n    public var autoReconnect:Bool = false;\n    public var autoReconnectIntervalMS:Int = 1000;\n    public var replayQueriesOnReconnection:Bool = false;\n\n    public function new(details:ConnectionDetails) {\n        connectionDetails = details;\n        if (connectionDetails.port == null) {\n            connectionDetails.port = 3306;\n        }\n    }\n\n    public function open():Promise<MySqlResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            reject(new MySqlError(\"not implemented\", 'function \"${Type.getClassName(Type.getClass(this))}::open\" not implemented'));\n        });\n    }\n\n    public function exec(sql:String):Promise<MySqlResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            reject(new MySqlError(\"not implemented\", 'function \"${Type.getClassName(Type.getClass(this))}::exec\" not implemented'));\n        });\n    }\n\n    public function get(sql:String, ?param:Dynamic):Promise<MySqlResult<Dynamic>> {\n        return new Promise((resolve, reject) -> {\n            reject(new MySqlError(\"not implemented\", 'function \"${Type.getClassName(Type.getClass(this))}::get\" not implemented'));\n        });\n    }\n\n    public function query(sql:String, ?param:Dynamic):Promise<MySqlResult<Array<Dynamic>>> {\n        return new Promise((resolve, reject) -> {\n            reject(new MySqlError(\"not implemented\", 'function \"${Type.getClassName(Type.getClass(this))}::query\" not implemented'));\n        });\n    }\n\n    public function all(sql:String, ?param:Dynamic):Promise<MySqlResult<Array<Dynamic>>> {\n        return new Promise((resolve, reject) -> {\n            reject(new MySqlError(\"not implemented\", 'function \"${Type.getClassName(Type.getClass(this))}::all\" not implemented'));\n        });\n    }\n\n    public function close() {        \n    }\n\n    private function checkForDisconnection(error:String, call:CacheCall, sql:String, param:Dynamic, resolve:Dynamic->Void, reject:Dynamic->Void) {\n        if (!autoReconnect) {\n            return false;\n        }\n        var isDisconnectedError = false;\n        if (error.toLowerCase() == \"can't add new command when connection is in closed state\") {\n            isDisconnectedError = true;\n        } else if (error.toLowerCase().indexOf(\"failed to send packet\") != -1)  {\n            isDisconnectedError = true;\n        }\n        if (isDisconnectedError) {\n            cacheCall({\n                call: call,\n                sql: sql,\n                param: param,\n                resolve: resolve,\n                reject: reject\n            });\n            haxe.Timer.delay(attemptReconnect, autoReconnectIntervalMS);\n            return true;\n        }\n        return false;\n    }\n\n    private var _cachedCalls:Array<CacheItem> = [];\n    private function cacheCall(item:CacheItem) {\n        if (!replayQueriesOnReconnection) {\n            return;\n        }\n        _cachedCalls.push(item);\n    }\n\n    private function attemptReconnect() {\n        open().then(_ -> {\n            replayCachedCalls(_cachedCalls);\n        }, error -> {\n            haxe.Timer.delay(attemptReconnect, autoReconnectIntervalMS);\n        });\n    }\n\n    private function replayCachedCalls(cachedCalls:Array<CacheItem>) {\n        if (cachedCalls.length == 0) {\n            return;\n        }\n\n        var item = cachedCalls.shift();\n        switch (item.call) {\n            case CALL_GET:\n                get(item.sql, item.param).then(result -> {\n                    item.resolve(result);\n                    replayCachedCalls(cachedCalls);\n                }, error -> {\n                    item.reject(error);\n                    replayCachedCalls(cachedCalls);\n                });\n            case CALL_QUERY:\n                query(item.sql, item.param).then(result -> {\n                    item.resolve(result);\n                    replayCachedCalls(cachedCalls);\n                }, error -> {\n                    item.reject(error);\n                    replayCachedCalls(cachedCalls);\n                });\n            case CALL_ALL:\n                all(item.sql, item.param).then(result -> {\n                    item.resolve(result);\n                    replayCachedCalls(cachedCalls);\n                }, error -> {\n                    item.reject(error);\n                    replayCachedCalls(cachedCalls);\n                });\n            case CALL_EXEC:            \n                exec(item.sql).then(result -> {\n                    item.resolve(result);\n                    replayCachedCalls(cachedCalls);\n                }, error -> {\n                    item.reject(error);\n                    replayCachedCalls(cachedCalls);\n                });\n        }\n    }\n}\n\nprivate enum CacheCall {\n    CALL_EXEC;\n    CALL_GET;\n    CALL_QUERY;\n    CALL_ALL;\n}\n\nprivate typedef CacheItem = {\n    var call:CacheCall;\n    var sql:String;\n    var param:Dynamic;\n    var resolve:Dynamic->Void;\n    var reject:Dynamic->Void;\n}","package mysql.impl.nodejs;\n\nimport promises.Promise;\nimport mysql.externs.nodejs.MySql2;\nimport js.node.Buffer;\nimport mysql.externs.nodejs.Connection as NativeConnection;\nimport logging.Logger;\n\nclass DatabaseConnection extends DatabaseConnectionBase {\n    private static var log = new Logger(DatabaseConnection, true);\n\n    private var _nativeConnection:NativeConnection = null;\n\n    public override function open():Promise<MySqlResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            log.debug(\"creating connection:\", {\n                host: this.connectionDetails.host,\n                user: this.connectionDetails.user,\n                password: this.connectionDetails.pass,\n                database: this.connectionDetails.database,\n                rowsAsArray: false\n            });\n            _nativeConnection = MySql2.createConnection({\n                host: this.connectionDetails.host,\n                user: this.connectionDetails.user,\n                password: this.connectionDetails.pass,\n                database: this.connectionDetails.database,\n                rowsAsArray: false\n            });\n\n            _nativeConnection.connect(error -> {\n                if (error != null) {\n                    reject(new MySqlError(\"Error\", error.message));\n                    return;\n                }\n\n                resolve(new MySqlResult(this, true));\n            });\n        });\n    }\n    \n    public override function exec(sql:String):Promise<MySqlResult<Bool>> {\n        return new Promise((resolve, reject) -> {\n            log.data(\"exec:\", sql);\n            _nativeConnection.execute(sql, (error, rows, fields) -> {\n                if (error != null) {\n                    if (!checkForDisconnection(error.message, CALL_EXEC, sql, null, resolve, reject)) {\n                        reject(new MySqlError(\"Error\", error.message));\n                    }\n                    return;\n                }\n\n                var result:Dynamic = null;\n                if (rows is Array) {\n                    result = rows[0];\n                } else {\n                    result = rows;\n                }\n                var mysqlResult = new MySqlResult(this, true);\n                if (result != null) {\n                    mysqlResult.affectedRows = result.affectedRows;\n                    mysqlResult.lastInsertId = result.insertId;\n                }\n                resolve(mysqlResult);\n            });\n        });\n    }\n\n    public override function get(sql:String, ?param:Dynamic):Promise<MySqlResult<Dynamic>> {\n        return new Promise((resolve, reject) -> {\n            log.data(\"get:\", [sql, param]);\n            _nativeConnection.execute(sql, params(param), (error, rows, fields) -> {\n                if (error != null) {\n                    if (!checkForDisconnection(error.message, CALL_GET, sql, param, resolve, reject)) {\n                        reject(new MySqlError(\"Error\", error.message));\n                    }\n                    return;\n                }\n                /*\n                if (rows == null || rows.length == 0) {\n                    resolve(new MySqlResult(this, null));\n                }\n                */\n                var result:Dynamic = null;\n                if (rows is Array) {\n                    result = rows[0];\n                } else {\n                    result = rows;\n                }\n                convertBuffersToBytes(rows);\n                var mysqlResult = new MySqlResult(this, result);\n                if (result != null) {\n                    mysqlResult.affectedRows = result.affectedRows;\n                    mysqlResult.lastInsertId = result.insertId;\n                }\n                resolve(mysqlResult);\n            });\n        });\n    }\n\n    public override function query(sql:String, ?param:Dynamic):Promise<MySqlResult<Array<Dynamic>>> {\n        return new Promise((resolve, reject) -> {\n            log.data(\"query:\", [sql, param]);\n            _nativeConnection.query(sql, params(param), (error, rows, fields) -> {\n                if (error != null) {\n                    if (!checkForDisconnection(error.message, CALL_QUERY, sql, param, resolve, reject)) {\n                        reject(new MySqlError(\"Error\", error.message));\n                    }\n                    return;\n                }\n\n                convertBuffersToBytes(rows);\n                resolve(new MySqlResult(this, rows));\n            });\n        });\n    }\n\n    public override function all(sql:String, ?param:Dynamic):Promise<MySqlResult<Array<Dynamic>>> {\n        return new Promise((resolve, reject) -> {\n            log.data(\"all:\", [sql, param]);\n            _nativeConnection.execute(sql, params(param), (error, rows, fields) -> {\n                if (error != null) {\n                    if (!checkForDisconnection(error.message, CALL_ALL, sql, param, resolve, reject)) {\n                        reject(new MySqlError(\"Error\", error.message));\n                    }\n                    return;\n                }\n\n                if (rows == null) {\n                    resolve(new MySqlResult(this, []));\n                }\n\n                convertBuffersToBytes(rows);\n                resolve(new MySqlResult(this, rows));\n            });\n        });\n    }\n\n    public override function close() {\n        _nativeConnection.end();\n    }\n\n    private function params(param:Dynamic):Array<Dynamic> {\n        return switch(Type.typeof(param)) {\n            case TClass(Array):\n                param;\n            case TNull:\n                null;\n            case _:\n                [param];\n        }\n    }\n\n    private function convertBuffersToBytes(data:Dynamic) {\n        if ((data is Array)) {\n            var array:Array<Dynamic> = data;\n            for (item in array) {\n                convertBuffersToBytes(item);\n            }\n        } else {\n            for (f in Reflect.fields(data)) {\n                var v = Reflect.field(data, f);\n                if ((v is Buffer)) {\n                    var buffer:Buffer = cast v;\n                    var bytes = buffer.hxToBytes();\n                    Reflect.setField(data, f, bytes);\n                }\n            }\n        }\n    }\n}","package promises;\n\nclass PromiseUtils {\n    /*\n    Use .bind to return functions that create a promise, eg:\n        PromiseUtils.runSequentially([\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(111),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(222),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(333),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(444),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(555)\n        ]).then(results -> {\n            trace(\"all complete\", results);\n        }, error -> {\n            trace(\"error\", error);\n        });\n    */\n    public static function runSequentially<T>(promises:Array<() -> Promise<T>>, failFast = true):Promise<Array<T>> {\n        return new Promise((resolve, reject) -> {\n            var results:Array<T> = [];\n            _runSequentially(promises.copy(), failFast, results, resolve, reject);\n        });\n    }\n\n    /*\n    Use .bind to return functions that create a promise, eg:\n        PromiseUtils.runAll([\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(111),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(222),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(333),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(444),\n            someFunctionThatReturnsAPromiseAndTakesAnInt.bind(555)\n        ]).then(results -> {\n            trace(\"all complete\", results);\n        }, error -> {\n            trace(\"error\", error);\n        });\n    */\n    public static function runAll<T>(promises:Array<() -> Promise<T>>, failFast = false, excludeFailures:Bool = false):Promise<Array<T>> {\n        return new Promise((resolve, reject) -> {\n            if (promises.length == 0) {\n                resolve([]);\n                return;\n            }\n            var results = [];\n            var count = promises.length;\n\n            for (fn in promises) {\n                var p = fn();\n                p.then(result -> {\n                    count--;\n                    results.push(result);\n                    if (count == 0) {\n                        resolve(results);\n                    }\n                }, e -> {\n                    count--;\n                    if (!excludeFailures) {\n                        results.push(e);\n                    }\n                    if (failFast == true) {\n                        reject(e);\n                    } else if (count == 0) {\n                        resolve(results);\n                    }\n                });\n            }\n        });\n    }\n\n    /*\n    Use .bind to return functions that create a promise, eg:\n        PromiseUtils.runAllMapped([\n            {id: \"id1\", promise: someFunctionThatReturnsAPromiseAndTakesAnInt.bind(111)},\n            {id: \"id2\", promise: someFunctionThatReturnsAPromiseAndTakesAnInt.bind(222)},\n            {id: \"id3\", promise: someFunctionThatReturnsAPromiseAndTakesAnInt.bind(333)},\n            {id: \"id4\", promise: someFunctionThatReturnsAPromiseAndTakesAnInt.bind(444)},\n            {id: \"id5\", promise: someFunctionThatReturnsAPromiseAndTakesAnInt.bind(555)}\n        ]).then(results -> {\n            trace(\"all complete\", results);\n        }, error -> {\n            trace(\"error\", error);\n        });\n    */\n    public static function runAllMapped<T>(promises:Array<{id:String, promise:() -> Promise<T>}>, failFast = false, excludeFailures:Bool = false):Promise<Map<String, T>> {\n        return new Promise((resolve, reject) -> {\n            var results:Map<String, T> = [];\n            if (promises.length == 0) {\n                resolve(results);\n                return;\n            }\n            var count = promises.length;\n\n            for (item in promises) {\n                var fn = item.promise;\n                var id = item.id;\n                var p = fn();\n                p.then(result -> {\n                    count--;\n                    results.set(id, result);\n                    if (count == 0) {\n                        resolve(results);\n                    }\n                }, e -> {\n                    count--;\n                    if (!excludeFailures) {\n                        results.set(id, e);\n                    }\n                    if (failFast == true) {\n                        reject(e);\n                    } else if (count == 0) {\n                        resolve(results);\n                    }\n                });\n            }\n        });\n    }\n\n    private static function _runSequentially<T>(list:Array<() -> Promise<T>>, failFast:Bool, results:Array<T>, resolve:Array<T>->Void, reject:Any->Void) {\n        if (list.length == 0) {\n            resolve(results);\n            return;\n        }\n\n        var fn = list.shift();\n        var p = fn();\n        p.then(result -> {\n            results.push(result);\n            _runSequentially(list, failFast, results, resolve, reject);\n        }, e -> {\n            if (failFast == true) {\n                reject(e);\n            } else {\n                results.push(e);\n                _runSequentially(list, failFast, results, resolve, reject);\n            }\n        });\n    }\n\n    public static function wait(amountMS:Int) {\n        return new Promise((resolve, reject) -> {\n            haxe.Timer.delay(() -> {\n                resolve(true);\n            }, amountMS);\n        });\n    }\n\n    public static inline function promisify<T>(param:T):Promise<T> {\n        return new Promise((resolve, _) -> resolve(param));\n    }\n}","package safety;\n\n#if (haxe >= version('4.1.0'))\nclass SafetyException extends haxe.Exception {}\n#else\nclass SafetyException {\n\tpublic var message:String;\n\n\tpublic function new(msg:String) {\n\t\tmessage = msg;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n}\n#end","package safety;\n\nclass NullPointerException extends SafetyException {}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage sys.db;\n\nclass Mysql {\n\tpublic static function connect(params:{\n\t\thost:String,\n\t\t?port:Int,\n\t\tuser:String,\n\t\tpass:String,\n\t\t?socket:String,\n\t\t?database:String\n\t}):sys.db.Connection {\n\t\tthrow new haxe.exceptions.NotImplementedException(\"Not implemented for this platform\");\n\t\treturn null;\n\t}\n}\n","package sys.io;\n\nimport haxe.io.Bytes;\nimport haxe.io.Eof;\nimport haxe.io.Error;\nimport js.node.Buffer;\nimport js.node.Fs;\n\n@:coreApi\nclass FileInput extends haxe.io.Input {\n\tvar fd:Int;\n\tvar pos:Int;\n\n\tvar hasReachedEof = false;\n\n\tinline function throwEof():Void {\n\t\thasReachedEof = true;\n\t\tthrow new Eof();\n\t}\n\n\t@:allow(sys.io.File)\n\tfunction new(fd:Int) {\n\t\tthis.fd = fd;\n\t\tpos = 0;\n\t}\n\n\toverride public function readByte():Int {\n\t\tvar buf = Buffer.alloc(1);\n\t\tvar bytesRead = try {\n\t\t\tFs.readSync(fd, buf, 0, 1, pos);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"EOF\")\n\t\t\t\tthrowEof();\n\t\t\tthrow Error.Custom(e);\n\t\t}\n\t\tif (bytesRead == 0)\n\t\t\tthrowEof();\n\t\tpos++;\n\t\treturn buf[0];\n\t}\n\n\toverride public function readBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\tvar buf = Buffer.hxFromBytes(s);\n\t\tvar bytesRead = try {\n\t\t\tFs.readSync(fd, buf, pos, len, this.pos);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"EOF\")\n\t\t\t\tthrowEof();\n\t\t\tthrow Error.Custom(e);\n\t\t}\n\t\tif (bytesRead == 0)\n\t\t\tthrowEof();\n\t\tthis.pos += bytesRead;\n\t\treturn bytesRead;\n\t}\n\n\toverride public function close():Void {\n\t\tFs.closeSync(fd);\n\t}\n\n\tpublic function seek(p:Int, pos:FileSeek):Void {\n\t\thasReachedEof = false;\n\t\tswitch (pos) {\n\t\t\tcase SeekBegin:\n\t\t\t\tthis.pos = p;\n\t\t\tcase SeekEnd:\n\t\t\t\tthis.pos = cast Fs.fstatSync(fd).size + p;\n\t\t\tcase SeekCur:\n\t\t\t\tthis.pos += p;\n\t\t}\n\t}\n\n\tpublic function tell():Int {\n\t\treturn pos;\n\t}\n\n\tpublic function eof():Bool {\n\t\treturn hasReachedEof;\n\t}\n}\n","package sys.io;\n\nimport haxe.io.Bytes;\nimport haxe.io.Eof;\nimport haxe.io.Error;\nimport js.node.Buffer;\nimport js.node.Fs;\n\n@:coreApi\nclass FileOutput extends haxe.io.Output {\n\tvar fd:Int;\n\tvar pos:Int;\n\n\t@:allow(sys.io.File)\n\tfunction new(fd:Int) {\n\t\tthis.fd = fd;\n\t\tpos = 0;\n\t}\n\n\toverride public function writeByte(b:Int):Void {\n\t\tvar buf = Buffer.alloc(1);\n\t\tbuf[0] = b;\n\t\tFs.writeSync(fd, buf, 0, 1, pos);\n\t\tpos++;\n\t}\n\n\toverride public function writeBytes(s:Bytes, pos:Int, len:Int):Int {\n\t\tvar buf = Buffer.hxFromBytes(s);\n\t\tvar wrote = Fs.writeSync(fd, buf, pos, len, this.pos);\n\t\tthis.pos += wrote;\n\t\treturn wrote;\n\t}\n\n\toverride public function close():Void {\n\t\tFs.closeSync(fd);\n\t}\n\n\tpublic function seek(p:Int, pos:FileSeek):Void {\n\t\tswitch (pos) {\n\t\t\tcase SeekBegin:\n\t\t\t\tthis.pos = p;\n\t\t\tcase SeekEnd:\n\t\t\t\tthis.pos = cast Fs.fstatSync(fd).size + p;\n\t\t\tcase SeekCur:\n\t\t\t\tthis.pos += p;\n\t\t}\n\t}\n\n\tpublic function tell():Int {\n\t\treturn pos;\n\t}\n}\n","package systems;\n\nimport sys.io.File;\nimport sys.FileSystem;\nimport db.DebugUtils;\nimport promises.PromiseUtils;\nimport promises.Promise;\nimport util.Duration;\nimport db.ITable;\nimport db.DatabaseResult;\nimport db.Record as RRecord;\nimport database.DBEvents;\nimport Query.*;\nimport db.IDatabase;\nimport ecs.System;\nimport db.DatabaseFactory;\nimport db.mysql.Utils;\nimport database.types.DBQuote;\nimport database.types.DBSnippet;\nimport database.types.DBReminder;\n\nclass DatabaseSystem extends System {\n\tpublic var connected:Bool = false;\n\n\tvar polls:Map<DBEvents, Int> = [];\n\tvar poll_times:Map<DBEvents, Float> = [];\n\n\tvar inserting:Bool = false;\n\tvar updating:Bool = false;\n\tvar db:IDatabase;\n\tvar watches:Array<DBEvents> = [];\n\t@:fastFamily var dbevents:{event:DBEvents};\n\n\tvar connected_time:Float;\n\n\tvar event_cache:Array<DBEvents> = [];\n\tvar reverse:Array<DBEvents> = [];\n\n\toverride function onEnabled() {\n\t\tvar keys = Main.keys.mysql;\n\t\tdb = DatabaseFactory.instance.createDatabase(DatabaseFactory.MYSQL, {\n\t\t\tdatabase: keys.database,\n\t\t\thost: keys.host,\n\t\t\tuser: keys.user,\n\t\t\tpass: keys.pass\n\t\t});\n\n\t\tdb.setProperty('autoReconnect', true);\n\t\tdb.setProperty('autoReconnectInterval', 5000);\n\t\tdb.setProperty('replayQueriesOnReconnection', true);\n\n\t\tconnected_time = Date.now().getTime() - (Duration.fromString('8hrs') : Float);\n\t}\n\n\n\tinline function insert(table:String, value:RRecord, callback) {\n\t\tthis.db.table(table).then((result) -> {\n\t\t\treturn result.table.add(value);\n\t\t}).then(function(result) {\n\t\t\tcallback(Success('Inserted'));\n\t\t}, function(error) {\n\t\t\tcallback(Error('Insert failed', error));\n\t\t});\n\t}\n\n\tfunction connect() {\n\t\tdb.connect().then(function(state) {\n\t\t\tif (state.data) {\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.connected_time = Date.now().getTime();\n\n\t\t\t\ttrace('Database connected');\n\t\t\t} else {\n\t\t\t\tthis.connected = false;\n\t\t\t\tthis.connected_time -= (Duration.fromString('5hrs') : Float);\n\t\t\t\ttrace('Database not connected');\n\t\t\t}\n\t\t}, (err) -> trace(err));\n\t}\n\n\toverride function update(_) {\n\t\tif (Date.now().getTime() - this.connected_time > Duration.fromString('5hrs')) {\n\t\t\tthis.connected_time = Date.now().getTime();\n\t\t\tthis.connected = false;\n\t\t\tthis.connect();\n\t\t}\n\n\t\tif (!connected) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (key => ms in polls) {\n\t\t\tvar now = Date.now().getTime();\n\t\t\tvar last_sent = poll_times.get(key);\n\n\t\t\tvar diff = now - last_sent;\n\t\t\tif (diff > ms) {\n\t\t\t\tpoll_times.set(key, now);\n\t\t\t\tEcsTools.set(key);\n\t\t\t}\n\t\t}\n\n\t\titerate(dbevents, (entity) -> {\n\t\t\tswitch (event) {\n\t\t\t\tcase Poll(event, ms):\n\t\t\t\t\tif (!polls.exists(event)) {\n\t\t\t\t\t\tpolls.set(event, ms);\n\t\t\t\t\t\tpoll_times.set(event, 0);\n\t\t\t\t\t\ttrace('Saved poll ${event.getName()}');\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treverse.push(event);\n\t\t\t}\n\t\t\tuniverse.deleteEntity(entity);\n\t\t});\n\n\t\tfor (i in 0...reverse.length) {\n\t\t\tvar event:DBEvents = reverse.pop();\n\n\t\t\tswitch (event) {\n\t\t\t\tcase CreateTable(name, columns):\n\t\t\t\t\tthis.db.createTable(name, columns);\n\t\t\t\tcase Insert(table, value, callback):\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.add(value);\n\t\t\t\t\t}).then(function(res:DatabaseResult<RRecord>) {\n\t\t\t\t\t\tcallback(Success(\"Inserted\", res.data));\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\tif (err.message != null\n\t\t\t\t\t\t\t&& (err.message : String).contains('DUPLICATE_DATA')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttrace(value);\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tcase Update(table, value, query, callback):\n\t\t\t\t\tif (updating) {\n\t\t\t\t\t\tEcsTools.set(event);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tupdating = true;\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.update(query, value);\n\t\t\t\t\t}).then(function(res) {\n\t\t\t\t\t\tupdating = false;\n\t\t\t\t\t\tcallback(Success(\"Updated\"));\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\ttrace(queryExprToSql(query));\n\t\t\t\t\t\ttrace(value.debugString());\n\t\t\t\t\t\tupdating = false;\n\t\t\t\t\t});\n\t\t\t\tcase GetRecord(table, query, callback):\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.findOne(query);\n\t\t\t\t\t}).then(function(result) {\n\t\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\t\tcallback(Record(result.data));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback(Error('No data', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\tcase GetRecords(table, query, callback):\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.find(query);\n\t\t\t\t\t}).then(function(result) {\n\t\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\t\tcallback(Records(result.data));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback(Error('No data', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\tcase GetAllRecords(table, callback):\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.all();\n\t\t\t\t\t}).then(function(result) {\n\t\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\t\tcallback(Records(result.data));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback(Error('No data', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\tcase Search(table, field, value, callback):\n\t\t\t\t\tvar query = \"SELECT * FROM `\"+table+\"` WHERE \"+field+\" LIKE '%\"+ value + \"%'\";\n\n\t\t\t\t\tdb.raw(query).then(function(result) {\n\t\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\t\tcallback(Records(result.data));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback(Error('No data', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) -> trace(err));\n\t\t\t\tcase SearchBy(table, field, value, by_column, by_value, callback):\n\t\t\t\t\tvar query = \"SELECT * FROM `\"+table+\"` WHERE \"+by_column+\" = '\"+by_value+\"' AND \"+field+\" LIKE '%\"+ value + \"%'\";\n\n\t\t\t\t\tdb.raw(query).then(function(result) {\n\t\t\t\t\t\tif (result != null) {\n\t\t\t\t\t\t\tcallback(Records(result.data));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback(Error('No data', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(query);\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t});\n\t\t\t\tcase DeleteByValue(table, column, value, callback):\n\t\t\t\t\tthis.getTable(table, function(result) {\n\t\t\t\t\t\tvar record = new RRecord();\n\t\t\t\t\t\trecord.field(column, value);\n\n\t\t\t\t\t\tresult.table.delete(record).then(function(succ) {\n\t\t\t\t\t\t\tif (succ.itemsAffected == 0) {\n\t\t\t\t\t\t\t\tcallback(Error(\"Failed to delete\"));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallback(Success(\"Successfully deleted\", succ.data));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\tcallback(Error(\"Failed\", err));\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tcallback(Error(\"Failed\", err));\n\t\t\t\t\t});\n\t\t\t\tcase DeleteRecord(table, value, callback):\n\t\t\t\t\tthis.getTable(table, function(result) {\n\t\t\t\t\t\tresult.table.delete(value).then(function(succ) {\n\t\t\t\t\t\t\tif (succ.itemsAffected == null || succ.itemsAffected == 0) {\n\t\t\t\t\t\t\t\tcallback(Error(\"Failed to delete\"));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallback(Success(\"Successfully deleted\", succ.data));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\tcallback(Error(\"Failed\", err));\n\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\tcallback(Error(\"Failed\", err));\n\t\t\t\t\t});\n\t\t\t\tcase SearchAndUpdate(table, key, query, value, callback):\n\t\t\t\t\tvar parse_key = this.parseKey(key);\n\t\t\t\t\tvar key = parse_key.key;\n\t\t\t\t\tvar column = parse_key.column;\n\n\t\t\t\t\tdb.table(table).then((result) -> {\n\t\t\t\t\t\treturn result.table.findOne(query);\n\t\t\t\t\t}).then((result) -> {\n\t\t\t\t\t\t// if (this.updating) {\n\t\t\t\t\t\t// \tthis.event_cache.push(event);\n\t\t\t\t\t\t// \tvar record = new RRecord();\n\t\t\t\t\t\t// \trecord.field('____status', 'blocked');\n\t\t\t\t\t\t// \tvar result = new DatabaseResult(result.database, result.table, record);\n\t\t\t\t\t\t// \treturn PromiseUtils.promisify(result);\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tthis.updating = true;\n\t\t\t\t\t\tif (result.data == null) {\n\t\t\t\t\t\t\treturn result.table.add(value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (column != null) {\n\t\t\t\t\t\t\t\tvalue.field(column, result.data.field(column));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (value.hasField('id')) {\n\t\t\t\t\t\t\t\tvalue.removeField('id');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result.table.update(query, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(result) {\n\t\t\t\t\t\tif (result.data.hasField('____status')) {\n\t\t\t\t\t\t\ttrace('result null ${result.data.field('____status')}');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.updating = false;\n\t\t\t\t\t\ttrace('unblock');\n\t\t\t\t\t\tif (callback != null) {\n\t\t\t\t\t\t\tcallback(Success('Successfully updated record', result.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function(err:Dynamic) {\n\t\t\t\t\t\tthis.updating = false;\n\t\t\t\t\t\ttrace('unblock');\n\t\t\t\t\t\ttrace(value);\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\ttrace(err.message);\n\t\t\t\t\t\t// if (err.message.contains('Duplicate entry')) {\n\t\t\t\t\t\t// \tEcsTools.addComponents(event); //recycle for an update instead\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (callback != null) {\n\t\t\t\t\t\t\tcallback(Error(\"Failed\", err));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\ttrace('${event.getName()} not implemented');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseKey(value:String) {\n\t\tvar key = null;\n\t\tvar column = null;\n\t\tif (value.contains(':')) {\n\t\t\tvar split = value.split(':');\n\t\t\tkey = split[1];\n\t\t\tcolumn = split[0];\n\t\t} else {\n\t\t\tkey = value;\n\t\t}\n\n\t\treturn {\n\t\t\tkey: key,\n\t\t\tcolumn: column\n\t\t}\n\t}\n\n\tfunction getTable(name:String, succ:DatabaseResult<ITable>->Void, err:Dynamic->Void) {\n\t\tdb.table(name).then(succ, err);\n\t}\n}\n","package systems;\n\nimport discord_js.TextChannel;\nimport discord_js.Message;\nimport ecs.System;\nimport Main.CommandForward;\nimport components.TextCommand;\n\nclass MessageRouter extends System {\n\t@:fastFamily var messages:{command:CommandForward, message:Message};\n\n\tfinal voicechat = #if block \"714201892959289500\" #else \"220626116627529728\" #end;\n\tfinal voice = #if block \"416069724657418244\" #else \"198219256687493120\" #end;\n\n\toverride function update(_) {\n\t\titerate(messages, (entity) -> {\n\t\t\tif (command != CommandForward.new_message) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tuniverse.deleteEntity(entity);\n\t\t\tvar channel:TextChannel = message.channel;\n\n\t\t\tEcsTools.set(CommandForward.rate_limit, message);\n\t\t\tEcsTools.set(CommandForward.scam_prevention, message);\n\t\t\tEcsTools.set(CommandForward.keyword_tracker, message);\n\n\t\t\tif (channel.id == voicechat){\n\t\t\t\tEcsTools.set(CommandForward.voice_chat_bridge, message);\n\t\t\t}\n\n\n\t\t\tif (channel.id == voice){\n\t\t\t\tEcsTools.set(CommandForward.voice_channel_bridge, message);\n\t\t\t}\n\n\t\t\tif (channel.id == \"1234544675264925788\") {\n\t\t\t\tEcsTools.set(CommandForward.suggestion_box, message);\n\t\t\t}\n\n\t\t\tswitch (channel.type) {\n\t\t\t\tcase GUILD_TEXT:\n\t\t\t\t\tthis.guildTextChannel(message);\n\t\t\t\tcase PUBLIC_THREAD:\n\t\t\t\t\tthis.publicThreadChannel(message);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction publicThreadChannel(message:Message) {\n\t\tif (message.content.startsWith(\"[showcase]\")) {\n\t\t\tEcsTools.set(CommandForward.showcase, message);\n\t\t}\n\t\tEcsTools.set(CommandForward.thread_count, message);\n\t}\n\n\tfunction guildTextChannel(message:Message) {\n\t\tvar channel = message.channel.asType0;\n\t\tvar showcase_channel = #if block \"1100053767493255182\" #else \"162664383082790912\" #end;\n\t\tif (channel.id == showcase_channel && !message.system) {\n\t\t\tEcsTools.set(CommandForward.showcase_message, message);\n\t\t}\n\n\t\tif (message.content.startsWith('!run')) {\n\t\t\ttrace('here');\n\t\t\tuniverse.setComponents(universe.createEntity(), TextCommand.run, message);\n\t\t}\n\t}\n}","package thenshim.js;\n\nimport thenshim.PromiseFactory;\n\n/**\n * Factory that calls `js.lib.Promise`\n */\nclass JSPromiseFactory implements PromiseFactory {\n    public function new() {\n    }\n\n    public function make<T>(executor:PromiseExecutor<T>) {\n        return new js.lib.Promise(executor);\n    }\n\n    public function asResolved<T>(object:ValueOrPromiseLike<T>) {\n        return js.lib.Promise.resolve(object);\n    }\n\n    public function asRejected<T>(reason:Any):thenshim.Promise.UnderlyingPromise<T> {\n        return js.lib.Promise.reject(reason);\n    }\n}\n","package thenshim;\n\nimport thenshim.PromiseFactory;\nimport thenshim.Thenable;\n\n#if (!thenshim_always_fallback && js)\n    import thenshim.js.JSPromiseFactory;\n\n    typedef UnderlyingPromise<T> = js.lib.Promise<T>;\n    private typedef _Factory = JSPromiseFactory;\n#else\n    import thenshim.fallback.FallbackPromiseFactory;\n\n    typedef UnderlyingPromise<T> = Thenable<T>;\n    private typedef _Factory = FallbackPromiseFactory;\n#end\n\n/**\n * Abstract over the target's promise implementation.\n *\n * - On JS, the underlying promise is `js.lib.Promise`.\n * - Otherwise, the underlying promise is `FallbackPromise`.\n */\nabstract Promise<T>(UnderlyingPromise<T>)\nfrom UnderlyingPromise<T> to UnderlyingPromise<T> {\n    /**\n     * Factory that calls the methods to create promises on the current target.\n     *\n     * - On JS, it is `JSPromiseFactory`\n     * - Otherwise, it is `FallbackPromiseFactory`\n     */\n    public static var factory:PromiseFactory = new _Factory();\n\n    /**\n     * Wrap an implementation as a JavaScript-style promise.\n     * @param executor Callback function with resolve and reject functions.\n     */\n    public function new(executor:PromiseExecutor<T>) {\n        this = factory.make(executor);\n    }\n\n    /**\n     * Returns a settled promise or flattened promise.\n     *\n     * - When given a value, it returns a settled promise that is fulfilled\n     *   with the given value (as a convenience function).\n     * - When given a `Promise`, it returns the promise itself.\n     * - When given a `Thenable`, it returns a new promise that reflects\n     *   the `Thenable`'s state.\n     */\n    public static function resolve<T>(object:ValueOrPromiseLike<T>):Promise<T> {\n        return factory.asResolved(object);\n    }\n\n    /**\n     * Returns a settled promise that is rejected with the given reason.\n     */\n    public static function reject<T>(reason:Any):Promise<T> {\n        return factory.asRejected(reason);\n    }\n\n    /**\n     * Calls the given callbacks when this promise is settled.\n     *\n     * @see `Thenable.then` for callback descriptions.\n     */\n    public function then<R>(\n            onFulfilled:ThenableCallback<T,R>,\n            ?onRejected:ThenableCallback<Dynamic,R>):\n            Promise<R> {\n        @:nullSafety(Off)\n        // cast under dox due to bug in Thenable\n        return this.then(#if doc_gen cast #end onFulfilled,\n            cast onRejected);\n    }\n}\n","package thenshim;\n\n/**\n * Common signature for this library to specify objects that provide a `then`\n * method.\n */\ninterface Thenable<T> {\n    /**\n     * Calls the given callbacks when this promise is settled.\n     *\n     * Note that unlike the JavaScript `then`, the return type parameter\n     * is only `R` where as JavaScript `then` has possible parameter types of\n     * `T`, `R1`, and `R2`.\n     *\n     * @param onFulfilled A callback that will be called with the value `T`\n     *     when the promise is fulfilled. The callback returns a promise\n     *     or value.\n     * @param onRejected A callback that will be called with the reason `Any`\n     *     when the promise is rejected. The callback returns a promise\n     *     or value.\n     */\n    public function then<R>(\n        onFulfilled:ThenableCallback<T,R>,\n        ?onRejected:ThenableCallback<Any,R>):\n        Thenable<R>;\n}\n\n/**\n * Abstract that accepts callback functions to the `then` method.\n *\n * Valid callbacks are:\n *\n * - `T->R`: Function that returns a value of type `R`.\n * - `T->Thenable<R>`: Function that returns a thenable `Thenable` with value\n *    type `R`.\n * - `T->Promise<R>`: Function that returns a promise `Promise` with value\n *    type `R`.\n *\n * On JS, this unifies to `js.lib.Promise.PromiseHandler`.\n */\nabstract ThenableCallback<T,R>(T->Dynamic)\n    from T->Promise<R> \n    from T->Thenable<R>\n    from T->R {\n        // Exclude cast from dox due to haxe bug #7829\n#if (js && !doc_gen)\n    // Any/Dynamic don't unify properly yet, so we have to use cast for now\n    @:to\n    inline function toJSPromiseHandler():js.lib.Promise.PromiseHandler<T,R> {\n        return cast this;\n    }\n#end\n}\n","package util;\n\nimport haxe.PosInfos;\nimport discord_js.ReactionCollector;\nimport discord_js.TextChannel;\nimport discord_js.User;\nimport discord_js.MessageReaction;\nimport discord_js.Message;\nimport discord_js.ApplicationCommandPermissionsManager;\nimport discord_js.ApplicationCommand;\nimport js.Browser;\nclass DiscordUtil {\n\tpublic static function setCommandPermission(command:ApplicationCommand,\n\t\t\tpermissions:Array<ApplicationCommandPermissionData>, ?succ:Void->Void,\n\t\t\t?fail:Dynamic->Void) {\n\t\tcommand.permissions.set({\n\t\t\tguild: Main.guild_id,\n\t\t\tcommand: command.id,\n\t\t\tpermissions: permissions\n\t\t}).then(function(_) {\n\t\t\tif (succ != null) {\n\t\t\t\tsucc();\n\t\t\t}\n\t\t\ttrace('Updated permissions for ' + command.name);\n\t\t}, function(err) {\n\t\t\tif (fail != null) {\n\t\t\t\tfail(err);\n\t\t\t}\n\t\t\ttrace(err);\n\t\t\ttrace('Failed to update permissions for ' + command.name);\n\t\t});\n\t}\n\n\tpublic static function reactionTracker(message:Message,\n\t\t\ttrack:(collector:ReactionCollector, collected:MessageReaction, user:User) -> Void,\n\t\t\t?time:Float = -1) {\n\t\tvar filter = (reaction:MessageReaction, user:User) -> {\n\t\t\tif (reaction.emoji.name == \"✅\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (reaction.emoji.name == \"❎\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treaction.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tif (time == -1) {\n\t\t\ttime = 60000 * 60 * 48;\n\t\t}\n\n\t\tmessage.react(\"✅\").then(null, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t}).then(function(_) {\n\t\t\tmessage.react(\"❎\").then(null, function(err) {\n\t\t\t\ttrace(err);\n\t\t\t\tBrowser.console.dir(err);\n\t\t\t}).then(function(_) {\n\t\t\t\tvar collector = message.createReactionCollector({filter: filter, time: time});\n\t\t\t\tcollector.on('collect', track.bind(collector));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static function getChannel(channel_id:String, callback:(channel:TextChannel) -> Void) {\n\t\tMain.client.channels.fetch(channel_id).then(callback, function(err) {\n\t\t\ttrace(err);\n\t\t\tBrowser.console.dir(err);\n\t\t});\n\t}\n}\n","package util;\n\nenum abstract Duration(Float) to Float {\n\tvar minute = 60000;\n\tvar hour = 3600000;\n\tvar day = 86400000;\n\tvar week = 604800000;\n\tvar month = 2419200000;\n\n\tpublic function new(value) {\n\t\tthis = value;\n\t}\n\n\t@:op(A > B) static function gt(a:Duration, b:Duration):Bool;\n\n\t@:op(A >= B) static function gtequalto(a:Duration, b:Duration):Bool;\n\n\t@:op(A < B) static function lt(a:Duration, b:Duration):Bool;\n\n\t@:op(A <= B) static function ltequalto(a:Duration, b:Duration):Bool;\n\n\t@:op(A == B) static function equality(a:Duration, b:Duration):Bool;\n\n\t@:op(A > B) static function gtfloat(a:Float, b:Duration):Bool;\n\n\t@:op(A >= B) static function gtequaltofloat(a:Float, b:Duration):Bool;\n\n\t@:op(A < B) static function ltfloat(a:Float, b:Duration):Bool;\n\n\t@:op(A <= B) static function ltequaltofloat(a:Float, b:Duration):Bool;\n\n\t@:op(A == B) static function equalityFloat(a:Float, b:Duration):Bool;\n\n\t@:op(A + B) static function addition(a:Duration, b:Duration):Duration;\n\n\t@:from public static function fromString(input:String):Duration {\n\t\tvar time = 0.;\n\n\t\tvar sec_regex = ~/([0-9]+)[ ]?(s|sec|secs)\\b/gi;\n\t\tif (sec_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(sec_regex.matched(1));\n\t\t\ttime = num * 1000;\n\t\t}\n\n\t\tvar min_regex = ~/([0-9]+)[ ]?(m|min|mins)\\b/gi;\n\t\tif (min_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(min_regex.matched(1));\n\t\t\ttime = num * 60000;\n\t\t}\n\n\t\tvar hour_regex = ~/([0-9]+)[ ]?(h|hr|hrs|hours)\\b/gi;\n\t\tif (hour_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(hour_regex.matched(1));\n\t\t\ttime = num * 3600000;\n\t\t}\n\n\t\tvar day_regex = ~/([0-9]+)[ ]?(d|day|days)\\b/gi;\n\t\tif (day_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(day_regex.matched(1));\n\t\t\ttime = num * 86400000;\n\t\t}\n\n\t\tvar week_regex = ~/([0-9]+)[ ]?(w|wk|wks|week|weeks)\\b/gi;\n\t\tif (week_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(week_regex.matched(1));\n\t\t\ttime = num * 604800000;\n\t\t}\n\n\t\tvar month_regex = ~/([0-9]+)[ ]?(mo|mos|mths|month|months)\\b/gi;\n\t\tif (month_regex.match(input)) {\n\t\t\tvar num = Std.parseFloat(month_regex.matched(1));\n\t\t\ttime = num * 2419200000;\n\t\t}\n\n\t\treturn new Duration(time);\n\t}\n}","package util;\n\nclass Random {\n\t/** Return a random boolean value (true or false) */\n\tpublic static inline function bool():Bool {\n\t\treturn Math.random() < 0.5;\n\t}\n\n\t/** Return a random integer between 'from' and 'to', inclusive. */\n\tpublic static inline function int(from:Int, to:Int):Int {\n\t\treturn from + Math.floor(((to - from + 1) * Math.random()));\n\t}\n\n\t/** Return a random float between 'from' and 'to', inclusive. */\n\tpublic static inline function float(from:Float, to:Float):Float {\n\t\treturn from + ((to - from) * Math.random());\n\t}\n\n\t/** Return a random string of a certain length.  You can optionally specify \n\t\twhich characters to use, otherwise the default is (a-zA-Z0-9) */\n\tpublic static function string(length:Int, ?charactersToUse = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"):String {\n\t\tvar str = \"\";\n\t\tfor (i in 0...length) {\n\t\t\tstr += charactersToUse.charAt(Random.int(0, charactersToUse.length - 1));\n\t\t}\n\t\treturn str;\n\t}\n\n\t/** Return a random date & time from within a range.  The behaviour is unspecified if either `earliest` or `latest` is null.  Earliest and Latest are inclusive */\n\tpublic static inline function date(earliest:Date, latest:Date):Date {\n\t\treturn Date.fromTime(float(earliest.getTime(), latest.getTime()));\n\t}\n\n\t/** Return a random item from an array.  Will return null if the array is null or empty. */\n\tpublic static inline function fromArray<T>(arr:Array<T>):Null<T> {\n\t\treturn (arr != null && arr.length > 0) ? arr[int(0, arr.length - 1)] : null;\n\t}\n\n\t/** Shuffle an Array.  This operation affects the array in place, and returns that array.\n\t\tThe shuffle algorithm used is a variation of the [Fisher Yates Shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle) */\n\tpublic static function shuffle<T>(arr:Array<T>):Array<T> {\n\t\tif (arr != null) {\n\t\t\tfor (i in 0...arr.length) {\n\t\t\t\tvar j = int(0, arr.length - 1);\n\t\t\t\tvar a = arr[i];\n\t\t\t\tvar b = arr[j];\n\t\t\t\tarr[i] = b;\n\t\t\t\tarr[j] = a;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/** Return a random item from an iterable.  Will return null if the iterable is null or empty. */\n\tpublic static inline function fromIterable<T>(it:Iterable<T>):Null<T> {\n\t\treturn (it != null) ? fromArray(Lambda.array(it)) : null;\n\t}\n\n\t/** Return a random constructor from an Enum.  Will return null if the enum has no constructors. Only works with enum constructors that take no parameters. */\n\tpublic static inline function enumConstructor<T>(e:Enum<T>):Null<T> {\n\t\treturn (e != null) ? fromArray(Type.allEnums(e)) : null;\n\t}\n}"],
"names":[],
"mappings":"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,MDuK0B;ADxIvB,CC4HpB,aAiBI;AD7IgB,CCgJpB,eAAiB,2BAA+B;ADhJ5B,CCkJhB,UCvLf,AAMQ,IAAoB,MDiL2B;ADlJxB,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,MCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,MCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,KCrGvB,ADqGmC,mBAA4B;AD1JtD,CEqDvB,ADqGyB,IAAY,MCrGvB,ADqGmC,mBAA4B;AD1JtD,CCiJpB,iBAcI,8BAA8B,SAAU;AD/JxB,CGrE/B,eFsO4E;ADjK7C,CCiK6C;AAAA;AAAA;ADjK7C,CGrE/B,YA+QA,AAAoC,CAAC;AH1MN,CGnE9B,EAAG,YAAW,GAiRb;AAAA,EAAS,SAhRT;AAgRA,EAAuB,UAhRX,UAAU,WAAW;AAgRjC,OAAI,CAAK,KAAc,KAAvB;AAAA,GAAS;AAAT,GACC,AAjRD,MAiRM,KAAK;AADX;AAAA;AH9M6B,CCiKpB,gBAAkB,6BEtO7B,MDgCA,AAMQ,IAAoB,MDgM8F;ADjK3F,CCmKhB,UCxMf,AAMQ,IAAoB,MDkMsB;ADnKnB,CGrE/B,eF8O6D;ADzK9B,CCyK8B;AAAA;AAAA;ADzK9B,CGrE/B,YA+QA,AAAoC,CAAC;AH1MN,CGnE9B,EAAG,YAAW,GAiRb;AAAA,EAAS,SAhRT;AAgRA,EAAuB,UAhRX,UAAU,WAAW;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3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,4BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,8BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,sBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,2BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CC0MR,YCvKf,ADuK6B,OAAe;AD1MrB,CCyNI,QAAU,2BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,gBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,6BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,sBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,mCAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CCyNI,QAAU,iBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,oBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,6BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,iBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC0MR,YCvKf,ADuK6B,OAAe;AD1MrB,CCyNI,QAAU,6BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,2BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,sBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,yBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,mCAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,4BAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,wBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,KAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,KAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,wBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,sBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,wBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,sBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,iBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,mBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,oBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,kBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,uBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,gBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;AD5N1D,CC8NmD;AD9NnD,CCyNI,QAAU,qBAAQ;ADzNtB,CEqDvB,ADsK2C,cAAsB,MAAK;AD3N/C,CEqDvB,ADuK2C,qBAA6B,MAAS;A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AADY,IAE9B,2BAA2B;AAFG;AAPjC;AAJ2B;;;;;;;;;mBFwD7B;AAAA,CAO4B,AAA3B,sBAA2B;AAP5B,CAIsC,AAArC,iBAAqC;AAJtC,C9BqGS,A8BlGR,gB9BkGQ;A8BrGT,C9BqGS,A8BnGR,Y9BmGQ;A8BrGT,C9BqGS,A8BpGR,W9BoGQ;A8BrGT,CGqJwB,8BAAM;AHrJ9B;;;;;;;;;;;;aAS+B;AAAA,E9BH7B,Y8BIA;AAD6B,E9BH7B,Y8BIqB,cAAU,WAAV;AADQ,EtB8B7B,ARjCA,QQiCE,AsB7BY,U9BJA;A8BGe,E9BH7B,Y8BKA;AAF6B,E9BH7B,Y8BKuB,cAAU,aAAV;AAFM,EtB8B7B,ARjCA,QQiCE,AsB5BY,Y9BLA;A8BGe,E9BH7B,Y8BMA;AAH6B,E9BH7B,Y8BMsB,cAAU,YAAV;AAHO,EtB8B7B,ARjCA,QQiCE,AsB3BY,W9BNA;A8BGe,E9BH7B,Y8BOA;AAJ6B,E9BH7B,Y8BOwB,cAAU,cAAV;AAJK,EtB8B7B,ARjCA,QQiCE,AsB1BY,a9BPA;A8BGe,E9BH7B,Y8BQA;AAL6B,E9BH7B,Y8BQuB,cAAU,aAAV;AALM,EtB8B7B,ARjCA,QQiCE,AsBzBY,Y9BRA;A8BGe,E9BH7B,Y8BSA;AAN6B,E9BH7B,Y8BSsB,cAAU,cAAV;AANO,EtB8B7B,ARjCA,QQiCE,AsBxBY,W9BTA;A8BGe,EAO7B,aAAa,cAAU,cAAV;AAPgB,EAS7B,EAAI,eAAc,MACjB;AAAA,gBAAa;AAAb;AAV4B,EtB+GQ,QA7DA,AsBrCf;AAbO,EtBkDtB,cA+DA,YAAY;AsBjHU,EtBkDtB,gBAgEE;AsBlHoB,EtBkDtB,iBAiEG;AsBnHmB,EAa7B,K9B4CgE,CQ8DzD,aAAU,WsB1GjB;AAAA,GtB8GA,UAAU,QAAK;AsB9Gf,GtB+GO,eAAkB,EAAE,AAAK;AsB/GhC,GACC,UAAU;AADX,GtBkGqC,SA7DA,AsBnCrB;AAFhB,GtBqCO,eA+DA,YAAY;AsBpGnB,GtBqCO,iBAgEE;AsBrGT,GtBqCO,kBAiEG;AsBtGV,GAEC,K9B2CM,CQ6DA,cAAU,YsBxGhB;AAAA,ItB4GD,WAAU,SAAK;AsB5Gd,ItB6GM,gBAAk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B0C,EtGmElB,MuGvElC,oBAAU,cvGuEwB;AAAA,GsGjEnC,gBCEC,MAAM;AvG+D4B,GsGhE/B,iB9FmDH,A8FnDoB,Y9FmDlB,A8FnD2B;AtGgEK,GsG/D/B,EAAI,UAAS,UAAW,a9FsDlC;AAAA,I8FrDc,U9FqDZ,A8FrDwB,aAAW;A9FqDrC;ARSyC;AsGnEkB,EAQrD,YAAO;AAR8C;cAWO;AAAA,EAC5D,WAAW;AADiD,EChCpE,Y/F2F0C,YAAY,A8FzD5B;AAF0C,E9F2D3D,wB+FzFU;AD8BiD,EtGwDzB,MuGvElC,oBAAU,cvGuEwB;AAAA,GsGtDnC,gBCTC,MAAM;AvG+D4B,GsGrD/B,EAAI,UAAS,YACT;AAAA,cAAU;AAAV;AtGoD2B;AsGxDyB,EAO5D,OAAO;AAPqD;mBAUM;AAAA,EAClE,WAAoB;AAD8C,EC1C1E,Y/F2F0C,YAAY,A8F/C5B;AAFgD,E9FiDjE,wB+FzFU;ADwCuD,EtG8C/B,MuGvElC,oBAAU,cvGuEwB;AAAA,GsG5CnC,gBCnBC,MAAM;AvG+D4B,GsG3C/B,iB9F8BH,A8F9BoB,Y9F8BlB,A8F9B2B;AtG2CK,GsG1C/B,EAAI,eAAc,MACd;AAAA;AAAA;AtGyC2B,GsGvC/B,EAAI,UAAS,UjGxChB,AiGwC2B,aACpB;AAAA,cjGzCP,AiGyCiB;AAAV;AtGsC2B;AsG9C+B,EAWlE,OAAO;AAX2D;SAcb;AAAA,EACrD,EAAI,UAAS,MAAM;AAAA,G9FsBzB,A8FrBU,Y9FqBR,A8FrBiB,QAAM;AADA,GAEf,OAAO;AAFQ;AADkC,E9FmBpD,O8FbM,Y9FaJ,A8Fba;AANqC;SAStB,e9FcrC;AAAA,E8FbM,Y9FaJ,A8Fba,QAAM;A9FarB;U8FVsC;AAAA,EAChC,QAAQ;AADwB,ECrExC,Y/F2F0C,YAAY,A8FpBpC;AAFsB,E9FsB/B,gB+FzFU;ADmEqB,EtGmBG,MuGvElC,YAAU,cvGuEwB;AAAA,GsGjBnC,QC9CC,MAAM;AvG+D4B,GsGhB/B,O9FGH,A8FHU,Y9FGR,A8FHiB;AtGgBe;AsGnBH,EAKhC,OAAO;AALyB;gBAQS;AAAA,EACzC,QAAQ;AADiC,EC7EjD,Y/F2F0C,YAAY,A8FZpC;AAF+B,E9FcxC,gB+FzFU;AD2E8B,EtGWN,MuGvElC,YAAU,cvGuEwB;AAAA,GsGTnC,QCtDC,MAAM;AvG+D4B,GsGRxB;AtGQwB,GAxBlC,asGgBqB;AtGQa,GsGRxB,GtGhBV,WsGgB8B,MAApB;AAAA;AAAA,UjGpEV;AAAA,ILoDA,asGgBqB;AjGpErB,IiGoEU,MjGpEV,WLoDA,WsGgB8B;AjGpE9B;AL4EkC,GsGR/B,OAAO;AtGQwB;AsGXM,EAKzC,OAAO;AALkC;eAQJ,e9FHG;AAAA,cRDvC,AsGKD;A9FJwC,EACvC,EAZA,sCAAqC,AAYjC,Q8FGO,O9FFjB;AAAA,UAAiB,Q8FEA;A9FFjB;AAF6C;Q8FOd;AAAA,EAC1B,QAAQ;AADkB,EAE1B,StGyBC,AAAK,AQbL,6BAAW,A8FZH;AAFiB,EAG1B,OAAO;AAHmB;eAMO;AAAA,EACxB,W/G/EX;A+G8EmC,EC/FzC,Y/F2F0C,YAAY,A8FMpC;AAFuB,E9FJhC,gB+FzFU;AD6FsB,EtGPE,MuGvElC,YAAU,cvGuEwB;AAAA,GsGSnC,QCxEC,MAAM;AvG+D4B,GTtDzC,Q+GgEiB;AtGVwB,GTtDzC,QAAK;ASsDoC,GTvDF,QiB0ChC,A8FyBU,Y9FzBR,A8FyBiB;AtGZe,GTtDzC,QAAK,qBctBE,WdsBF;ASsDoC,GTtDzC,QAAK;ASsDoC;AsGOF,EAQjC,O/GlCC;A+G0BgC;SAWD,gBAChC;AAAA,EC3GR,Y/F2F0C,YAAY,A8FgBlC;AAAZ,E9FhBC,kB+FzFU;ADyGX,EtGnBmC,MuGvElC,cAAU,cvGuEwB;AAAA,GsGmBnC,UClFC,MAAM;AvG+D4B,GsGoB/B,Y9FjCH,A8FiCe,a9FjCb,A8FiC4B;AtGpBI,GQTzC,A8F8BU,Y9F9BR,A8F8BiB,OAAK;AtGrBiB;AsGmBnC;UAMiC;AAAA,EACjC,qBAAqB;AADY,EAEjC,sBAAsB;AAFW,EAGjC,EAAI,0BAAyB,wBACzB;AAAA,UAAO;AAAP;AAJ6B,EAOjC,eAAe;AAPkB,EAQjC,gBAAgB;AARiB,EAUjC;AAViC,EAUjC,WAAsB,uBAAtB;AAAA,GAAK,oBAAL,AAAsB,eAAtB;AAAA;AAA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AK,KAAI,KAAd;AAAA,EAAU;AAAV,EACC,eAAe,A/IdO,gB+IcP,EAAa,MAAM,IAAI,KAAK;AAD5C,EAGC,EAAI,YAAW,KAAK,WAAW,GAC9B;AAAA,+BAAM;AAAN;AAJF,EAOC,EAAI,aAAY,GAAG;AAAA,GhHPH,iBAOsD,AgHCvC,YhHD4C;AgHAxD,GhHPH,gBgHQe;AADZ,GAElB,EAAI,cAAa;AAAA,IhH4OnB,SAAS,AAkKF,AgH7YmC,iBhH2OzB;AgH5OE,IhH4OnB,SAA4B,AAkKrB,AgH7YmC,mBhH2OJ;AgH5OnB,IhH6OnB,SAAS,AAiKF,YAjKU;AgH7OE,IhH6OnB,SAA4B,AAiKrB,cAjK+B;AgH7OnB,IhH8OnB,U+GzNO,gB/GyNG,GAAK;AgH9OI,IhH+OnB,U+G1NO,gB/G0NG,GAAK;AgH/OI,IhHgPnB,U+G3NO,gB/G2NG,GAAK;AgHhPI,IhHiPnB,U+G5NO,gB/G4NG,GAAK;AgHjPI,IhHkPnB,UAAU;AgHlPS,IhHmPnB,W+G/BO,AAzNM,CAyNN,AAzNM,A/GwPF,M+GxPc,C/GwPR,AAAC,QAAQ,M+G/Bf,KAzNc,C/GwPO,AAAC,QAAQ,M+G/B9B;ACpNQ,IhHoPnB,QAAQ;AgHpPW,IhHqPnB,M+GjCO,AAzNM,A/G0Pb,M+G1PyB,A/G0PlB,M+GjCI;ACpNQ,IhHsPnB,EAAI,qBAAe,IAAK,OAAO,G+G3QwB;AAAA,KAC7C,E/G2QT;A+G5QsD,K/G4QtD,O+GnCM,AAvOM,A/G0QZ,O+GnCU;AAzO4C;ACqBpC,IhHwPnB,QAAQ;AgHxPW,IhHyPnB,M+GrCO,AAzNM,A/G8Pb,M+G9PyB,A/G8PlB,M+GrCI;ACpNQ,IhH0PnB,EAAI,qBAAe,IAAK,OAAO,G+G/QwB;AAAA,KAC7C,E/G+QT;A+GhRsD,K/GgRtD,O+GvCM,AAvOM,A/G8QZ,O+GvCU;AAzO4C;ACqBpC,IDoNZ,A/GwCP,O+GxCO,AAzNM,A/GiQb,O+GjQyB,CAAC,AAyNnB,AAzNM,AA0BN,gB/GyXA,AgH7YmC,eDoB3B,cA1BU,AA0BlB,gB/GiXA,AgHrYmC,gBDoB3B,aA+LJ;ACpNQ,IhHTF,aAsQL;AgH7PO,IhHTF,YAsQC;AgH7PC,IhHyNnB,Y+GLO,AAjNM,A/GmYN,AgHrYgB,eDEE,A/GmYlB,S+GlLI;ACpNQ,IhH0NnB,W+GNO,AAjNM,A/G2YN,AgH7YgB,cDEE,A/G2YlB,Q+G1LI;ACpNQ,IhH2NnB,EAAI,qBAmLG,AgH7YgB,YhH6YhB,SAnL4B,G+GvOoB;AAAA,KAC7C,E/GuOT;A+GxOsD,K/GwOtD,Q+GRM,AA9NM,A/GsOZ,Q+GRU;AAhO4C;ACYpC,IhHtBpB,AgHuBI,UhHvBJ,AAakB,6BAsOL,MAAM;AgH7NC,IAEhB,EAAI,EhHsCA,CA8VA,AgHpYa,ehHsCJ,IgHrCZ;AAAA,iCAAM;AAAN;AAHe,UAKV;AAAA,IhHuOT,UAAS,AAkKF,AgHxYmC,iBhHsOzB;AgHvOR,IhHuOT,UAA4B,AAkKrB,AgHxYmC,mBhHsOJ;AgHvO7B,IhHwOT,UAAS,AAiKF,YAjKU;AgHxOR,IhHwOT,UAA4B,AAiKrB,cAjK+B;AgHxO7B,IhHyOT,W+GzNO,gB/GyNG,IAAK;AgHzON,IhH0OT,W+G1NO,gB/G0NG,IAAK;AgH1ON,IhH2OT,W+G3NO,gB/G2NG,IAAK;AgH3ON,IhH4OT,W+G5NO,gB/G4NG,IAAK;AgH5ON,IhH6OT,WAAU;AgH7OD,IhH8OT,Y+G/BO,AAzNM,CAyNN,AAzNM,A/GwPF,O+GxPc,C/GwPR,AAAC,SAAQ,M+G/Bf,KAzNc,C/GwPO,AAAC,SAAQ,M+G/B9B;AC/MF,IhH+OT,SAAQ;AgH/OC,IhHgPT,O+GjCO,AAzNM,A/G0Pb,O+G1PyB,A/G0PlB,O+GjCI;AC/MF,IhHiPT,EAAI,qBAAe,KAAK,QAAO,G+G3QwB;AAAA,KAC7C,E/G2QT;A+G5QsD,K/G4QtD,Q+GnCM,AAvOM,A/G0QZ,Q+GnCU;AAzO4C;AC0B9C,IhHmPT,SAAQ;AgHnPC,IhHoPT,O+GrCO,AAzNM,A/G8Pb,O+G9PyB,A/G8PlB,O+GrCI;AC/MF,IhHqPT,EAAI,qBAAe,KAAK,QAAO,G+G/QwB;AAAA,KAC7C,E/G+QT;A+GhRsD,K/GgRtD,Q+GvCM,AAvOM,A/G8QZ,Q+GvCU;AAzO4C;AC0B9C,ID+MF,A/GwCP,Q+GxCO,AAzNM,A/GiQb,Q+GjQyB,CAAC,AAyNnB,AAzNM,AA0BN,gB/GyXA,AgHxYmC,eDe3B,cA1BU,AA0BlB,gB/GiXA,AgHhYmC,gBDe3B,aA+LJ;AC/MF,IhHdQ,cAsQL;AgHxPH,IhHdQ,aAsQC;AgHxPT,IhHsMT,Y+GSO,AAzNM,A/G2YN,AgHhYgB,eDXE,A/G2YlB,U+GlLI;AC/MF,IhHuMT,W+GQO,AAzNM,A/GmZN,AgHxYgB,cDXE,A/GmZlB,S+G1LI;AC/MF,IhHwMT,EAAI,qBAAe,KAiMZ,AgHxYgB,ehHuMU,G+GlOsB;AAAA,KAC7C,E/GkOT;A+GnOsD,K/GmOtD,Q+GMM,AAvOM,A/GiOZ,Q+GMU;AAzO4C;AC0B9C,IhH3BV,AgH4BI,UhH5BJ,AAakB,6BAwNL,MAAM;AgH1MT,IAEN,EhHiCI,CA8VA,AgH/XY,ehHiCH,GgHhCZ;AAAA,iCAAM;AAAN;AAHK;AAPW;AAPpB,EhHqPA,UAAS,AAkKF,AgHjYiB,iBhH+NP;AgHrPjB,EhHqPA,UAA4B,AAkKrB,AgHjYiB,mBhH+Nc;AgHrPtC,EhHsPA,UAAS,AAiKF,WAjKU;AgHtPjB,EhHsPA,UAA4B,AAiKrB,aAjK+B;AgHtPtC,EhHuPA,W+GzNO,gB/GyNG,IAAK;AgHvPf,EhHwPA,W+G1NO,gB/G0NG,IAAK;AgHxPf,EhHyPA,W+G3NO,gB/G2NG,IAAK;AgHzPf,EhH0PA,W+G5NO,gB/G4NG,IAAK;AgH1Pf,EhH2PA,WAAU;AgH3PV,EhH4PA,Y+G/BO,AAzNM,CAyNN,AAzNM,A/GwPF,O+GxPc,C/GwPR,AAAC,SAAQ,M+G/Bf,KAzNc,C/GwPO,AAAC,SAAQ,M+G/B9B;AC7NX,EhH6PA,SAAQ;AgH7PR,EhH8PA,O+GjCO,AAzNM,A/G0Pb,O+G1PyB,A/G0PlB,O+GjCI;AC7NX,EhH+PA,EAAI,qBAAe,KAAK,QAAO,G+G3QwB;AAAA,GAC7C,E/G2QT;A+G5QsD,G/G4QtD,Q+GnCM,AAvOM,A/G0QZ,Q+GnCU;AAzO4C;ACYvD,EhHiQA,SAAQ;AgHjQR,EhHkQA,O+GrCO,AAzNM,A/G8Pb,O+G9PyB,A/G8PlB,O+GrCI;AC7NX,EhHmQA,EAAI,qBAAe,KAAK,QAAO,G+G/QwB;A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Lsf2B,oBAAuB,AuL/epC,0CvL+e8D;AuLtf5E,GvLuf2B,EAAI,kCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,oBAAuB,AuL/epC,0CvL+e8D;AuLtf5E,GvLuf2B,EAAI,kCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvImBmB,cAAa;AuInBhC,GvLoa6B,AuL5Zf,4CvL4ZuC,QAAmB,EuL5Z1D;AARd,GvLoa6B,AuL5Zf,4CvL4ZuC,QAAmB,EuL5Z1B;AAR9C,GvLgfuB,uBC1XhB,AsL9GO,8CvLwe6D;AuLhf3E,GvLsf2B,oBAAuB,AuL9epC,0CvL8e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,oBAAuB,AuL9epC,0CvL8e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,oBAAuB,AuL9epC,0CvL8e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,oBAAuB,AuL9epC,0CvL8e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvImBmB,cAAa;AuInBhC,GvLoa6B,AuL3Zf,4CvL2ZuC,QAAmB,EuL3Z1D;AATd,GvLoa6B,AuL3Zf,4CvL2ZuC,QAAmB,EuL3Z1B;AAT9C,GvLgfuB,uBC1XhB,AsL7GO,8CvLue6D;AuLhf3E,GvLsf2B,oBAAuB,AuL7epC,0CvL6e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,oBAAuB,AuL7epC,0CvL6e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,+BACxC;AAAA,sBAAiB;AAAjB;AuLxfd,GvLsf2B,qBAAuB,AuL7epC,0CvL6e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,gCACxC;AAAA,uBAAiB;AAAjB;AuLxfd,GvLsf2B,qBAAuB,AuL7epC,0CvL6e8D;AuLtf5E,GvLuf2B,EAAI,mCAAuB,gCACxC;AAAA,uBAAiB;AAAjB;AuLxfd,GAWC,EAAI,eAAc,gBACJ;AAAA,IvIOI,cAAa;AuIPjB,IvLwZc,AuLxZd,4CvLwZsC,QAAmB,EuLxZzD;AAAA,IvLwZc,AuLxZd,4CvLwZsC,QAAmB,EuLxZvB;AAAlC,IvLoeQ,uBC1XhB,AsL1GQ,8CvLoe4D;AuLpe5D,IvL0eY,qBAAuB,AuL1enC,0CvL0e6D;AuL1e7D,IvL2eY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuL5eC,IvL0eY,qBAAuB,AuL1enC,0CvL0e6D;AuL1e7D,IvL2eY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuL5eC,IvL0eY,qBAAuB,AuL1enC,0CvL0e6D;AuL1e7D,IvL2eY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuL5eC,IvL0eY,qBAAuB,AuL1enC,0CvL0e6D;AuL1e7D,IvL2eY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuL5eC;AAZf,GAgBC,EAAI,eAAc,YACJ;AAAA,IvIEI,cAAa;AuIFjB,IvLmZc,AuLnZd,4CvLmZsC,QAAmB,EuLnZzD;AAAA,IvLmZc,AuLnZd,4CvLmZsC,QAAmB,EuLnZpB;AAArC,IvL+dQ,uBC1XhB,AsLrGQ,8CvL+d4D;AuL/d5D,IvLqeY,qBAAuB,AuLrenC,0CvLqe6D;AuLre7D,IvLseY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuLveC,IvLqeY,qBAAuB,AuLrenC,0CvLqe6D;AuLre7D,IvLseY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuLveC,IvLqeY,qBAAuB,AuLrenC,0CvLqe6D;AuLre7D,IvLseY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuLveC,IvLqeY,qBAAuB,AuLrenC,0CvLqe6D;AuLre7D,IvLseY,EAAI,mCAAuB,gCACxC;AAAA,wBAAiB;AAAjB;AuLveC;AAjBf,GAoBC,EAAI,eAAc,uBACJ;AAAA,IvIFI,cAAa;AuIEjB,IvL+Yc,AuL/Yd,4CvL+YsC,QAAmB,EuL/YzD;AAAA,IvL+Yc,AuL/Yd,4CvL+YsC,QAAmB,EuL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"
}